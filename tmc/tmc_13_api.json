swagger: '2.0'
info:
  description: Tanzu Mission Control.
  version: 0.0.1
  title: Swagger Tanzu Mission Control
host: <your_org>.tmc.cloud.vmware.com
schemes:
  - https
  - http
paths:
  /v1alpha1/account/credentials:iam/{fullName.name}:
    get:
      summary: Get policy for a Credential.
      operationId: CredentialIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.GetCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - CredentialIAMPolicy
    put:
      summary: Update (overwrite) policy for a Credential - deleted if body is empty.
      operationId: CredentialIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.UpdateCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          description: Credential policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - CredentialIAMPolicy
    patch:
      summary: Patch a Credential policy.
      operationId: CredentialIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialIAMPolicyRequest
      tags:
        - CredentialIAMPolicy
  /v1alpha1/account/credentials:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Credential.
      operationId: CredentialIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.TestCredentialIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.TestCredentialIAMPermissionsRequest
      tags:
        - CredentialIAMPolicy
  /v1alpha1/account/credentials:permissiontemplate:
    post:
      summary: |-
        Generate a new permission template to create/bootstrap a credential in a
        provider account for a credential that does not exist already.
      operationId: PermissionTemplateService_Generate
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.GeneratePermissionTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.GeneratePermissionTemplateRequest
      tags:
        - PermissionTemplateService
  /v1alpha1/account/credentials:permissiontemplate/{fullName.name}:
    get:
      summary: Get the latest permission template for an existing credential.
      operationId: PermissionTemplateService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.GetPermissionTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: capability
          description: The Tanzu capability for which the credential shall be used.
          in: query
          required: false
          type: string
        - name: provider
          description: |-
            The infrastructure provider that the permission template is for.

             - PROVIDER_UNSPECIFIED: Unspecified credential provider (default).
             - AWS_EC2: AmazonWeb Services EC2.
             - GENERIC_S3: Generic S3 provider.
             - AZURE_AD: Azure Active Directory.
             - AWS_EKS: AWS EKS.
             - AZURE_AKS: Azure AKS.
             - GENERIC_KEY_VALUE: Generic key value pair.
          in: query
          required: false
          type: string
          enum:
            - PROVIDER_UNSPECIFIED
            - AWS_EC2
            - GENERIC_S3
            - AZURE_AD
            - AWS_EKS
            - AZURE_AKS
            - GENERIC_KEY_VALUE
          default: PROVIDER_UNSPECIFIED
      tags:
        - PermissionTemplateService
  /v1alpha1/account/credentials:
    get:
      summary: List Credentials.
      operationId: CredentialResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.ListCredentialsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.capability
          description: Filter credentials by a capability; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provider
          description: Filter credentials by a provider; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - CredentialResourceService
    post:
      summary: Create a Credential.
      operationId: CredentialResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.CreateCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.CreateCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/credentials/{credential.fullName.name}:
    put:
      summary: Update (overwrite) a Credential.
      operationId: CredentialResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.UpdateCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: credential.fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.UpdateCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/credentials/{fullName.name}:
    get:
      summary: Get a Credential.
      operationId: CredentialResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.GetCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - CredentialResourceService
    delete:
      summary: Delete a Credential.
      operationId: CredentialResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.DeleteCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - CredentialResourceService
    patch:
      summary: Patch (partially update) a Credential.
      operationId: CredentialResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/managementcluster/credentials:iam/{fullName.name}:
    get:
      summary: Get policy for a Credential.
      operationId: CredentialIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GetCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Organization ID.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
      tags:
        - CredentialIAMPolicy
    put:
      summary: Update (overwrite) policy for a Credential - deleted if body is empty.
      operationId: CredentialIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.UpdateCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          description: Credential policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: Organization ID.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
      tags:
        - CredentialIAMPolicy
    patch:
      summary: Patch a Credential policy.
      operationId: CredentialIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialIAMPolicyRequest
      tags:
        - CredentialIAMPolicy
  /v1alpha1/account/managementcluster/credentials:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Credential.
      operationId: CredentialIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.TestCredentialIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.TestCredentialIAMPermissionsRequest
      tags:
        - CredentialIAMPolicy
  /v1alpha1/account/managementcluster/credentials:permissiontemplate:
    post:
      summary: |-
        Generate a new permission template to create/bootstrap a credential in a
        provider account for a credential that does not exist already.
      operationId: PermissionTemplateService_Generate
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GeneratePermissionTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GeneratePermissionTemplateRequest
      tags:
        - PermissionTemplateService
  /v1alpha1/account/managementcluster/credentials:permissiontemplate/{fullName.name}:
    get:
      summary: Get the latest permission template for an existing credential.
      operationId: PermissionTemplateService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GetPermissionTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Organization ID.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: provider
          description: |-
            The infrastructure provider that the permission template is for.

             - PROVIDER_UNSPECIFIED: Unspecified credential provider (default).
             - AWS_EC2: AmazonWeb Services EC2.
             - GENERIC_S3: Generic S3 provider.
             - AZURE_AD: Azure Active Directory.
             - AWS_EKS: AWS EKS.
             - AZURE_AKS: Azure AKS.
             - GENERIC_KEY_VALUE: Generic key value pair.
          in: query
          required: false
          type: string
          enum:
            - PROVIDER_UNSPECIFIED
            - AWS_EC2
            - GENERIC_S3
            - AZURE_AD
            - AWS_EKS
            - AZURE_AKS
            - GENERIC_KEY_VALUE
          default: PROVIDER_UNSPECIFIED
      tags:
        - PermissionTemplateService
  /v1alpha1/account/managementcluster/credentials:
    get:
      summary: List Credentials.
      operationId: CredentialResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.ListCredentialsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provider
          description: Filter credentials by a provider; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - CredentialResourceService
    post:
      summary: Create a Credential.
      operationId: CredentialResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.CreateCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.CreateCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/managementcluster/credentials/{credential.fullName.name}:
    put:
      summary: Update (overwrite) a Credential.
      operationId: CredentialResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.UpdateCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: credential.fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.UpdateCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/managementcluster/credentials/{fullName.name}:
    get:
      summary: Get a Credential.
      operationId: CredentialResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GetCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Organization ID.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
      tags:
        - CredentialResourceService
    delete:
      summary: Delete a Credential.
      operationId: CredentialResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.DeleteCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Organization ID.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
      tags:
        - CredentialResourceService
    patch:
      summary: Patch (partially update) a Credential.
      operationId: CredentialResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/managementcluster/provisioner/credentials:iam/{fullName.name}:
    get:
      summary: Get policy for a Credential.
      operationId: CredentialIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GetCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the Provisioner.
          in: query
          required: false
          type: string
      tags:
        - CredentialIAMPolicy
    put:
      summary: Update (overwrite) policy for a Credential - deleted if body is empty.
      operationId: CredentialIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.UpdateCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          description: Credential policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the Provisioner.
          in: query
          required: false
          type: string
      tags:
        - CredentialIAMPolicy
    patch:
      summary: Patch a Credential policy.
      operationId: CredentialIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialIAMPolicyRequest
      tags:
        - CredentialIAMPolicy
  /v1alpha1/account/managementcluster/provisioner/credentials:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Credential.
      operationId: CredentialIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.TestCredentialIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.TestCredentialIAMPermissionsRequest
      tags:
        - CredentialIAMPolicy
  /v1alpha1/account/managementcluster/provisioner/credentials:permissiontemplate:
    post:
      summary: |-
        Generate a new permission template to create/bootstrap a credential in a
        provider account for a credential that does not exist already.
      operationId: PermissionTemplateService_Generate
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GeneratePermissionTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GeneratePermissionTemplateRequest
      tags:
        - PermissionTemplateService
  /v1alpha1/account/managementcluster/provisioner/credentials:permissiontemplate/{fullName.name}:
    get:
      summary: Get the latest permission template for an existing credential.
      operationId: PermissionTemplateService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GetPermissionTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the Provisioner.
          in: query
          required: false
          type: string
        - name: provider
          description: |-
            The infrastructure provider that the permission template is for.

             - PROVIDER_UNSPECIFIED: Unspecified credential provider (default).
             - AWS_EC2: AmazonWeb Services EC2.
             - GENERIC_S3: Generic S3 provider.
             - AZURE_AD: Azure Active Directory.
             - AWS_EKS: AWS EKS.
             - AZURE_AKS: Azure AKS.
             - GENERIC_KEY_VALUE: Generic key value pair.
          in: query
          required: false
          type: string
          enum:
            - PROVIDER_UNSPECIFIED
            - AWS_EC2
            - GENERIC_S3
            - AZURE_AD
            - AWS_EKS
            - AZURE_AKS
            - GENERIC_KEY_VALUE
          default: PROVIDER_UNSPECIFIED
      tags:
        - PermissionTemplateService
  /v1alpha1/account/managementcluster/provisioner/credentials:
    get:
      summary: List Credentials.
      operationId: CredentialResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.ListCredentialsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provider
          description: Filter credentials by a provider; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - CredentialResourceService
    post:
      summary: Create a Credential.
      operationId: CredentialResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.CreateCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.CreateCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/managementcluster/provisioner/credentials/{credential.fullName.name}:
    put:
      summary: Update (overwrite) a Credential.
      operationId: CredentialResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.UpdateCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: credential.fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.UpdateCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/account/managementcluster/provisioner/credentials/{fullName.name}:
    get:
      summary: Get a Credential.
      operationId: CredentialResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GetCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the Provisioner.
          in: query
          required: false
          type: string
      tags:
        - CredentialResourceService
    delete:
      summary: Delete a Credential.
      operationId: CredentialResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.DeleteCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the Provisioner.
          in: query
          required: false
          type: string
      tags:
        - CredentialResourceService
    patch:
      summary: Patch (partially update) a Credential.
      operationId: CredentialResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this credential.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialRequest
      tags:
        - CredentialResourceService
  /v1alpha1/agentartifacts:
    get:
      summary: The RPC to list all the image artifacts supported by TMC.
      operationId: AgentArtifactsService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.agentartifacts.ListAgentArtifactsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.extensionName
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - AgentArtifactsService
  /v1alpha1/aksclusters:apply:
    post:
      summary: Apply a AksCluster.
      operationId: AksClusterApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ApplyAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ApplyAksClusterRequest
      tags:
        - AksClusterApplyHelper
  /v1alpha1/aksclusters:iam/{fullName.name}:
    get:
      summary: Get policy for a AksCluster.
      operationId: AksClusterIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.GetAksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
      tags:
        - AksClusterIAMPolicy
    put:
      summary: Update (overwrite) policy for an AksCluster - deleted if body is empty.
      operationId: AksClusterIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.UpdateAksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          description: AksCluster policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
      tags:
        - AksClusterIAMPolicy
    patch:
      summary: Patch an AksCluster policy.
      operationId: AksClusterIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterIAMPolicyRequest
      tags:
        - AksClusterIAMPolicy
  /v1alpha1/aksclusters:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a AksCluster.
      operationId: AksClusterIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.TestAksClusterIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.TestAksClusterIAMPermissionsRequest
      tags:
        - AksClusterIAMPolicy
  /v1alpha1/aksclusters:options:
    get:
      summary: List akscluster options.
      operationId: AksClusterOptions_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ListAksClusterOptionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: credentialName
          description: Name of this credential.
          in: query
          required: false
          type: string
        - name: subscriptionId
          description: ID of Azure subscription for the cluster options.
          in: query
          required: false
          type: string
      tags:
        - AksClusterOptions
  /v1alpha1/aksclusters:
    get:
      summary: List AksClusters.
      operationId: AksClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ListAksClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.credentialName
          description: >-
            Scope search to the specified credential_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.subscriptionId
          description: >-
            Scope search to the specified subscription_id; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.resourceGroupName
          description: >-
            Scope search to the specified resource_group_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - AksClusterResourceService
    post:
      summary: Create an AksCluster.
      operationId: AksClusterResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.CreateAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.CreateAksClusterRequest
      tags:
        - AksClusterResourceService
  /v1alpha1/aksclusters/{aksCluster.fullName.name}:
    put:
      summary: Update (overwrite) an AksCluster.
      operationId: AksClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.UpdateAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: aksCluster.fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.UpdateAksClusterRequest
      tags:
        - AksClusterResourceService
  /v1alpha1/aksclusters/{fullName.name}:
    get:
      summary: Get an AksCluster.
      operationId: AksClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.GetAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
      tags:
        - AksClusterResourceService
    delete:
      summary: Delete an AksCluster.
      operationId: AksClusterResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.DeleteAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - AksClusterResourceService
    patch:
      summary: Patch (partially update) an AksCluster.
      operationId: AksClusterResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterRequest
      tags:
        - AksClusterResourceService
  /v1alpha1/aksclusters/{nodepool.fullName.aksClusterName}/nodepools:apply:
    post:
      summary: Apply a Nodepool.
      operationId: NodepoolApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ApplyNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ApplyNodepoolRequest
      tags:
        - NodepoolApplyHelper
  /v1alpha1/aksclusters/{fullName.aksClusterName}/nodepools:iam/{fullName.name}:
    get:
      summary: Get policy for a Nodepool.
      operationId: NodepoolIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.GetNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Resource group name of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolIAMPolicy
    put:
      summary: Update (overwrite) policy for a Nodepool - deleted if body is empty.
      operationId: NodepoolIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpdateNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          description: Nodepool policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Resource group name of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolIAMPolicy
    patch:
      summary: Patch a Nodepool policy.
      operationId: NodepoolIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolIAMPolicyRequest
      tags:
        - NodepoolIAMPolicy
  /v1alpha1/aksclusters/{fullName.aksClusterName}/nodepools:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Nodepool.
      operationId: NodepoolIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.TestNodepoolIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.TestNodepoolIAMPermissionsRequest
      tags:
        - NodepoolIAMPolicy
  /v1alpha1/aksclusters/{fullName.aksClusterName}/nodepools/{fullName.name}:
    get:
      summary: Get a Nodepool.
      operationId: NodepoolResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.GetNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Resource group name of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    delete:
      summary: Delete a Nodepool.
      operationId: NodepoolResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.DeleteNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Resource group name of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    patch:
      summary: Patch (partially update) a Nodepool.
      operationId: NodepoolResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/aksclusters/{nodepool.fullName.aksClusterName}/nodepools:
    post:
      summary: Create a Nodepool.
      operationId: NodepoolResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.CreateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.CreateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/aksclusters/{nodepool.fullName.aksClusterName}/nodepools/{nodepool.fullName.name}:
    put:
      summary: Update (overwrite) a Nodepool.
      operationId: NodepoolResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpdateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpdateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/aksclusters/{searchScope.aksClusterName}/nodepools:
    get:
      summary: List Nodepools.
      operationId: NodepoolResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ListNodepoolsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.aksClusterName
          description: Name of the AKS cluster.
          in: path
          required: true
          type: string
        - name: searchScope.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: searchScope.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: searchScope.resourceGroupName
          description: Resource group name of the cluster.
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - NodepoolResourceService
  /v1alpha1/audits:
    get:
      summary: List Audits.
      operationId: AuditResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.audit.ListAuditsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - AuditResourceService
    post:
      summary: Create an Audit.
      operationId: AuditResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.audit.CreateAuditResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.audit.CreateAuditRequest
      tags:
        - AuditResourceService
  /v1alpha1/audits/{fullName.name}:
    get:
      summary: Get an Audit.
      operationId: AuditResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.GetAuditResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the audit run (id).
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of the organization.
          in: query
          required: false
          type: string
      tags:
        - AuditResourceService
    delete:
      summary: Delete an Audit.
      operationId: AuditResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.audit.DeleteAuditResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the audit run (id).
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of the organization.
          in: query
          required: false
          type: string
      tags:
        - AuditResourceService
  /v1alpha1/clusters/{fullName.name}/adminkubeconfig:
    get:
      summary: Get cluster admin kubeconfig.
      operationId: AdminKubeconfigService_GetAdminKubeconfig
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.adminkubeconfig.GetAdminKubeconfigResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
        - name: encryptionKey.PublicKeyPem
          description: The RSA public key encoded in PEM format.
          in: query
          required: false
          type: string
        - name: encryptionKey.timestamp
          description: The timestamp as when the keys were generated.
          in: query
          required: false
          type: string
          format: date-time
      tags:
        - AdminKubeconfigService
  /v1alpha1/clusters/{clusterUid}/auth/token:
    post:
      summary: >-
        Review a token to validate it and look up users/groups.

        This API is configured as a webhook on the apiserver and expects
        request/response in the specified format-

        https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
      operationId: TokenService_Review
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: clusterUid
          description: ClusterUID is the UID for the cluster.
          in: path
          required: true
          type: string
        - name: body
          description: Body is the body of the webhook request.
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewRequest.Body
        - name: userIdAsGroup
          description: >-
            UserIDAsGroup flag is used to determine whether to return the user
            ID as part of group in the response.

            This is needed as pinniped doesn't support UID as part of UserInfo
            and would allow us to still keep

            track of it by adding it as a part of the group.
          in: query
          required: false
          type: boolean
      tags:
        - TokenService
  /v1alpha1/clusters:apply:
    post:
      summary: Apply a Cluster.
      operationId: ClusterApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ApplyClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ApplyClusterRequest
      tags:
        - ClusterApplyHelper
  /v1alpha1/clusters:manifest/{fullName.name}:
    get:
      summary: Get attach manifest for a cluster.
      operationId: ClusterManifestHelper_GetManifest
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ClusterManifestGetResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterManifestHelper
  /v1alpha1/clusters:reattach/{fullName.name}:
    post:
      summary: Reattach a cluster.
      operationId: ClusterReattachHelper_Reattach
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ClusterReattachResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ClusterReattachRequest
      tags:
        - ClusterReattachHelper
  /v1alpha1/clusters:iam/{fullName.name}:
    get:
      summary: Get policy for a Cluster.
      operationId: ClusterIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.GetClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterIAMPolicy
    put:
      summary: Update (overwrite) policy for a Cluster - deleted if body is empty.
      operationId: ClusterIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.UpdateClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          description: Cluster policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterIAMPolicy
    patch:
      summary: Patch a Cluster policy.
      operationId: ClusterIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.PatchClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.PatchClusterIAMPolicyRequest
      tags:
        - ClusterIAMPolicy
  /v1alpha1/clusters:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Cluster.
      operationId: ClusterIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.TestClusterIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.TestClusterIAMPermissionsRequest
      tags:
        - ClusterIAMPolicy
  /v1alpha1/clusters:options:
    get:
      summary: List cluster options.
      operationId: ClusterOptions_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ListClusterOptionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: managementClusterName
          description: Name of the ManagementCluster.
          in: query
          required: false
          type: string
        - name: provisionerName
          description: Name of the Provisioner.
          in: query
          required: false
          type: string
        - name: credentialName
          description: Name of this credential.
          in: query
          required: false
          type: string
      tags:
        - ClusterOptions
  /v1alpha1/clusters:
    get:
      summary: List Clusters.
      operationId: ClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.ListClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ClusterResourceService
    post:
      summary: Create a Cluster.
      operationId: ClusterResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.CreateClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.CreateClusterRequest
      tags:
        - ClusterResourceService
  /v1alpha1/clusters/{cluster.fullName.name}:
    put:
      summary: Update (overwrite) a Cluster.
      operationId: ClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.UpdateClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: cluster.fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.UpdateClusterRequest
      tags:
        - ClusterResourceService
  /v1alpha1/clusters/{fullName.name}:
    get:
      summary: Get a Cluster.
      operationId: ClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.GetClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - ClusterResourceService
    delete:
      summary: Delete a Cluster.
      operationId: ClusterResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.DeleteClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - ClusterResourceService
    patch:
      summary: Patch (partially update) a Cluster.
      operationId: ClusterResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.PatchClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.PatchClusterRequest
      tags:
        - ClusterResourceService
  /v1alpha1/clusters/{backup.fullName.clusterName}/dataprotection/backups:
    post:
      summary: Create a Backup.
      operationId: BackupResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.CreateBackupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: backup.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.CreateBackupRequest
      tags:
        - BackupResourceService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection/backups/{fullName.name}:
    get:
      summary: Get a Backup.
      operationId: BackupResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.GetBackupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - BackupResourceService
    delete:
      summary: Delete a Backup.
      operationId: BackupResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.DeleteBackupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - BackupResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/dataprotection/backups:
    get:
      summary: List Backups.
      operationId: BackupResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.ListBackupsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - BackupResourceService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection/backup/{fullName.name}/resources:
    get:
      summary: The RPC to list all the resources present in a backup.
      operationId: BackupResourcesService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.resources.ListBackupResourcesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Backup.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to resources in the specified namespace; supports
            globbing.

            An empty string indicates cluster-scoped resources. The default
            value is NOT all; use '*' for that.
          in: query
          required: false
          type: string
        - name: searchScope.gvk
          description: >-
            Scope search to resources of the specified GroupVersionKind;
            supports globbing; default (*).
          in: query
          required: false
          type: string
      tags:
        - BackupResourcesService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection/backuplocations/{fullName.name}:
    get:
      summary: Get a BackupLocation.
      operationId: BackupLocationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.GetBackupLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Backup Location.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - BackupLocationResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/dataprotection/backuplocations:
    get:
      summary: List BackupLocations.
      operationId: BackupLocationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.ListBackupLocationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - BackupLocationResourceService
  /v1alpha1/clusters/{dataProtection.fullName.clusterName}/dataprotection:
    post:
      summary: Create a DataProtection.
      operationId: DataProtectionResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.CreateDataProtectionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: dataProtection.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.CreateDataProtectionRequest
      tags:
        - DataProtectionResourceService
    put:
      summary: Update (overwrite) a DataProtection.
      operationId: DataProtectionResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.UpdateDataProtectionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: dataProtection.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.UpdateDataProtectionRequest
      tags:
        - DataProtectionResourceService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection:
    delete:
      summary: Delete a DataProtection.
      operationId: DataProtectionResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DeleteDataProtectionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
        - name: deleteBackups
          description: >-
            Delete all backup files associated with this cluster from the backup
            storage location.
          in: query
          required: false
          type: boolean
      tags:
        - DataProtectionResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/dataprotection:
    get:
      summary: List DataProtections.
      operationId: DataProtectionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.ListDataProtectionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - DataProtectionResourceService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection/restores/{fullName.name}:
    get:
      summary: Get a Restore.
      operationId: RestoreResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.GetRestoreResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Restore.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - RestoreResourceService
    delete:
      summary: Delete a Restore.
      operationId: RestoreResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.DeleteRestoreResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Restore.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - RestoreResourceService
  /v1alpha1/clusters/{restore.fullName.clusterName}/dataprotection/restores:
    post:
      summary: Create a Restore.
      operationId: RestoreResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.CreateRestoreResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: restore.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.CreateRestoreRequest
      tags:
        - RestoreResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/dataprotection/restores:
    get:
      summary: List Restores.
      operationId: RestoreResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.ListRestoresResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - RestoreResourceService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection/schedules/{fullName.name}:
    get:
      summary: Get a Schedule.
      operationId: ScheduleResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.GetScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
    delete:
      summary: Delete a Schedule.
      operationId: ScheduleResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.DeleteScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{schedule.fullName.clusterName}/dataprotection/schedules:
    post:
      summary: Create a Schedule.
      operationId: ScheduleResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.CreateScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: schedule.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.CreateScheduleRequest
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{schedule.fullName.clusterName}/dataprotection/schedules/{schedule.fullName.name}:
    put:
      summary: Update (overwrite) a Schedule.
      operationId: ScheduleResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.UpdateScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: schedule.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: schedule.fullName.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.UpdateScheduleRequest
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/dataprotection/schedules:
    get:
      summary: List Schedules.
      operationId: ScheduleResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.ListSchedulesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{fullName.clusterName}/dataprotection/snapshotlocations/{fullName.name}:
    get:
      summary: Get a SnapshotLocation.
      operationId: SnapshotLocationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.GetSnapshotLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Snapshot Location.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SnapshotLocationResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/dataprotection/snapshotlocations:
    get:
      summary: List SnapshotLocations.
      operationId: SnapshotLocationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.ListSnapshotLocationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SnapshotLocationResourceService
  /v1alpha1/clusters/{fullName.clusterName}/extensions/{fullName.name}:
    get:
      summary: Get an Extension.
      operationId: ExtensionResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.GetExtensionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Unique identifier of this Extension.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - ExtensionResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/extensions:
    get:
      summary: List Extensions.
      operationId: ExtensionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.ListExtensionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ExtensionResourceService
  /v1alpha1/clusters/{continuousDelivery.fullName.clusterName}/fluxcd/continuousdelivery:
    post:
      summary: Create a ContinuousDelivery.
      operationId: ContinuousDeliveryResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.CreateContinuousDeliveryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: continuousDelivery.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.CreateContinuousDeliveryRequest
      tags:
        - ContinuousDeliveryResourceService
  /v1alpha1/clusters/{fullName.clusterName}/fluxcd/continuousdelivery:
    delete:
      summary: Delete a ContinuousDelivery.
      operationId: ContinuousDeliveryResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.DeleteContinuousDeliveryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ContinuousDeliveryResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/fluxcd/continuousdelivery:
    get:
      summary: List ContinuousDeliveries.
      operationId: ContinuousDeliveryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.ListContinuousDeliveriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ContinuousDeliveryResourceService
  /v1alpha1/clusters/{fullName.clusterName}/fluxcd/helm:
    delete:
      summary: Delete a Helm.
      operationId: HelmResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.DeleteHelmResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - HelmResourceService
  /v1alpha1/clusters/{helm.fullName.clusterName}/fluxcd/helm:
    post:
      summary: Create a Helm.
      operationId: HelmResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.CreateHelmResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: helm.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.CreateHelmRequest
      tags:
        - HelmResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/fluxcd/helm:
    get:
      summary: List Helms.
      operationId: HelmResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.ListHelmsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - HelmResourceService
  /v1alpha1/clusters/{sourceSecret.fullName.clusterName}/fluxcd/sourcesecrets:apply:
    post:
      summary: Apply a SourceSecret.
      operationId: SourceSecretApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.ApplySourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sourceSecret.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.ApplySourceSecretRequest
      tags:
        - SourceSecretApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/fluxcd/sourcesecrets/{fullName.name}:
    get:
      summary: Get a SourceSecret.
      operationId: SourceSecretResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.GetSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Source Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SourceSecretResourceService
    delete:
      summary: Delete a SourceSecret.
      operationId: SourceSecretResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.DeleteSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Source Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SourceSecretResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/fluxcd/sourcesecrets:
    get:
      summary: List SourceSecrets.
      operationId: SourceSecretResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.ListSourceSecretsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SourceSecretResourceService
  /v1alpha1/clusters/{sourceSecret.fullName.clusterName}/fluxcd/sourcesecrets:
    post:
      summary: Create a SourceSecret.
      operationId: SourceSecretResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.CreateSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sourceSecret.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.CreateSourceSecretRequest
      tags:
        - SourceSecretResourceService
  /v1alpha1/clusters/{sourceSecret.fullName.clusterName}/fluxcd/sourcesecrets/{sourceSecret.fullName.name}:
    put:
      summary: Update (overwrite) a SourceSecret.
      operationId: SourceSecretResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.UpdateSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sourceSecret.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: sourceSecret.fullName.name
          description: Name of Source Secret.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.UpdateSourceSecretRequest
      tags:
        - SourceSecretResourceService
  /v1alpha1/clusters/{fullName.clusterName}/inspection/scans/{fullName.name}:
    get:
      summary: Get a Scan.
      operationId: ScanResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.GetScanResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the inspection scan.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Org ID of the inspection scan.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ScanResourceService
    delete:
      summary: Delete a Scan.
      operationId: ScanResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.DeleteScanResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the inspection scan.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Org ID of the inspection scan.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ScanResourceService
  /v1alpha1/clusters/{scan.fullName.clusterName}/inspection/scans:
    post:
      summary: Create a Scan.
      operationId: ScanResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CreateScanResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: scan.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CreateScanRequest
      tags:
        - ScanResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/inspection/scans:
    get:
      summary: List Scans.
      operationId: ScanResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ListScansResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ScanResourceService
  /v1alpha1/clusters/{fullName.clusterName}/inspection/schedules/{fullName.name}:
    get:
      summary: Get a Schedule.
      operationId: ScheduleResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.GetScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Inspection Schedule.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
    delete:
      summary: Delete a Schedule.
      operationId: ScheduleResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.DeleteScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Inspection Schedule.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{schedule.fullName.clusterName}/inspection/schedules:
    post:
      summary: Create a Schedule.
      operationId: ScheduleResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.CreateScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: schedule.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.CreateScheduleRequest
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/inspection/schedules:
    get:
      summary: List Schedules.
      operationId: ScheduleResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.ListSchedulesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ScheduleResourceService
  /v1alpha1/clusters/{fullName.clusterName}/integrations/{fullName.name}:
    get:
      summary: Get an Integration.
      operationId: IntegrationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.GetIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the cluster provisioner.
          in: query
          required: false
          type: string
      tags:
        - IntegrationResourceService
    delete:
      summary: Delete an Integration.
      operationId: IntegrationResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.DeleteIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the cluster provisioner.
          in: query
          required: false
          type: string
      tags:
        - IntegrationResourceService
    patch:
      summary: Patch (partially update) an Integration.
      operationId: IntegrationResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.PatchIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.PatchIntegrationRequest
      tags:
        - IntegrationResourceService
  /v1alpha1/clusters/{integration.fullName.clusterName}/integrations:
    post:
      summary: Create an Integration.
      operationId: IntegrationResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.CreateIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: integration.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.CreateIntegrationRequest
      tags:
        - IntegrationResourceService
  /v1alpha1/clusters/{integration.fullName.clusterName}/integrations/{integration.fullName.name}:
    put:
      summary: Update (overwrite) an Integration.
      operationId: IntegrationResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.UpdateIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: integration.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: integration.fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.UpdateIntegrationRequest
      tags:
        - IntegrationResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/integrations:
    get:
      summary: List Integrations.
      operationId: IntegrationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.ListIntegrationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - IntegrationResourceService
  /v1alpha1/clusters/{fullName.name}/kubeconfig:
    get:
      summary: Get cluster kubeconfig.
      operationId: KubeconfigService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.kubeconfig.GetKubeconfigResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
        - name: namespace
          description: >-
            Namespace option to get kubeconfig for a specific namespace. It is
            optional. If not specified, the cluster

            kubeconfig will be returned. Specifying a namespace is mainly for
            application developers who have access to a

            workspace and certain namespaces in a cluster to get a kubeconfig to
            access that cluster.
          in: query
          required: false
          type: string
        - name: cli
          description: >-
            CliType will help identify the appropriate kubeconfig to be returned
            for CLI application.

             - TMC_CLI: TMC_CLI platform.
             - TANZU_CLI: TANZU_CLI platform.
             - TANZU_OPERATIONS_CLI: TANZU_OPERATIONS_CLI.
          in: query
          required: false
          type: string
          enum:
            - TMC_CLI
            - TANZU_CLI
            - TANZU_OPERATIONS_CLI
          default: TMC_CLI
      tags:
        - KubeconfigService
  /v1alpha1/clusters/{gitRepository.fullName.clusterName}/namespaces/{gitRepository.fullName.namespaceName}/fluxcd/gitrepositories:apply:
    post:
      summary: Apply a GitRepository.
      operationId: GitRepositoryApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.ApplyGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: gitRepository.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: gitRepository.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.ApplyGitRepositoryRequest
      tags:
        - GitRepositoryApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/fluxcd/gitrepositories/{fullName.name}:
    get:
      summary: Get a GitRepository.
      operationId: GitRepositoryResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GetGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - GitRepositoryResourceService
    delete:
      summary: Delete a GitRepository.
      operationId: GitRepositoryResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.DeleteGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clusters/{gitRepository.fullName.clusterName}/namespaces/{gitRepository.fullName.namespaceName}/fluxcd/gitrepositories:
    post:
      summary: Create a GitRepository.
      operationId: GitRepositoryResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.CreateGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: gitRepository.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: gitRepository.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.CreateGitRepositoryRequest
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clusters/{gitRepository.fullName.clusterName}/namespaces/{gitRepository.fullName.namespaceName}/fluxcd/gitrepositories/{gitRepository.fullName.name}:
    put:
      summary: Update (overwrite) a GitRepository.
      operationId: GitRepositoryResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.UpdateGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: gitRepository.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: gitRepository.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: gitRepository.fullName.name
          description: Name of the Repository.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.UpdateGitRepositoryRequest
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/fluxcd/gitrepositories:
    get:
      summary: List GitRepositories.
      operationId: GitRepositoryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.ListGitRepositoriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clusters/{release.fullName.clusterName}/namespaces/{release.fullName.namespaceName}/fluxcd/helm/releases:apply:
    post:
      summary: Apply a Release.
      operationId: ReleaseApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ApplyReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: release.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: release.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ApplyReleaseRequest
      tags:
        - ReleaseApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/fluxcd/helm/releases/{fullName.name}:
    get:
      summary: Get a Release.
      operationId: ReleaseResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.GetReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Release.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ReleaseResourceService
    delete:
      summary: Delete a Release.
      operationId: ReleaseResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.DeleteReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Release.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - ReleaseResourceService
  /v1alpha1/clusters/{release.fullName.clusterName}/namespaces/{release.fullName.namespaceName}/fluxcd/helm/releases:
    post:
      summary: Create a Release.
      operationId: ReleaseResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.CreateReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: release.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: release.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.CreateReleaseRequest
      tags:
        - ReleaseResourceService
  /v1alpha1/clusters/{release.fullName.clusterName}/namespaces/{release.fullName.namespaceName}/fluxcd/helm/releases/{release.fullName.name}:
    put:
      summary: Update (overwrite) a Release.
      operationId: ReleaseResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.UpdateReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: release.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: release.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: release.fullName.name
          description: Name of the Release.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.UpdateReleaseRequest
      tags:
        - ReleaseResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/fluxcd/helm/releases:
    get:
      summary: List Releases.
      operationId: ReleaseResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ListReleasesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ReleaseResourceService
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/fluxcd/helm/repositories/{fullName.name}:
    get:
      summary: Get a Repository.
      operationId: RepositoryResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.GetRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the helm repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - RepositoryResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/fluxcd/helm/repositories:
    get:
      summary: List Repositories.
      operationId: RepositoryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.ListRepositoriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - RepositoryResourceService
  /v1alpha1/clusters/{kustomization.fullName.clusterName}/namespaces/{kustomization.fullName.namespaceName}/fluxcd/kustomizations:apply:
    post:
      summary: Apply a Kustomization.
      operationId: KustomizationApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.ApplyKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: kustomization.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: kustomization.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.ApplyKustomizationRequest
      tags:
        - KustomizationApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/fluxcd/kustomizations/{fullName.name}:
    get:
      summary: Get a Kustomization.
      operationId: KustomizationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.GetKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Kustomization.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - KustomizationResourceService
    delete:
      summary: Delete a Kustomization.
      operationId: KustomizationResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.DeleteKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Kustomization.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - KustomizationResourceService
  /v1alpha1/clusters/{kustomization.fullName.clusterName}/namespaces/{kustomization.fullName.namespaceName}/fluxcd/kustomizations:
    post:
      summary: Create a Kustomization.
      operationId: KustomizationResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.CreateKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: kustomization.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: kustomization.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.CreateKustomizationRequest
      tags:
        - KustomizationResourceService
  /v1alpha1/clusters/{kustomization.fullName.clusterName}/namespaces/{kustomization.fullName.namespaceName}/fluxcd/kustomizations/{kustomization.fullName.name}:
    put:
      summary: Update (overwrite) a Kustomization.
      operationId: KustomizationResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.UpdateKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: kustomization.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: kustomization.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: kustomization.fullName.name
          description: Name of the Kustomization.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.UpdateKustomizationRequest
      tags:
        - KustomizationResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/fluxcd/kustomizations:
    get:
      summary: List Kustomizations.
      operationId: KustomizationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.ListKustomizationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - KustomizationResourceService
  /v1alpha1/clusters/{namespace.fullName.clusterName}/namespaces:apply:
    post:
      summary: Apply a Namespace.
      operationId: NamespaceApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.ApplyNamespaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: namespace.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.ApplyNamespaceRequest
      tags:
        - NamespaceApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces:iam/{fullName.name}:
    get:
      summary: Get policy for a Namespace.
      operationId: NamespaceIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.GetNamespaceIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - NamespaceIAMPolicy
    put:
      summary: Update (overwrite) policy for a Namespace - deleted if body is empty.
      operationId: NamespaceIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.UpdateNamespaceIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          description: Namespace policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - NamespaceIAMPolicy
    patch:
      summary: Patch a Namespace policy.
      operationId: NamespaceIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.PatchNamespaceIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.PatchNamespaceIAMPolicyRequest
      tags:
        - NamespaceIAMPolicy
  /v1alpha1/clusters/{fullName.clusterName}/namespaces:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Namespace.
      operationId: NamespaceIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.TestNamespaceIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.TestNamespaceIAMPermissionsRequest
      tags:
        - NamespaceIAMPolicy
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.name}:
    get:
      summary: Get a Namespace.
      operationId: NamespaceResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.GetNamespaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - NamespaceResourceService
    delete:
      summary: Delete a Namespace.
      operationId: NamespaceResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.DeleteNamespaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of ManagementCluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - NamespaceResourceService
  /v1alpha1/clusters/{namespace.fullName.clusterName}/namespaces:
    post:
      summary: Create a Namespace.
      operationId: NamespaceResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.CreateNamespaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: namespace.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.CreateNamespaceRequest
      tags:
        - NamespaceResourceService
  /v1alpha1/clusters/{namespace.fullName.clusterName}/namespaces/{namespace.fullName.name}:
    put:
      summary: Update (overwrite) a Namespace.
      operationId: NamespaceResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.UpdateNamespaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: namespace.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: namespace.fullName.name
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.UpdateNamespaceRequest
      tags:
        - NamespaceResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces:
    get:
      summary: List Namespaces.
      operationId: NamespaceResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.ListNamespacesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.workspaceName
          description: Filter by workspace name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - NamespaceResourceService
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/secrets/{fullName.name}:
    get:
      summary: Get a Secret.
      operationId: SecretResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.GetSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SecretResourceService
    delete:
      summary: Delete a Secret.
      operationId: SecretResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.DeleteSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SecretResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/secrets:
    get:
      summary: List Secrets.
      operationId: SecretResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.ListSecretsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.secretType
          description: Filter by secret type; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SecretResourceService
  /v1alpha1/clusters/{secret.fullName.clusterName}/namespaces/{secret.fullName.namespaceName}/secrets:
    post:
      summary: Create a Secret.
      operationId: SecretResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.CreateSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: secret.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: secret.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.CreateSecretRequest
      tags:
        - SecretResourceService
  /v1alpha1/clusters/{secret.fullName.clusterName}/namespaces/{secret.fullName.namespaceName}/secrets/{secret.fullName.name}:
    put:
      summary: Update (overwrite) a Secret.
      operationId: SecretResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.UpdateSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: secret.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: secret.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: secret.fullName.name
          description: Name of the Secret.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.UpdateSecretRequest
      tags:
        - SecretResourceService
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/secretexports/{fullName.name}:
    get:
      summary: Get a SecretExport.
      operationId: SecretExportResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.GetSecretExportResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the Secret Export (expected to share the same name of the
            secret).
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SecretExportResourceService
    delete:
      summary: Delete a SecretExport.
      operationId: SecretExportResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.DeleteSecretExportResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the Secret Export (expected to share the same name of the
            secret).
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - SecretExportResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/secretexports:
    get:
      summary: List SecretExports.
      operationId: SecretExportResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.ListSecretExportsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SecretExportResourceService
  /v1alpha1/clusters/{secretExport.fullName.clusterName}/namespaces/{secretExport.fullName.namespaceName}/secretexports:
    post:
      summary: Create a SecretExport.
      operationId: SecretExportResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.CreateSecretExportResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: secretExport.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: secretExport.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.CreateSecretExportRequest
      tags:
        - SecretExportResourceService
  /v1alpha1/clusters/{install.fullName.clusterName}/namespaces/{install.fullName.namespaceName}/tanzupackage/installs:apply:
    post:
      summary: Apply a Install.
      operationId: InstallApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.ApplyInstallResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: install.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: install.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.ApplyInstallRequest
      tags:
        - InstallApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/tanzupackage/installs/{fullName.name}:
    get:
      summary: Get an Install.
      operationId: InstallResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.GetInstallResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package Install.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - InstallResourceService
    delete:
      summary: Delete an Install.
      operationId: InstallResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.DeleteInstallResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package Install.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - InstallResourceService
  /v1alpha1/clusters/{install.fullName.clusterName}/namespaces/{install.fullName.namespaceName}/tanzupackage/installs:
    post:
      summary: Create an Install.
      operationId: InstallResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.CreateInstallResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: install.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: install.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.CreateInstallRequest
      tags:
        - InstallResourceService
  /v1alpha1/clusters/{install.fullName.clusterName}/namespaces/{install.fullName.namespaceName}/tanzupackage/installs/{install.fullName.name}:
    put:
      summary: Update (overwrite) an Install.
      operationId: InstallResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.UpdateInstallResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: install.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: install.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: install.fullName.name
          description: Name of the Package Install.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.UpdateInstallRequest
      tags:
        - InstallResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/tanzupackage/installs:
    get:
      summary: List Installs.
      operationId: InstallResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.ListInstallsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - InstallResourceService
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/tanzupackage/metadatas/{fullName.name}:
    get:
      summary: Get a Metadata.
      operationId: MetadataResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.GetMetadataResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package Metadata.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - MetadataResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/tanzupackage/metadatas:
    get:
      summary: List Metadatas.
      operationId: MetadataResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.ListMetadatasResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - MetadataResourceService
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/tanzupackage/metadatas/{fullName.metadataName}/packages/{fullName.name}:
    get:
      summary: Get a Package.
      operationId: PackageResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.GetPackageResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.metadataName
          description: Name of the Package metadata.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package. It represents version of the Package metadata.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - PackageResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/tanzupackage/metadatas/{searchScope.metadataName}/packages:
    get:
      summary: List Packages.
      operationId: PackageResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.ListPackagesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.metadataName
          description: >-
            Scope search to the specified metadata_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - PackageResourceService
  /v1alpha1/clusters/{repository.fullName.clusterName}/namespaces/{repository.fullName.namespaceName}/tanzupackage/repositories:apply:
    post:
      summary: Apply a Repository.
      operationId: RepositoryApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ApplyRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: repository.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: repository.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ApplyRepositoryRequest
      tags:
        - RepositoryApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/tanzupackage/repositories:setavailability/{fullName.name}:
    post:
      summary: Enable or disable Package Repository for a cluster.
      operationId: RepositoryHelper_SetRepositoryAvailability
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.SetRepositoryAvailabilityResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package Repository.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.SetRepositoryAvailabilityRequest
      tags:
        - RepositoryHelper
  /v1alpha1/clusters/{fullName.clusterName}/namespaces/{fullName.namespaceName}/tanzupackage/repositories/{fullName.name}:
    get:
      summary: Get a Repository.
      operationId: RepositoryResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.GetRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package Repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - RepositoryResourceService
    delete:
      summary: Delete a Repository.
      operationId: RepositoryResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.DeleteRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package Repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - RepositoryResourceService
  /v1alpha1/clusters/{repository.fullName.clusterName}/namespaces/{repository.fullName.namespaceName}/tanzupackage/repositories:
    post:
      summary: Create a Repository.
      operationId: RepositoryResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.CreateRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: repository.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: repository.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.CreateRepositoryRequest
      tags:
        - RepositoryResourceService
  /v1alpha1/clusters/{repository.fullName.clusterName}/namespaces/{repository.fullName.namespaceName}/tanzupackage/repositories/{repository.fullName.name}:
    put:
      summary: Update (overwrite) a Repository.
      operationId: RepositoryResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.UpdateRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: repository.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: repository.fullName.namespaceName
          description: Name of Namespace.
          in: path
          required: true
          type: string
        - name: repository.fullName.name
          description: Name of the Package Repository.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.UpdateRepositoryRequest
      tags:
        - RepositoryResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/namespaces/{searchScope.namespaceName}/tanzupackage/repositories:
    get:
      summary: List Repositories.
      operationId: RepositoryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ListRepositoriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - RepositoryResourceService
  /v1alpha1/clusters/{fullName.clusterName}/network/antrea/antreaagentinfos/{fullName.name}:
    get:
      summary: Get an AntreaAgentInfo.
      operationId: AntreaAgentInfoResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.GetAntreaAgentInfoResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the traceflow.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - AntreaAgentInfoResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/network/antrea/antreaagentinfos:
    get:
      summary: List AntreaAgentInfos.
      operationId: AntreaAgentInfoResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.ListAntreaAgentInfosResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - AntreaAgentInfoResourceService
  /v1alpha1/clusters/{fullName.clusterName}/network/antrea/antreacontrollerinfos/{fullName.name}:
    get:
      summary: Get an AntreaControllerInfo.
      operationId: AntreaControllerInfoResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.GetAntreaControllerInfoResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the traceflow.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - AntreaControllerInfoResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/network/antrea/antreacontrollerinfos:
    get:
      summary: List AntreaControllerInfos.
      operationId: AntreaControllerInfoResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.ListAntreaControllerInfosResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - AntreaControllerInfoResourceService
  /v1alpha1/clusters/{fullName.clusterName}/network/antrea/traceflows/{fullName.name}:
    get:
      summary: Get a Traceflow.
      operationId: TraceflowResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.GetTraceflowResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the traceflow.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - TraceflowResourceService
    delete:
      summary: Delete a Traceflow.
      operationId: TraceflowResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.DeleteTraceflowResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the traceflow.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of Provisioner.
          in: query
          required: false
          type: string
      tags:
        - TraceflowResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/network/antrea/traceflows:
    get:
      summary: List Traceflows.
      operationId: TraceflowResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.ListTraceflowsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - TraceflowResourceService
  /v1alpha1/clusters/{traceflow.fullName.clusterName}/network/antrea/traceflows:
    post:
      summary: Create a Traceflow.
      operationId: TraceflowResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.CreateTraceflowResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: traceflow.fullName.clusterName
          description: Name of Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.CreateTraceflowRequest
      tags:
        - TraceflowResourceService
  /v1alpha1/clusters/{fullName.clusterName}/nodepools:iam/{fullName.name}:
    get:
      summary: Get policy for a Nodepool.
      operationId: NodepoolIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.GetNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolIAMPolicy
    put:
      summary: Update (overwrite) policy for a Nodepool - deleted if body is empty.
      operationId: NodepoolIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.UpdateNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          description: Nodepool policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolIAMPolicy
    patch:
      summary: Patch a Nodepool policy.
      operationId: NodepoolIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolIAMPolicyRequest
      tags:
        - NodepoolIAMPolicy
  /v1alpha1/clusters/{fullName.clusterName}/nodepools:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Nodepool.
      operationId: NodepoolIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TestNodepoolIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TestNodepoolIAMPermissionsRequest
      tags:
        - NodepoolIAMPolicy
  /v1alpha1/clusters/{fullName.clusterName}/nodepools/{fullName.name}:
    get:
      summary: Get a Nodepool.
      operationId: NodepoolResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.GetNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    delete:
      summary: Delete a Nodepool.
      operationId: NodepoolResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.DeleteNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    patch:
      summary: Patch (partially update) a Nodepool.
      operationId: NodepoolResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/clusters/{nodepool.fullName.clusterName}/nodepools:
    post:
      summary: Create a Nodepool.
      operationId: NodepoolResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.CreateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.CreateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/clusters/{nodepool.fullName.clusterName}/nodepools/{nodepool.fullName.name}:
    put:
      summary: Update (overwrite) a Nodepool.
      operationId: NodepoolResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.UpdateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.UpdateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/nodepools:
    get:
      summary: List Nodepools.
      operationId: NodepoolResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.ListNodepoolsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - NodepoolResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/objects:
    get:
      summary: List Objects.
      operationId: ObjectResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ListObjectsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ObjectResourceService
  /v1alpha1/clusters/{policy.fullName.clusterName}/policies:apply:
    post:
      summary: Apply a Policy.
      operationId: PolicyApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.ApplyPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.ApplyPolicyRequest
      tags:
        - PolicyApplyHelper
  /v1alpha1/clusters/{fullName.clusterName}/policies/{fullName.name}:
    get:
      summary: Get a Policy.
      operationId: PolicyResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.GetPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the cluster provisioner.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
    delete:
      summary: Delete a Policy.
      operationId: PolicyResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.DeletePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Name of the cluster provisioner.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
  /v1alpha1/clusters/{policy.fullName.clusterName}/policies:
    post:
      summary: Create a Policy.
      operationId: PolicyResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.CreatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.CreatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/clusters/{policy.fullName.clusterName}/policies/{policy.fullName.name}:
    put:
      summary: Update (overwrite) a Policy.
      operationId: PolicyResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.UpdatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.clusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: policy.fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.UpdatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/policies:
    get:
      summary: List Policies.
      operationId: PolicyResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.ListPoliciesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - PolicyResourceService
  /v1alpha1/clusters/{fullName.clusterName}/settings/{fullName.name}:
    get:
      summary: Get a Setting.
      operationId: SettingResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.GetSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Management Cluster name.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the Cluster.
          in: query
          required: false
          type: string
      tags:
        - SettingResourceService
    delete:
      summary: Delete a Setting.
      operationId: SettingResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.DeleteSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterName
          description: Name of the Cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Management Cluster name.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the Cluster.
          in: query
          required: false
          type: string
      tags:
        - SettingResourceService
  /v1alpha1/clusters/{setting.fullName.clusterName}/settings:
    post:
      summary: Create a Setting.
      operationId: SettingResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.CreateSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: setting.fullName.clusterName
          description: Name of the Cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.CreateSettingRequest
      tags:
        - SettingResourceService
  /v1alpha1/clusters/{setting.fullName.clusterName}/settings/{setting.fullName.name}:
    put:
      summary: Update (overwrite) a Setting.
      operationId: SettingResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.UpdateSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: setting.fullName.clusterName
          description: Name of the Cluster.
          in: path
          required: true
          type: string
        - name: setting.fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.UpdateSettingRequest
      tags:
        - SettingResourceService
  /v1alpha1/clusters/{searchScope.clusterName}/tanzupackage:
    get:
      summary: List TanzuPackages.
      operationId: TanzuPackageResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.ListTanzuPackagesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterName
          description: >-
            Scope search to the specified cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - TanzuPackageResourceService
  /v1alpha1/clusters/{fullName.name}/versions:
    get:
      summary: Get returns a list of versions this cluster can be upgraded to.
      operationId: ClusterVersionsService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.cluster.versions.GetResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
        - name: includeIneligible
          description: >-
            If true, return all future versions even if they are not eligible
            for direct upgrade.
          in: query
          required: false
          type: boolean
        - name: includeAllOsFamilies
          description: >-
            If true, return versions even if they are not in the same OS family
            as the cluster.

            Example, show CentOS versions even though the current cluster is
            Ubuntu based.
          in: query
          required: false
          type: boolean
      tags:
        - ClusterVersionsService
  /v1alpha1/clustergroups:iam/{fullName.name}:
    get:
      summary: Get policy for a ClusterGroup.
      operationId: ClusterGroupIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.GetClusterGroupIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ClusterGroupIAMPolicy
    put:
      summary: Update (overwrite) policy for a ClusterGroup - deleted if body is empty.
      operationId: ClusterGroupIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.UpdateClusterGroupIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: body
          description: ClusterGroup policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ClusterGroupIAMPolicy
    patch:
      summary: Patch a ClusterGroup policy.
      operationId: ClusterGroupIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupIAMPolicyRequest
      tags:
        - ClusterGroupIAMPolicy
  /v1alpha1/clustergroups:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a ClusterGroup.
      operationId: ClusterGroupIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.TestClusterGroupIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.TestClusterGroupIAMPermissionsRequest
      tags:
        - ClusterGroupIAMPolicy
  /v1alpha1/clustergroups:
    get:
      summary: List ClusterGroups.
      operationId: ClusterGroupResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ListClusterGroupsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.integration
          description: >-
            filter cluster groups based on selected integration (e.g.
            TANZU_APPLICATION_ENGINE); supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ClusterGroupResourceService
    post:
      summary: Create a ClusterGroup.
      operationId: ClusterGroupResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.CreateClusterGroupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.CreateClusterGroupRequest
      tags:
        - ClusterGroupResourceService
  /v1alpha1/clustergroups/{clusterGroup.fullName.name}:
    put:
      summary: Update (overwrite) a ClusterGroup.
      operationId: ClusterGroupResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.UpdateClusterGroupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: clusterGroup.fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.UpdateClusterGroupRequest
      tags:
        - ClusterGroupResourceService
  /v1alpha1/clustergroups/{fullName.name}:
    get:
      summary: Get a ClusterGroup.
      operationId: ClusterGroupResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.GetClusterGroupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ClusterGroupResourceService
    delete:
      summary: Delete a ClusterGroup.
      operationId: ClusterGroupResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.DeleteClusterGroupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ClusterGroupResourceService
    patch:
      summary: Patch (partially update) a ClusterGroup.
      operationId: ClusterGroupResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this ClusterGroup.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupRequest
      tags:
        - ClusterGroupResourceService
  /v1alpha1/clustergroups/{dataProtection.fullName.clusterGroupName}/dataprotection:
    post:
      summary: Create a DataProtection.
      operationId: DataProtectionResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.CreateDataProtectionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: dataProtection.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.CreateDataProtectionRequest
      tags:
        - DataProtectionResourceService
    put:
      summary: Update (overwrite) a DataProtection.
      operationId: DataProtectionResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.UpdateDataProtectionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: dataProtection.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.UpdateDataProtectionRequest
      tags:
        - DataProtectionResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/dataprotection:
    delete:
      summary: Delete a DataProtection.
      operationId: DataProtectionResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DeleteDataProtectionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
        - name: deleteBackups
          description: >-
            Delete all backup files associated with all the clusters in the
            cluster group from the backup storage location.
          in: query
          required: false
          type: boolean
      tags:
        - DataProtectionResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/dataprotection:
    get:
      summary: List DataProtections.
      operationId: DataProtectionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.ListDataProtectionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - DataProtectionResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/dataprotection/schedules/{fullName.name}:
    get:
      summary: Get a Schedule.
      operationId: ScheduleResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.GetScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
    delete:
      summary: Delete a Schedule.
      operationId: ScheduleResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.DeleteScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ScheduleResourceService
  /v1alpha1/clustergroups/{schedule.fullName.clusterGroupName}/dataprotection/schedules:
    post:
      summary: Create a Schedule.
      operationId: ScheduleResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.CreateScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: schedule.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.CreateScheduleRequest
      tags:
        - ScheduleResourceService
  /v1alpha1/clustergroups/{schedule.fullName.clusterGroupName}/dataprotection/schedules/{schedule.fullName.name}:
    put:
      summary: Update (overwrite) a Schedule.
      operationId: ScheduleResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.UpdateScheduleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: schedule.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: schedule.fullName.name
          description: Name of this Schedule.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.UpdateScheduleRequest
      tags:
        - ScheduleResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/dataprotection/schedules:
    get:
      summary: List Schedules.
      operationId: ScheduleResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.ListSchedulesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ScheduleResourceService
  /v1alpha1/clustergroups/{continuousDelivery.fullName.clusterGroupName}/fluxcd/continuousdelivery:
    post:
      summary: Create a ContinuousDelivery.
      operationId: ContinuousDeliveryResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.CreateContinuousDeliveryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: continuousDelivery.fullName.clusterGroupName
          description: Name of cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.CreateContinuousDeliveryRequest
      tags:
        - ContinuousDeliveryResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/fluxcd/continuousdelivery:
    delete:
      summary: Delete a ContinuousDelivery.
      operationId: ContinuousDeliveryResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.DeleteContinuousDeliveryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of cluster group.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ContinuousDeliveryResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/fluxcd/continuousdelivery:
    get:
      summary: List ContinuousDeliveries.
      operationId: ContinuousDeliveryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.ListContinuousDeliveriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ContinuousDeliveryResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/fluxcd/helm:
    delete:
      summary: Delete a Helm.
      operationId: HelmResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.DeleteHelmResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of cluster group.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - HelmResourceService
  /v1alpha1/clustergroups/{helm.fullName.clusterGroupName}/fluxcd/helm:
    post:
      summary: Create a Helm.
      operationId: HelmResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.CreateHelmResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: helm.fullName.clusterGroupName
          description: Name of cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.CreateHelmRequest
      tags:
        - HelmResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/fluxcd/helm:
    get:
      summary: List Helms.
      operationId: HelmResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.ListHelmsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - HelmResourceService
  /v1alpha1/clustergroups/{sourceSecret.fullName.clusterGroupName}/fluxcd/sourcesecrets:apply:
    post:
      summary: Apply a SourceSecret.
      operationId: SourceSecretApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.ApplySourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sourceSecret.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.ApplySourceSecretRequest
      tags:
        - SourceSecretApplyHelper
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/fluxcd/sourcesecrets/{fullName.name}:
    get:
      summary: Get a SourceSecret.
      operationId: SourceSecretResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.GetSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Source Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SourceSecretResourceService
    delete:
      summary: Delete a SourceSecret.
      operationId: SourceSecretResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.DeleteSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of Source Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SourceSecretResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/fluxcd/sourcesecrets:
    get:
      summary: List SourceSecrets.
      operationId: SourceSecretResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.ListSourceSecretsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SourceSecretResourceService
  /v1alpha1/clustergroups/{sourceSecret.fullName.clusterGroupName}/fluxcd/sourcesecrets:
    post:
      summary: Create a SourceSecret.
      operationId: SourceSecretResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.CreateSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sourceSecret.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.CreateSourceSecretRequest
      tags:
        - SourceSecretResourceService
  /v1alpha1/clustergroups/{sourceSecret.fullName.clusterGroupName}/fluxcd/sourcesecrets/{sourceSecret.fullName.name}:
    put:
      summary: Update (overwrite) a SourceSecret.
      operationId: SourceSecretResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.UpdateSourceSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sourceSecret.fullName.clusterGroupName
          description: Name of Cluster group.
          in: path
          required: true
          type: string
        - name: sourceSecret.fullName.name
          description: Name of Source Secret.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.UpdateSourceSecretRequest
      tags:
        - SourceSecretResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/insights:
    get:
      summary: List Insights.
      operationId: InsightResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.insight.ListInsightsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.sourceKind
          description: >-
            Filter by the kind of source resource (eg. integration); supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.sourceName
          description: >-
            Filter by the name of source resource (eg.
            tanzu-observability-saas); supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.sourceUid
          description: >-
            Filter by the uid of source resource; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.insightType
          description: Filter by insight type; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.clusterName
          description: Filter by cluster name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - InsightResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/integrations/{fullName.name}:
    get:
      summary: Get an Integration.
      operationId: IntegrationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.GetIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - IntegrationResourceService
    delete:
      summary: Delete an Integration.
      operationId: IntegrationResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.DeleteIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - IntegrationResourceService
  /v1alpha1/clustergroups/{integration.fullName.clusterGroupName}/integrations:
    post:
      summary: Create an Integration.
      operationId: IntegrationResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.CreateIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: integration.fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.CreateIntegrationRequest
      tags:
        - IntegrationResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/integrations:
    get:
      summary: List Integrations.
      operationId: IntegrationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.ListIntegrationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - IntegrationResourceService
  /v1alpha1/clustergroups/{gitRepository.fullName.clusterGroupName}/namespace/fluxcd/gitrepositories:apply:
    post:
      summary: Apply a GitRepository.
      operationId: GitRepositoryApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.ApplyGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: gitRepository.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.ApplyGitRepositoryRequest
      tags:
        - GitRepositoryApplyHelper
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/namespace/fluxcd/gitrepositories/{fullName.name}:
    get:
      summary: Get a GitRepository.
      operationId: GitRepositoryResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GetGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - GitRepositoryResourceService
    delete:
      summary: Delete a GitRepository.
      operationId: GitRepositoryResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.DeleteGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clustergroups/{gitRepository.fullName.clusterGroupName}/namespace/fluxcd/gitrepositories:
    post:
      summary: Create a GitRepository.
      operationId: GitRepositoryResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.CreateGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: gitRepository.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.CreateGitRepositoryRequest
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clustergroups/{gitRepository.fullName.clusterGroupName}/namespace/fluxcd/gitrepositories/{gitRepository.fullName.name}:
    put:
      summary: Update (overwrite) a GitRepository.
      operationId: GitRepositoryResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.UpdateGitRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: gitRepository.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: gitRepository.fullName.name
          description: Name of the Repository.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.UpdateGitRepositoryRequest
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/namespace/fluxcd/gitrepositories:
    get:
      summary: List GitRepositories.
      operationId: GitRepositoryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.ListGitRepositoriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - GitRepositoryResourceService
  /v1alpha1/clustergroups/{release.fullName.clusterGroupName}/namespace/fluxcd/helm/releases:apply:
    post:
      summary: Apply a Release.
      operationId: ReleaseApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.ApplyReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: release.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.ApplyReleaseRequest
      tags:
        - ReleaseApplyHelper
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/namespace/fluxcd/helm/releases/{fullName.name}:
    get:
      summary: Get a Release.
      operationId: ReleaseResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.GetReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Helm Release.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - ReleaseResourceService
    delete:
      summary: Delete a Release.
      operationId: ReleaseResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.DeleteReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Helm Release.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - ReleaseResourceService
  /v1alpha1/clustergroups/{release.fullName.clusterGroupName}/namespace/fluxcd/helm/releases:
    post:
      summary: Create a Release.
      operationId: ReleaseResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.CreateReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: release.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.CreateReleaseRequest
      tags:
        - ReleaseResourceService
  /v1alpha1/clustergroups/{release.fullName.clusterGroupName}/namespace/fluxcd/helm/releases/{release.fullName.name}:
    put:
      summary: Update (overwrite) a Release.
      operationId: ReleaseResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.UpdateReleaseResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: release.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: release.fullName.name
          description: Name of the Helm Release.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.UpdateReleaseRequest
      tags:
        - ReleaseResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/namespace/fluxcd/helm/releases:
    get:
      summary: List Releases.
      operationId: ReleaseResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.ListReleasesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ReleaseResourceService
  /v1alpha1/clustergroups/{kustomization.fullName.clusterGroupName}/namespace/fluxcd/kustomizations:apply:
    post:
      summary: Apply a Kustomization.
      operationId: KustomizationApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.ApplyKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: kustomization.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.ApplyKustomizationRequest
      tags:
        - KustomizationApplyHelper
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/namespace/fluxcd/kustomizations/{fullName.name}:
    get:
      summary: Get a Kustomization.
      operationId: KustomizationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.GetKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Kustomization.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - KustomizationResourceService
    delete:
      summary: Delete a Kustomization.
      operationId: KustomizationResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.DeleteKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Kustomization.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - KustomizationResourceService
  /v1alpha1/clustergroups/{kustomization.fullName.clusterGroupName}/namespace/fluxcd/kustomizations:
    post:
      summary: Create a Kustomization.
      operationId: KustomizationResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.CreateKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: kustomization.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.CreateKustomizationRequest
      tags:
        - KustomizationResourceService
  /v1alpha1/clustergroups/{kustomization.fullName.clusterGroupName}/namespace/fluxcd/kustomizations/{kustomization.fullName.name}:
    put:
      summary: Update (overwrite) a Kustomization.
      operationId: KustomizationResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.UpdateKustomizationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: kustomization.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: kustomization.fullName.name
          description: Name of the Kustomization.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.UpdateKustomizationRequest
      tags:
        - KustomizationResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/namespace/fluxcd/kustomizations:
    get:
      summary: List Kustomizations.
      operationId: KustomizationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.ListKustomizationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - KustomizationResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/namespace/secrets/{fullName.name}:
    get:
      summary: Get a Secret.
      operationId: SecretResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.GetSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - SecretResourceService
    delete:
      summary: Delete a Secret.
      operationId: SecretResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.DeleteSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Secret.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - SecretResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/namespace/secrets:
    get:
      summary: List Secrets.
      operationId: SecretResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.ListSecretsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.secretType
          description: Filter by secret type; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SecretResourceService
  /v1alpha1/clustergroups/{secret.fullName.clusterGroupName}/namespace/secrets:
    post:
      summary: Create a Secret.
      operationId: SecretResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.CreateSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: secret.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.CreateSecretRequest
      tags:
        - SecretResourceService
  /v1alpha1/clustergroups/{secret.fullName.clusterGroupName}/namespace/secrets/{secret.fullName.name}:
    put:
      summary: Update (overwrite) a Secret.
      operationId: SecretResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.UpdateSecretResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: secret.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: secret.fullName.name
          description: Name of the Secret.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.UpdateSecretRequest
      tags:
        - SecretResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/namespace/secretexports/{fullName.name}:
    get:
      summary: Get a SecretExport.
      operationId: SecretExportResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.GetSecretExportResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the Secret Export (expected to share the same name of the
            secret).
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - SecretExportResourceService
    delete:
      summary: Delete a SecretExport.
      operationId: SecretExportResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.DeleteSecretExportResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the Secret Export (expected to share the same name of the
            secret).
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.namespaceName
          description: Name of Namespace.
          in: query
          required: false
          type: string
      tags:
        - SecretExportResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/namespace/secretexports:
    get:
      summary: List SecretExports.
      operationId: SecretExportResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.ListSecretExportsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.namespaceName
          description: >-
            Scope search to the specified namespace_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SecretExportResourceService
  /v1alpha1/clustergroups/{secretExport.fullName.clusterGroupName}/namespace/secretexports:
    post:
      summary: Create a SecretExport.
      operationId: SecretExportResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.CreateSecretExportResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: secretExport.fullName.clusterGroupName
          description: Name of Cluster Group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.CreateSecretExportRequest
      tags:
        - SecretExportResourceService
  /v1alpha1/clustergroups/{policy.fullName.clusterGroupName}/policies:apply:
    post:
      summary: Apply a Policy.
      operationId: PolicyApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.ApplyPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.ApplyPolicyRequest
      tags:
        - PolicyApplyHelper
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/policies/{fullName.name}:
    get:
      summary: Get a Policy.
      operationId: PolicyResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.GetPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
    delete:
      summary: Delete a Policy.
      operationId: PolicyResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.DeletePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
  /v1alpha1/clustergroups/{policy.fullName.clusterGroupName}/policies:
    post:
      summary: Create a Policy.
      operationId: PolicyResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.CreatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.CreatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/clustergroups/{policy.fullName.clusterGroupName}/policies/{policy.fullName.name}:
    put:
      summary: Update (overwrite) a Policy.
      operationId: PolicyResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.UpdatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: policy.fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.UpdatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/clustergroups/{searchScope.clusterGroupName}/policies:
    get:
      summary: List Policies.
      operationId: PolicyResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.ListPoliciesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.clusterGroupName
          description: >-
            Scope search to the specified cluster_group_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - PolicyResourceService
  /v1alpha1/clustergroups/{fullName.clusterGroupName}/settings/{fullName.name}:
    get:
      summary: Get a Setting.
      operationId: SettingResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.GetSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SettingResourceService
    delete:
      summary: Delete a Setting.
      operationId: SettingResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.DeleteSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SettingResourceService
  /v1alpha1/clustergroups/{setting.fullName.clusterGroupName}/settings:
    post:
      summary: Create a Setting.
      operationId: SettingResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.CreateSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: setting.fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.CreateSettingRequest
      tags:
        - SettingResourceService
  /v1alpha1/clustergroups/{setting.fullName.clusterGroupName}/settings/{setting.fullName.name}:
    put:
      summary: Update (overwrite) a Setting.
      operationId: SettingResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.UpdateSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: setting.fullName.clusterGroupName
          description: Name of the cluster group.
          in: path
          required: true
          type: string
        - name: setting.fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.UpdateSettingRequest
      tags:
        - SettingResourceService
  /v1alpha1/dataprotection/providers/{backupLocation.fullName.providerName}/backuplocations:
    post:
      summary: Create a BackupLocation.
      operationId: BackupLocationResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.CreateBackupLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: backupLocation.fullName.providerName
          description: Name of the data protection provider name.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.CreateBackupLocationRequest
      tags:
        - BackupLocationResourceService
  /v1alpha1/dataprotection/providers/{backupLocation.fullName.providerName}/backuplocations/{backupLocation.fullName.name}:
    put:
      summary: Update (overwrite) a BackupLocation.
      operationId: BackupLocationResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.UpdateBackupLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: backupLocation.fullName.providerName
          description: Name of the data protection provider name.
          in: path
          required: true
          type: string
        - name: backupLocation.fullName.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.UpdateBackupLocationRequest
      tags:
        - BackupLocationResourceService
  /v1alpha1/dataprotection/providers/{fullName.providerName}/backuplocations/{fullName.name}:
    get:
      summary: Get a BackupLocation.
      operationId: BackupLocationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.GetBackupLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.providerName
          description: Name of the data protection provider name.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - BackupLocationResourceService
    delete:
      summary: Delete a BackupLocation.
      operationId: BackupLocationResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.DeleteBackupLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.providerName
          description: Name of the data protection provider name.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - BackupLocationResourceService
    patch:
      summary: Patch (partially update) a BackupLocation.
      operationId: BackupLocationResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.PatchBackupLocationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.providerName
          description: Name of the data protection provider name.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Backup Location.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.PatchBackupLocationRequest
      tags:
        - BackupLocationResourceService
  /v1alpha1/dataprotection/providers/{searchScope.providerName}/backuplocations:
    get:
      summary: List BackupLocations.
      operationId: BackupLocationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.ListBackupLocationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.providerName
          description: >-
            Scope search to the specified provider_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.credentialName
          description: >-
            Filter backup locations by a credential name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.assignedGroupName
          description: >-
            Filter backup locations by an assigned group name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - BackupLocationResourceService
  /v1alpha1/dataprotection/providers:
    get:
      summary: List Providers.
      operationId: ProviderResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.ListProvidersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ProviderResourceService
  /v1alpha1/dataprotection/providers/{fullName.name}:
    get:
      summary: Get a Provider.
      operationId: ProviderResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.GetProviderResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the Provider.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ProviderResourceService
  /v1alpha1/eksclusters:apply:
    post:
      summary: Apply a EksCluster.
      operationId: EksClusterApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ApplyEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ApplyEksClusterRequest
      tags:
        - EksClusterApplyHelper
  /v1alpha1/eksclusters:iam/{fullName.name}:
    get:
      summary: Get policy for a EksCluster.
      operationId: EksClusterIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.GetEksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
      tags:
        - EksClusterIAMPolicy
    put:
      summary: Update (overwrite) policy for an EksCluster - deleted if body is empty.
      operationId: EksClusterIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.UpdateEksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          description: EksCluster policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
      tags:
        - EksClusterIAMPolicy
    patch:
      summary: Patch an EksCluster policy.
      operationId: EksClusterIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterIAMPolicyRequest
      tags:
        - EksClusterIAMPolicy
  /v1alpha1/eksclusters:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a EksCluster.
      operationId: EksClusterIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.TestEksClusterIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.TestEksClusterIAMPermissionsRequest
      tags:
        - EksClusterIAMPolicy
  /v1alpha1/eksclusters:options:
    get:
      summary: List ekscluster options.
      operationId: EksClusterOptions_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ListEksClusterOptionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: credentialName
          description: Name of this credential.
          in: query
          required: false
          type: string
      tags:
        - EksClusterOptions
  /v1alpha1/eksclusters:
    get:
      summary: List EksClusters.
      operationId: EksClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ListEksClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.credentialName
          description: >-
            Scope search to the specified credential_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.region
          description: >-
            Scope search to the specified region; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - EksClusterResourceService
    post:
      summary: Create an EksCluster.
      operationId: EksClusterResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.CreateEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.CreateEksClusterRequest
      tags:
        - EksClusterResourceService
  /v1alpha1/eksclusters/{eksCluster.fullName.name}:
    put:
      summary: Update (overwrite) an EksCluster.
      operationId: EksClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.UpdateEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: eksCluster.fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.UpdateEksClusterRequest
      tags:
        - EksClusterResourceService
  /v1alpha1/eksclusters/{fullName.name}:
    get:
      summary: Get an EksCluster.
      operationId: EksClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.GetEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
      tags:
        - EksClusterResourceService
    delete:
      summary: Delete an EksCluster.
      operationId: EksClusterResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.DeleteEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - EksClusterResourceService
    patch:
      summary: Patch (partially update) an EksCluster.
      operationId: EksClusterResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterRequest
      tags:
        - EksClusterResourceService
  /v1alpha1/eksclusters/{nodepool.fullName.eksClusterName}/nodepools:apply:
    post:
      summary: Apply a Nodepool.
      operationId: NodepoolApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ApplyNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ApplyNodepoolRequest
      tags:
        - NodepoolApplyHelper
  /v1alpha1/eksclusters/{fullName.eksClusterName}/nodepools:iam/{fullName.name}:
    get:
      summary: Get policy for a Nodepool.
      operationId: NodepoolIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.GetNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Region of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolIAMPolicy
    put:
      summary: Update (overwrite) policy for a Nodepool - deleted if body is empty.
      operationId: NodepoolIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          description: Nodepool policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Region of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolIAMPolicy
    patch:
      summary: Patch a Nodepool policy.
      operationId: NodepoolIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolIAMPolicyRequest
      tags:
        - NodepoolIAMPolicy
  /v1alpha1/eksclusters/{fullName.eksClusterName}/nodepools:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Nodepool.
      operationId: NodepoolIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.TestNodepoolIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.TestNodepoolIAMPermissionsRequest
      tags:
        - NodepoolIAMPolicy
  /v1alpha1/eksclusters/{fullName.eksClusterName}/nodepools/{fullName.name}:
    get:
      summary: Get a Nodepool.
      operationId: NodepoolResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.GetNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Region of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    delete:
      summary: Delete a Nodepool.
      operationId: NodepoolResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.DeleteNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Region of the cluster.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    patch:
      summary: Patch (partially update) a Nodepool.
      operationId: NodepoolResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/eksclusters/{nodepool.fullName.eksClusterName}/nodepools:
    post:
      summary: Create a Nodepool.
      operationId: NodepoolResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.CreateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.CreateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/eksclusters/{nodepool.fullName.eksClusterName}/nodepools/{nodepool.fullName.name}:
    put:
      summary: Update (overwrite) a Nodepool.
      operationId: NodepoolResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.eksClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.name
          description: Name of the nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/eksclusters/{searchScope.eksClusterName}/nodepools:
    get:
      summary: List Nodepools.
      operationId: NodepoolResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ListNodepoolsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.eksClusterName
          description: >-
            Scope search to the specified eks_cluster_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.credentialName
          description: >-
            Scope search to the specified credential_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.region
          description: >-
            Scope search to the specified region; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - NodepoolResourceService
  /v1alpha1/events:
    get:
      summary: List Events.
      operationId: Events_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.events.ListEventsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: >-
            TQL query string.

            Example TQL query:

            1. "event_type:[ClusterHealth, ClusterLifecycle] and
            cluster_name:cl1 and mgmt_name:mg1 and pvr_name:pr1"

            2. "event_type:[Inspection] and level:Error".
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - Events
  /v1alpha1/events/stream:
    get:
      summary: |-
        Stream allows a client to stream events for
        one or more resource types.
      operationId: Events_Stream
      responses:
        '200':
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: >-
                  #/definitions/vmware.tanzu.manage.v1alpha1.events.StreamEventsResponse
              error:
                $ref: '#/definitions/grpc.gateway.runtime.StreamError'
            title: >-
              Stream result of
              vmware.tanzu.manage.v1alpha1.events.StreamEventsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: eventTypes
          description: |-
            One or more event types to apply as a filter (default: no filter).
            Possible event types are:
            com.vmware.tmc.cluster -> Cluster
            com.vmware.tmc.cluster.health -> ClusterHealth
            com.vmware.tmc.cluster.lifecycle -> ClusterLifecycle
            com.vmware.tmc.clustergroup -> ClusterGroup
            com.vmware.tmc.namespace -> Namespace
            com.vmware.tmc.provisioner -> Provisioner
            com.vmware.tmc.workspace -> Workspace
            com.vmware.tmc.inspection -> Inspection.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Events
  /v1alpha1/iam/currentuser/features:
    get:
      summary: List Features.
      operationId: FeatureResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.ListFeaturesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - FeatureResourceService
  /v1alpha1/iam/currentuser/features/{fullName.name}:
    get:
      summary: Get a Feature.
      operationId: FeatureResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.GetFeatureResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the Feature.
          in: path
          required: true
          type: string
      tags:
        - FeatureResourceService
  /v1alpha1/iam/currentuser/preferences:
    post:
      summary: Create a Preference.
      operationId: PreferenceResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.CreatePreferenceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.CreatePreferenceRequest
      tags:
        - PreferenceResourceService
  /v1alpha1/iam/currentuser/preferences/{fullName.name}:
    get:
      summary: Get a Preference.
      operationId: PreferenceResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.GetPreferenceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this preference.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Organization ID of the user.
          in: query
          required: false
          type: string
        - name: fullName.userId
          description: ID of the user.
          in: query
          required: false
          type: string
      tags:
        - PreferenceResourceService
    delete:
      summary: Delete a Preference.
      operationId: PreferenceResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.DeletePreferenceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this preference.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Organization ID of the user.
          in: query
          required: false
          type: string
        - name: fullName.userId
          description: ID of the user.
          in: query
          required: false
          type: string
      tags:
        - PreferenceResourceService
  /v1alpha1/iam/currentuser/preferences/{preference.fullName.name}:
    put:
      summary: Update (overwrite) a Preference.
      operationId: PreferenceResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.UpdatePreferenceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: preference.fullName.name
          description: Name of this preference.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.UpdatePreferenceRequest
      tags:
        - PreferenceResourceService
  /v1alpha1/iam/directory:search:
    post:
      summary: Search users and groups (suitable for implementing autocomplete).
      operationId: DirectoryService_Search
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.directory.SearchResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.directory.SearchRequest
      tags:
        - DirectoryService
  /v1alpha1/iam/effective:
    get:
      summary: List Effective.
      operationId: EffectiveResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.ListEffectiveResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.targetResourceUid
          description: Filter by UID of target resource; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.phase
          description: Filter by phase of the policy; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - EffectiveResourceService
  /v1alpha1/iam/identityrolemappings:
    get:
      summary: List IdentityRoleMappings.
      operationId: IdentityRoleMappingResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.ListIdentityRoleMappingsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.resourceUid
          description: Filter by resource uid; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.role
          description: Filter by role; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.subjectName
          description: Filter by identity name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.subjectType
          description: >-
            Filter by identity type (GROUP/USER); supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - IdentityRoleMappingResourceService
  /v1alpha1/iam/permissions:
    get:
      summary: List API for TMC permissions.
      operationId: PermissionService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.permission.ListPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: name
          description: |-
            Name, if provided, limits the response to a particular permission.
            +optional.
          in: query
          required: false
          type: string
        - name: resources
          description: |-
            Resources, if provided, will limit the response permissions to those
            which are valid for these resources.
            +optional.

             - RESOURCE_UNSPECIFIED: Unkonwn.
             - ORGANIZATION: Organization.
             - MANAGEMENT_CLUSTER: Management cluster.
             - PROVISIONER: Provisioner.
             - CLUSTER_GROUP: Cluster group.
             - CLUSTER: Cluster.
             - WORKSPACE: Workspace.
             - NAMESPACE: Namespace.
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - RESOURCE_UNSPECIFIED
              - ORGANIZATION
              - MANAGEMENT_CLUSTER
              - PROVISIONER
              - CLUSTER_GROUP
              - CLUSTER
              - WORKSPACE
              - NAMESPACE
          collectionFormat: multi
      tags:
        - PermissionService
  /v1alpha1/iam/roles:
    get:
      summary: List Roles.
      operationId: RoleResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.ListRolesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - RoleResourceService
    post:
      summary: Create a Role.
      operationId: RoleResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.CreateRoleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.CreateRoleRequest
      tags:
        - RoleResourceService
  /v1alpha1/iam/roles/{fullName.name}:
    get:
      summary: Get a Role.
      operationId: RoleResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.GetRoleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the role.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Org Id.
          in: query
          required: false
          type: string
      tags:
        - RoleResourceService
    delete:
      summary: Delete a Role.
      operationId: RoleResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.DeleteRoleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the role.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Org Id.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - RoleResourceService
    patch:
      summary: Patch (partially update) a Role.
      operationId: RoleResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.PatchRoleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the role.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.PatchRoleRequest
      tags:
        - RoleResourceService
  /v1alpha1/iam/roles/{role.fullName.name}:
    put:
      summary: Update (overwrite) a Role.
      operationId: RoleResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.UpdateRoleResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: role.fullName.name
          description: Name of the role.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.iam.role.UpdateRoleRequest
      tags:
        - RoleResourceService
  /v1alpha1/integrations:
    get:
      summary: List Integrations.
      operationId: IntegrationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.integration.ListIntegrationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - IntegrationResourceService
  /v1alpha1/integrations/{fullName.name}:
    get:
      summary: Get an Integration.
      operationId: IntegrationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.integration.GetIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Integration.
          in: path
          required: true
          type: string
      tags:
        - IntegrationResourceService
  /v1alpha1/manage/provideraksclusters:iam/{fullName.name}:
    get:
      summary: Get policy for a ProviderAksCluster.
      operationId: ProviderAksClusterIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.GetProviderAksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
      tags:
        - ProviderAksClusterIAMPolicy
    put:
      summary: >-
        Update (overwrite) policy for a ProviderAksCluster - deleted if body is
        empty.
      operationId: ProviderAksClusterIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.UpdateProviderAksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          description: ProviderAksCluster policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
      tags:
        - ProviderAksClusterIAMPolicy
    patch:
      summary: Patch a ProviderAksCluster policy.
      operationId: ProviderAksClusterIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.PatchProviderAksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.PatchProviderAksClusterIAMPolicyRequest
      tags:
        - ProviderAksClusterIAMPolicy
  /v1alpha1/manage/provideraksclusters:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a ProviderAksCluster.
      operationId: ProviderAksClusterIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.TestProviderAksClusterIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.TestProviderAksClusterIAMPermissionsRequest
      tags:
        - ProviderAksClusterIAMPolicy
  /v1alpha1/manage/provideraksclusters:
    get:
      summary: List ProviderAksClusters.
      operationId: ProviderAksClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ListProviderAksClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.credentialName
          description: >-
            Scope search to the specified credential_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.subscriptionId
          description: >-
            Scope search to the specified subscription_id; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.resourceGroupName
          description: >-
            Scope search to the specified resource_group_name; supports
            globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ProviderAksClusterResourceService
  /v1alpha1/manage/provideraksclusters/{fullName.name}:
    get:
      summary: Get a ProviderAksCluster.
      operationId: ProviderAksClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.GetProviderAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.subscriptionId
          description: ID of Azure subscription of the cluster.
          in: query
          required: false
          type: string
        - name: fullName.resourceGroupName
          description: Name of the resource group.
          in: query
          required: false
          type: string
      tags:
        - ProviderAksClusterResourceService
  /v1alpha1/manage/provideraksclusters/{providerAksCluster.fullName.name}:
    put:
      summary: Update (overwrite) a ProviderAksCluster.
      operationId: ProviderAksClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.UpdateProviderAksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: providerAksCluster.fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.UpdateProviderAksClusterRequest
      tags:
        - ProviderAksClusterResourceService
  /v1alpha1/manage/providereksclusters:iam/{fullName.name}:
    get:
      summary: Get policy for a ProviderEksCluster.
      operationId: ProviderEksClusterIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.GetProviderEksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster in EKS.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
      tags:
        - ProviderEksClusterIAMPolicy
    put:
      summary: >-
        Update (overwrite) policy for a ProviderEksCluster - deleted if body is
        empty.
      operationId: ProviderEksClusterIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.UpdateProviderEksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster in EKS.
          in: path
          required: true
          type: string
        - name: body
          description: ProviderEksCluster policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
      tags:
        - ProviderEksClusterIAMPolicy
    patch:
      summary: Patch a ProviderEksCluster policy.
      operationId: ProviderEksClusterIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.PatchProviderEksClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster in EKS.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.PatchProviderEksClusterIAMPolicyRequest
      tags:
        - ProviderEksClusterIAMPolicy
  /v1alpha1/manage/providereksclusters:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a ProviderEksCluster.
      operationId: ProviderEksClusterIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.TestProviderEksClusterIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster in EKS.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.TestProviderEksClusterIAMPermissionsRequest
      tags:
        - ProviderEksClusterIAMPolicy
  /v1alpha1/manage/providereksclusters:
    get:
      summary: List ProviderEksClusters.
      operationId: ProviderEksClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ListProviderEksClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.credentialName
          description: >-
            Scope search to the specified credential_name; supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.region
          description: >-
            Scope search to the specified region; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ProviderEksClusterResourceService
  /v1alpha1/manage/providereksclusters/{fullName.name}:
    get:
      summary: Get a ProviderEksCluster.
      operationId: ProviderEksClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.GetProviderEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this cluster in EKS.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: fullName.credentialName
          description: Name of the credential.
          in: query
          required: false
          type: string
        - name: fullName.region
          description: Name of the region.
          in: query
          required: false
          type: string
      tags:
        - ProviderEksClusterResourceService
  /v1alpha1/manage/providereksclusters/{providerEksCluster.fullName.name}:
    put:
      summary: Update (overwrite) a ProviderEksCluster.
      operationId: ProviderEksClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.UpdateProviderEksClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: providerEksCluster.fullName.name
          description: Name of this cluster in EKS.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.UpdateProviderEksClusterRequest
      tags:
        - ProviderEksClusterResourceService
  /v1alpha1/managementclusters/{fullName.managementClusterName}/extensions/{fullName.name}:
    get:
      summary: Get an Extension.
      operationId: ExtensionResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.extension.GetExtensionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Unique identifier of this Extension.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ExtensionResourceService
  /v1alpha1/managementclusters/{searchScope.managementClusterName}/extensions:
    get:
      summary: List Extensions.
      operationId: ExtensionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.extension.ListExtensionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ExtensionResourceService
  /v1alpha1/managementclusters:manifest/{fullName.name}:
    get:
      summary: Get registration manifest for a management cluster.
      operationId: ManagementClusterManifestHelper_GetManifest
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementClusterGetManifestResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization. Generally a GUID.
          in: query
          required: false
          type: string
      tags:
        - ManagementClusterManifestHelper
  /v1alpha1/managementclusters:reregister/{fullName.name}:
    post:
      summary: Reregister a management cluster.
      operationId: ManagementClusterReregisterHelper_Reregister
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementClusterReregisterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementClusterReregisterRequest
      tags:
        - ManagementClusterReregisterHelper
  /v1alpha1/managementclusters:iam/{fullName.name}:
    get:
      summary: Get policy for a ManagementCluster.
      operationId: ManagementClusterIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.GetManagementClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization. Generally a GUID.
          in: query
          required: false
          type: string
      tags:
        - ManagementClusterIAMPolicy
    put:
      summary: >-
        Update (overwrite) policy for a ManagementCluster - deleted if body is
        empty.
      operationId: ManagementClusterIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.UpdateManagementClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: body
          description: ManagementCluster policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization. Generally a GUID.
          in: query
          required: false
          type: string
      tags:
        - ManagementClusterIAMPolicy
    patch:
      summary: Patch a ManagementCluster policy.
      operationId: ManagementClusterIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.PatchManagementClusterIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.PatchManagementClusterIAMPolicyRequest
      tags:
        - ManagementClusterIAMPolicy
  /v1alpha1/managementclusters:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a ManagementCluster.
      operationId: ManagementClusterIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.TestManagementClusterIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.TestManagementClusterIAMPermissionsRequest
      tags:
        - ManagementClusterIAMPolicy
  /v1alpha1/managementclusters:
    get:
      summary: List ManagementClusters.
      operationId: ManagementClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ListManagementClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ManagementClusterResourceService
    post:
      summary: Create a ManagementCluster.
      operationId: ManagementClusterResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.CreateManagementClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.CreateManagementClusterRequest
      tags:
        - ManagementClusterResourceService
  /v1alpha1/managementclusters/{fullName.name}:
    get:
      summary: Get a ManagementCluster.
      operationId: ManagementClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.GetManagementClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization. Generally a GUID.
          in: query
          required: false
          type: string
      tags:
        - ManagementClusterResourceService
    delete:
      summary: Delete a ManagementCluster.
      operationId: ManagementClusterResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.DeleteManagementClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization. Generally a GUID.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - ManagementClusterResourceService
  /v1alpha1/managementclusters/{managementCluster.fullName.name}:
    put:
      summary: Update (overwrite) a ManagementCluster.
      operationId: ManagementClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.UpdateManagementClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: managementCluster.fullName.name
          description: Unique identifier of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.UpdateManagementClusterRequest
      tags:
        - ManagementClusterResourceService
  /v1alpha1/managementclusters/{searchScope.managementClusterName}/provisioners/{searchScope.provisionerName}/clusterclasses:
    get:
      summary: List ClusterClasses.
      operationId: ClusterClassResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.ListClusterClassesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ClusterClassResourceService
  /v1alpha1/managementclusters/{fullName.managementClusterName}/provisioners:iam/{fullName.name}:
    get:
      summary: Get policy for a Provisioner.
      operationId: ProvisionerIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.GetProvisionerIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ProvisionerIAMPolicy
    put:
      summary: Update (overwrite) policy for a Provisioner - deleted if body is empty.
      operationId: ProvisionerIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.UpdateProvisionerIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: body
          description: Provisioner policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ProvisionerIAMPolicy
    patch:
      summary: Patch a Provisioner policy.
      operationId: ProvisionerIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerIAMPolicyRequest
      tags:
        - ProvisionerIAMPolicy
  /v1alpha1/managementclusters/{fullName.managementClusterName}/provisioners:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Provisioner.
      operationId: ProvisionerIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.TestProvisionerIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.TestProvisionerIAMPermissionsRequest
      tags:
        - ProvisionerIAMPolicy
  /v1alpha1/managementclusters/{fullName.managementClusterName}/provisioners/{fullName.name}:
    get:
      summary: Get a Provisioner.
      operationId: ProvisionerResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.GetProvisionerResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ProvisionerResourceService
    delete:
      summary: Delete a Provisioner.
      operationId: ProvisionerResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.DeleteProvisionerResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ProvisionerResourceService
    patch:
      summary: Patch (partially update) a Provisioner.
      operationId: ProvisionerResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerRequest
      tags:
        - ProvisionerResourceService
  /v1alpha1/managementclusters/{provisioner.fullName.managementClusterName}/provisioners:
    post:
      summary: Create a Provisioner.
      operationId: ProvisionerResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.CreateProvisionerResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: provisioner.fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.CreateProvisionerRequest
      tags:
        - ProvisionerResourceService
  /v1alpha1/managementclusters/{provisioner.fullName.managementClusterName}/provisioners/{provisioner.fullName.name}:
    put:
      summary: Update (overwrite) a Provisioner.
      operationId: ProvisionerResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.UpdateProvisionerResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: provisioner.fullName.managementClusterName
          description: Name of the ManagementCluster.
          in: path
          required: true
          type: string
        - name: provisioner.fullName.name
          description: >-
            Name of the provisioner. It must be unique within a management
            cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.UpdateProvisionerRequest
      tags:
        - ProvisionerResourceService
  /v1alpha1/managementclusters/{searchScope.managementClusterName}/provisioners:
    get:
      summary: List provisioners.
      operationId: ProvisionerResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.ListprovisionersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ProvisionerResourceService
  /v1alpha1/managementclusters/{searchScope.managementClusterName}/provisioners/{searchScope.provisionerName}/tanzukubernetesclusters/{searchScope.tanzuKubernetesClusterName}/classes:
    get:
      summary: List Classes.
      operationId: ClassResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.ListClassesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.tanzuKubernetesClusterName
          description: >-
            Scope search to the specified tanzu_kubernetes_cluster_name;
            supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ClassResourceService
  /v1alpha1/managementclusters/{tanzuKubernetesCluster.fullName.managementClusterName}/provisioners/{tanzuKubernetesCluster.fullName.provisionerName}/tanzukubernetesclusters:apply:
    post:
      summary: Apply a TanzuKubernetesCluster.
      operationId: TanzuKubernetesClusterApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ApplyTanzuKubernetesClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: tanzuKubernetesCluster.fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: tanzuKubernetesCluster.fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ApplyTanzuKubernetesClusterRequest
      tags:
        - TanzuKubernetesClusterApplyHelper
  /v1alpha1/managementclusters/{fullName.managementClusterName}/provisioners/{fullName.provisionerName}/tanzukubernetesclusters/{fullName.name}:
    get:
      summary: Get a TanzuKubernetesCluster.
      operationId: TanzuKubernetesClusterResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.GetTanzuKubernetesClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - TanzuKubernetesClusterResourceService
    delete:
      summary: Delete a TanzuKubernetesCluster.
      operationId: TanzuKubernetesClusterResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.DeleteTanzuKubernetesClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - TanzuKubernetesClusterResourceService
    patch:
      summary: Patch (partially update) a TanzuKubernetesCluster.
      operationId: TanzuKubernetesClusterResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.PatchTanzuKubernetesClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.PatchTanzuKubernetesClusterRequest
      tags:
        - TanzuKubernetesClusterResourceService
  /v1alpha1/managementclusters/{searchScope.managementClusterName}/provisioners/{searchScope.provisionerName}/tanzukubernetesclusters:
    get:
      summary: List TanzuKubernetesClusters.
      operationId: TanzuKubernetesClusterResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ListTanzuKubernetesClustersResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - TanzuKubernetesClusterResourceService
  /v1alpha1/managementclusters/{tanzuKubernetesCluster.fullName.managementClusterName}/provisioners/{tanzuKubernetesCluster.fullName.provisionerName}/tanzukubernetesclusters:
    post:
      summary: Create a TanzuKubernetesCluster.
      operationId: TanzuKubernetesClusterResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.CreateTanzuKubernetesClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: tanzuKubernetesCluster.fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: tanzuKubernetesCluster.fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.CreateTanzuKubernetesClusterRequest
      tags:
        - TanzuKubernetesClusterResourceService
  /v1alpha1/managementclusters/{tanzuKubernetesCluster.fullName.managementClusterName}/provisioners/{tanzuKubernetesCluster.fullName.provisionerName}/tanzukubernetesclusters/{tanzuKubernetesCluster.fullName.name}:
    put:
      summary: Update (overwrite) a TanzuKubernetesCluster.
      operationId: TanzuKubernetesClusterResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.UpdateTanzuKubernetesClusterResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: tanzuKubernetesCluster.fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: tanzuKubernetesCluster.fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: tanzuKubernetesCluster.fullName.name
          description: Name of this cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.UpdateTanzuKubernetesClusterRequest
      tags:
        - TanzuKubernetesClusterResourceService
  /v1alpha1/managementclusters/{nodepool.fullName.managementClusterName}/provisioners/{nodepool.fullName.provisionerName}/tanzukubernetesclusters/{nodepool.fullName.tanzuKubernetesClusterName}/nodepools:apply:
    post:
      summary: Apply a Nodepool.
      operationId: NodepoolApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.ApplyNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.tanzuKubernetesClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.ApplyNodepoolRequest
      tags:
        - NodepoolApplyHelper
  /v1alpha1/managementclusters/{fullName.managementClusterName}/provisioners/{fullName.provisionerName}/tanzukubernetesclusters/{fullName.tanzuKubernetesClusterName}/nodepools/{fullName.name}:
    get:
      summary: Get a Nodepool.
      operationId: NodepoolResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.GetNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.tanzuKubernetesClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    delete:
      summary: Delete a Nodepool.
      operationId: NodepoolResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.DeleteNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.tanzuKubernetesClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - NodepoolResourceService
    patch:
      summary: Patch (partially update) a Nodepool.
      operationId: NodepoolResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.PatchNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.tanzuKubernetesClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.PatchNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/managementclusters/{nodepool.fullName.managementClusterName}/provisioners/{nodepool.fullName.provisionerName}/tanzukubernetesclusters/{nodepool.fullName.tanzuKubernetesClusterName}/nodepools:
    post:
      summary: Create a Nodepool.
      operationId: NodepoolResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.CreateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.tanzuKubernetesClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.CreateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/managementclusters/{nodepool.fullName.managementClusterName}/provisioners/{nodepool.fullName.provisionerName}/tanzukubernetesclusters/{nodepool.fullName.tanzuKubernetesClusterName}/nodepools/{nodepool.fullName.name}:
    put:
      summary: Update (overwrite) a Nodepool.
      operationId: NodepoolResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.UpdateNodepoolResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: nodepool.fullName.managementClusterName
          description: Name of the management cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.provisionerName
          description: Provisioner of the cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.tanzuKubernetesClusterName
          description: Name of the cluster.
          in: path
          required: true
          type: string
        - name: nodepool.fullName.name
          description: Name of this nodepool.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.UpdateNodepoolRequest
      tags:
        - NodepoolResourceService
  /v1alpha1/managementclusters/{searchScope.managementClusterName}/provisioners/{searchScope.provisionerName}/tanzukubernetesclusters/{searchScope.tanzuKubernetesClusterName}/nodepools:
    get:
      summary: List Nodepools.
      operationId: NodepoolResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.ListNodepoolsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.managementClusterName
          description: >-
            Scope search to the specified management_cluster_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.provisionerName
          description: >-
            Scope search to the specified provisioner_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.tanzuKubernetesClusterName
          description: >-
            Scope search to the specified tanzu_kubernetes_cluster_name;
            supports globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - NodepoolResourceService
  /v1alpha1/metering/usage/cluster:
    get:
      summary: Method to get the usage info at cluster level.
      operationId: UsageService_GetClusterLevelUsage
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.metering.usage.GetClusterUsageResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: clusterFullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: clusterFullName.managementClusterName
          description: Name of the management cluster.
          in: query
          required: false
          type: string
        - name: clusterFullName.provisionerName
          description: Provisioner of the cluster.
          in: query
          required: false
          type: string
        - name: clusterFullName.name
          description: Name of this cluster.
          in: query
          required: false
          type: string
      tags:
        - UsageService
  /v1alpha1/metering/usage/org:
    get:
      summary: Method to get the usage info at org level.
      operationId: UsageService_GetOrgLevelUsage
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.metering.usage.GetOrgUsageResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - UsageService
  /v1alpha1/organization/fluxcd/helm/repositories/{fullName.repositoryName}/chartmetadatas/{fullName.chartMetadataName}/charts/{fullName.name}:
    get:
      summary: Get a Chart.
      operationId: ChartResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.GetChartResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.repositoryName
          description: Name of helm repository.
          in: path
          required: true
          type: string
        - name: fullName.chartMetadataName
          description: Name of the helm chart.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Version of helm chart such as 0.5.1
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ChartResourceService
  /v1alpha1/organization/fluxcd/helm/repositories/{searchScope.repositoryName}/chartmetadatas/{searchScope.chartMetadataName}/charts:
    get:
      summary: List Charts.
      operationId: ChartResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.ListChartsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.repositoryName
          description: >-
            Scope search to the specified repository_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.chartMetadataName
          description: >-
            Scope search to the specified chart_metadata_name; supports
            globbing; default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ChartResourceService
  /v1alpha1/organization/fluxcd/helm/repositories/{fullName.repositoryName}/chartmetadatas/{fullName.name}:
    get:
      summary: Get a ChartMetadata.
      operationId: ChartMetadataResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.GetChartMetadataResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.repositoryName
          description: Name of the helm repository.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the helm chart.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - ChartMetadataResourceService
  /v1alpha1/organization/fluxcd/helm/repositories/{searchScope.repositoryName}/chartmetadatas:
    get:
      summary: List ChartMetadatas.
      operationId: ChartMetadataResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.ListChartMetadatasResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.repositoryName
          description: >-
            Scope search to the specified repository_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - ChartMetadataResourceService
  /v1alpha1/organization/fluxcd/helm/repositories:
    get:
      summary: List Repositories.
      operationId: RepositoryResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.ListRepositoriesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - RepositoryResourceService
  /v1alpha1/organization/fluxcd/helm/repositories/{fullName.name}:
    get:
      summary: Get a Repository.
      operationId: RepositoryResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.GetRepositoryResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the helm repository.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - RepositoryResourceService
  /v1alpha1/organization/integration/enablement/validate:
    get:
      summary: Validate whether specified services are configured in CSP as expected.
      operationId: EnablementService_Validate
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.enablement.ValidateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: service
          description: |-
            IntegratedService for which validation needs to be performed.

             - SERVICE_UNSPECIFIED: Unspecified Service.
             - ARIA: Aria service.
             - TANZU_APPLICATION_ENGINE: Tanzu Application Engine.
          in: query
          required: false
          type: string
          enum:
            - SERVICE_UNSPECIFIED
            - ARIA
            - TANZU_APPLICATION_ENGINE
          default: SERVICE_UNSPECIFIED
      tags:
        - EnablementService
  /v1alpha1/organization/integrations:
    get:
      summary: List Integrations.
      operationId: IntegrationResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.ListIntegrationsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - IntegrationResourceService
    post:
      summary: Create an Integration.
      operationId: IntegrationResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.CreateIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.CreateIntegrationRequest
      tags:
        - IntegrationResourceService
  /v1alpha1/organization/integrations/{fullName.name}:
    get:
      summary: Get an Integration.
      operationId: IntegrationResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.GetIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Org ID of the organization.
          in: query
          required: false
          type: string
      tags:
        - IntegrationResourceService
    delete:
      summary: Delete an Integration.
      operationId: IntegrationResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.DeleteIntegrationResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the integration.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: Org ID of the organization.
          in: query
          required: false
          type: string
      tags:
        - IntegrationResourceService
  /v1alpha1/organization:iam:
    get:
      summary: Get policy for organization.
      operationId: OrganizationIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.GetOrganizationIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - OrganizationIAMPolicy
    put:
      summary: Update (overwrite) policy for organization - deletes if body is empty.
      operationId: OrganizationIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.UpdateOrganizationIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          description: Organization policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - OrganizationIAMPolicy
    patch:
      summary: Patch policy for organization.
      operationId: OrganizationIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.PatchOrganizationIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.PatchOrganizationIAMPolicyRequest
      tags:
        - OrganizationIAMPolicy
  /v1alpha1/organization:iam/testPermissions:
    post:
      summary: Tests permissions for organization.
      operationId: OrganizationIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.TestOrganizationIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.TestOrganizationIAMPermissionsRequest
      tags:
        - OrganizationIAMPolicy
  /v1alpha1/organization/policies:apply:
    post:
      summary: Apply a Policy.
      operationId: PolicyApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.ApplyPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.ApplyPolicyRequest
      tags:
        - PolicyApplyHelper
  /v1alpha1/organization/policies:
    get:
      summary: List Policies.
      operationId: PolicyResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.ListPoliciesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - PolicyResourceService
    post:
      summary: Create a Policy.
      operationId: PolicyResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.CreatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.CreatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/organization/policies/{fullName.name}:
    get:
      summary: Get a Policy.
      operationId: PolicyResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.GetPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
    delete:
      summary: Delete a Policy.
      operationId: PolicyResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.DeletePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
  /v1alpha1/organization/policies/{policy.fullName.name}:
    put:
      summary: Update (overwrite) a Policy.
      operationId: PolicyResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.UpdatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.UpdatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/organization/settings:
    post:
      summary: Create a Setting.
      operationId: SettingResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.CreateSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.CreateSettingRequest
      tags:
        - SettingResourceService
  /v1alpha1/organization/settings/{fullName.name}:
    get:
      summary: Get a Setting.
      operationId: SettingResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.GetSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SettingResourceService
    delete:
      summary: Delete a Setting.
      operationId: SettingResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.DeleteSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SettingResourceService
  /v1alpha1/organization/settings/{setting.fullName.name}:
    put:
      summary: Update (overwrite) a Setting.
      operationId: SettingResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.UpdateSettingResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: setting.fullName.name
          description: |-
            Name of the setting.
            This should be same as the name of setting type.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.UpdateSettingRequest
      tags:
        - SettingResourceService
  /v1alpha1/policy/effective:
    get:
      summary: List Effective.
      operationId: EffectiveResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.ListEffectiveResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.targetResourceRid
          description: Filter by RID of target resource; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.targetResourceUid
          description: Filter by UID of target resource; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.phase
          description: Filter by phase of the policy; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - EffectiveResourceService
  /v1alpha1/policy/insights:
    get:
      summary: List Insights.
      operationId: InsightResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.ListInsightsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.clusterName
          description: >-
            Filter policy insights by cluster_name; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.policyName
          description: >-
            Filter policy insights by policy_name; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.clusterGroup
          description: >-
            Filter policy insights by cluster_group; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.namespace
          description: Filter policy insights by namespace; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.category
          description: Filter policy insights by category; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.issueType
          description: >-
            Filter policy insights by issue_type; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.workspaceName
          description: >-
            Filter policy insights by workspace_name; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - InsightResourceService
  /v1alpha1/policy/insights:statistics:
    get:
      summary: Get policy insight statistics.
      operationId: InsightStatisticsService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.GetInsightStatisticsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - InsightStatisticsService
  /v1alpha1/policy/templates:apply:
    post:
      summary: Apply a Template.
      operationId: TemplateApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.ApplyTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.ApplyTemplateRequest
      tags:
        - TemplateApplyHelper
  /v1alpha1/policy/templates:
    get:
      summary: List Templates.
      operationId: TemplateResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.ListTemplatesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - TemplateResourceService
    post:
      summary: Create a Template.
      operationId: TemplateResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.CreateTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.CreateTemplateRequest
      tags:
        - TemplateResourceService
  /v1alpha1/policy/templates/{fullName.name}:
    get:
      summary: Get a Template.
      operationId: TemplateResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.GetTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of policy template.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - TemplateResourceService
    delete:
      summary: Delete a Template.
      operationId: TemplateResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.DeleteTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of policy template.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - TemplateResourceService
  /v1alpha1/policy/templates/{template.fullName.name}:
    put:
      summary: Update (overwrite) a Template.
      operationId: TemplateResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.UpdateTemplateResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: template.fullName.name
          description: Name of policy template.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.UpdateTemplateRequest
      tags:
        - TemplateResourceService
  /v1alpha1/policy/templates/{fullName.templateName}/versions/{fullName.name}:
    get:
      summary: Get a Version.
      operationId: VersionResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.GetVersionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.templateName
          description: Name of policy template.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of policy template version.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - VersionResourceService
  /v1alpha1/policy/templates/{searchScope.templateName}/versions:
    get:
      summary: List Versions.
      operationId: VersionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.ListVersionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.templateName
          description: >-
            Scope search to the specified template_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - VersionResourceService
  /v1alpha1/policy/types/{fullName.typeName}/recipes/{fullName.name}:
    get:
      summary: Get a Recipe.
      operationId: RecipeResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.GetRecipeResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.typeName
          description: Name of policy type.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of policy recipe.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - RecipeResourceService
  /v1alpha1/policy/types/{searchScope.typeName}/recipes:
    get:
      summary: List Recipes.
      operationId: RecipeResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.ListRecipesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.typeName
          description: >-
            Scope search to the specified type_name; supports globbing; default
            (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - RecipeResourceService
  /v1alpha1/policy/types/{fullName.typeName}/recipes/{fullName.recipeName}/versions/{fullName.name}:
    get:
      summary: Get a Version.
      operationId: VersionResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.GetVersionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.typeName
          description: Name of policy type.
          in: path
          required: true
          type: string
        - name: fullName.recipeName
          description: Name of policy recipe.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of policy recipe version.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - VersionResourceService
  /v1alpha1/policy/types/{searchScope.typeName}/recipes/{searchScope.recipeName}/versions:
    get:
      summary: List Versions.
      operationId: VersionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.ListVersionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.typeName
          description: >-
            Scope search to the specified type_name; supports globbing; default
            (*).
          in: path
          required: true
          type: string
        - name: searchScope.recipeName
          description: >-
            Scope search to the specified recipe_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - VersionResourceService
  /v1alpha1/policy/types:
    get:
      summary: List Types.
      operationId: TypeResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.ListTypesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - TypeResourceService
  /v1alpha1/policy/types/{fullName.name}:
    get:
      summary: Get a Type.
      operationId: TypeResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.GetTypeResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of policy type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - TypeResourceService
  /v1alpha1/resource/insights:
    get:
      summary: List Insights.
      operationId: InsightResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.resource.insight.ListInsightsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.sourceResourceKind
          description: >-
            Filter by the kind of source resource (eg. integration,
            gitrepository, helm, policy-settings); supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.sourceResourceUid
          description: >-
            Filter by the uid of source resource; supports globbing; default
            (*).
          in: query
          required: false
          type: string
        - name: searchScope.insightType
          description: >-
            Filter by type of insight (ERROR / OVERRIDE); supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.sourceScopeType
          description: >-
            Filter by source scope type (org / cg / c); supports globbing;
            default (*).
          in: query
          required: false
          type: string
        - name: searchScope.clusterName
          description: Filter by cluster name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - InsightResourceService
  /v1alpha1/setting/effective:
    get:
      summary: List Effective.
      operationId: EffectiveResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.ListEffectiveResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.targetResourceRid
          description: Filter by RID of target resource; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.targetResourceUid
          description: Filter by UID of target resource; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: searchScope.settingType
          description: Filter by type of setting; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - EffectiveResourceService
  /v1alpha1/setting/types:
    get:
      summary: List Types.
      operationId: TypeResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.setting.type.ListTypesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - TypeResourceService
  /v1alpha1/setting/types/{fullName.name}:
    get:
      summary: Get a Type.
      operationId: TypeResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.setting.type.GetTypeResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the Setting Type.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - TypeResourceService
  /v1alpha1/subscription:
    get:
      summary: List Subscriptions.
      operationId: SubscriptionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.subscription.ListSubscriptionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SubscriptionResourceService
  /v1alpha1/subscriptions:
    get:
      summary: List returns all subscriptions information related to the Organization.
      operationId: SubscriptionsService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.subscription.ListResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - SubscriptionsService
  /v1alpha1/system/binaries:
    get:
      summary: Request to get the links to the latest CLI binaries.
      operationId: BinariesService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.GetBinariesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - BinariesService
  /v1alpha1/system/binaries/corecli:
    get:
      summary: Request to get the links to the latest CLI binaries.
      operationId: CoreCliService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.corecli.GetCoreCliResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - CoreCliService
  /v1alpha1/system/binaries/plugins:
    get:
      summary: List tmc plugins.
      operationId: PluginDiscoveryService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.plugin.ListPluginsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - PluginDiscoveryService
  /v1alpha1/system/binaries/plugins/{name}:
    get:
      summary: Describe a requested tmc plugin.
      operationId: PluginDiscoveryService_Describe
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.plugin.DescribePluginResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: name
          description: Name of the plugin.
          in: path
          required: true
          type: string
      tags:
        - PluginDiscoveryService
  /v1alpha1/tanzupackage/metadatas:
    get:
      summary: List Metadatas.
      operationId: MetadataResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.ListMetadatasResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - MetadataResourceService
  /v1alpha1/tanzupackage/metadatas/{fullName.name}:
    get:
      summary: Get a Metadata.
      operationId: MetadataResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.GetMetadataResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of the Package Metadata.
          in: path
          required: true
          type: string
      tags:
        - MetadataResourceService
  /v1alpha1/tanzupackage/metadatas/{fullName.metadataName}/packages/{fullName.name}:
    get:
      summary: Get a Package.
      operationId: PackageResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.GetPackageResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.metadataName
          description: Name of the Package metadata.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the Package. It represents version of the Package metadata.
          in: path
          required: true
          type: string
      tags:
        - PackageResourceService
  /v1alpha1/tanzupackage/metadatas/{searchScope.metadataName}/packages:
    get:
      summary: List Packages.
      operationId: PackageResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.ListPackagesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.metadataName
          description: >-
            Scope search to the specified metadata_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - PackageResourceService
  /v1alpha1/tanzupackage/tap/eulas:
    get:
      summary: Validate an Eula.
      operationId: EulaResourceService_Validate
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.ValidateEulaResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: orgId
          description: Eula to validate.
          in: query
          required: false
          type: string
        - name: tapVersion
          in: query
          required: false
          type: string
      tags:
        - EulaResourceService
    post:
      summary: Accept an Eula.
      operationId: EulaResourceService_Accept
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.AcceptEulaResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.AcceptEulaRequest
      tags:
        - EulaResourceService
  /v1alpha1/tanzupackage/tap/solutions:
    get:
      summary: List Solutions.
      operationId: SolutionResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ListSolutionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - SolutionResourceService
    post:
      summary: Create a Solution.
      operationId: SolutionResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.CreateSolutionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.CreateSolutionRequest
      tags:
        - SolutionResourceService
  /v1alpha1/tanzupackage/tap/solutions/{fullName.name}:
    get:
      summary: Get a Solution.
      operationId: SolutionResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.GetSolutionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of solution.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - SolutionResourceService
    delete:
      summary: Delete a Solution.
      operationId: SolutionResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.DeleteSolutionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of solution.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
        - name: force
          description: Force delete.
          in: query
          required: false
          type: boolean
      tags:
        - SolutionResourceService
  /v1alpha1/tanzupackage/tap/solutions/{solution.fullName.name}:
    put:
      summary: Update (overwrite) a Solution.
      operationId: SolutionResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.UpdateSolutionResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: solution.fullName.name
          description: Name of solution.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.UpdateSolutionRequest
      tags:
        - SolutionResourceService
  /v1alpha1/tanzupackage/tap:validateprerequisites:
    post:
      summary: Validate pre-requisites.
      operationId: PackageHelperService_ValidatePrerequisites
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.ValidatePrerequisitesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.ValidatePrerequisitesRequest
      tags:
        - PackageHelperService
  /v1alpha1/workspaces/{policy.fullName.workspaceName}/policies:apply:
    post:
      summary: Apply a Policy.
      operationId: PolicyApplyHelper_Apply
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.ApplyPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.workspaceName
          description: Name of the workspace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.ApplyPolicyRequest
      tags:
        - PolicyApplyHelper
  /v1alpha1/workspaces/{fullName.workspaceName}/policies/{fullName.name}:
    get:
      summary: Get a Policy.
      operationId: PolicyResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.GetPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.workspaceName
          description: Name of the workspace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
    delete:
      summary: Delete a Policy.
      operationId: PolicyResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.DeletePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.workspaceName
          description: Name of the workspace.
          in: path
          required: true
          type: string
        - name: fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - PolicyResourceService
  /v1alpha1/workspaces/{policy.fullName.workspaceName}/policies:
    post:
      summary: Create a Policy.
      operationId: PolicyResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.CreatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.workspaceName
          description: Name of the workspace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.CreatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/workspaces/{policy.fullName.workspaceName}/policies/{policy.fullName.name}:
    put:
      summary: Update (overwrite) a Policy.
      operationId: PolicyResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.UpdatePolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: policy.fullName.workspaceName
          description: Name of the workspace.
          in: path
          required: true
          type: string
        - name: policy.fullName.name
          description: Name of the policy.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.UpdatePolicyRequest
      tags:
        - PolicyResourceService
  /v1alpha1/workspaces/{searchScope.workspaceName}/policies:
    get:
      summary: List Policies.
      operationId: PolicyResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.ListPoliciesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.workspaceName
          description: >-
            Scope search to the specified workspace_name; supports globbing;
            default (*).
          in: path
          required: true
          type: string
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - PolicyResourceService
  /v1alpha1/workspaces:iam/{fullName.name}:
    get:
      summary: Get policy for a Workspace.
      operationId: WorkspaceIAMPolicy_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.GetWorkspaceIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - WorkspaceIAMPolicy
    put:
      summary: Update (overwrite) policy for a Workspace - deleted if body is empty.
      operationId: WorkspaceIAMPolicy_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.UpdateWorkspaceIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: body
          description: Workspace policy.
          in: body
          required: true
          schema:
            $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - WorkspaceIAMPolicy
    patch:
      summary: Patch a Workspace policy.
      operationId: WorkspaceIAMPolicy_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceIAMPolicyResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceIAMPolicyRequest
      tags:
        - WorkspaceIAMPolicy
  /v1alpha1/workspaces:iam/{fullName.name}/testPermissions:
    post:
      summary: Tests permissions for a Workspace.
      operationId: WorkspaceIAMPolicy_TestPermissions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.TestWorkspaceIAMPermissionsResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.TestWorkspaceIAMPermissionsRequest
      tags:
        - WorkspaceIAMPolicy
  /v1alpha1/workspaces:
    get:
      summary: List Workspaces.
      operationId: WorkspaceResourceService_List
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.ListWorkspacesResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: searchScope.name
          description: Scope search to the specified name; supports globbing; default (*).
          in: query
          required: false
          type: string
        - name: sortBy
          description: Sort Order.
          in: query
          required: false
          type: string
        - name: query
          description: TQL query string.
          in: query
          required: false
          type: string
        - name: pagination.offset
          description: Offset at which to start returning records.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.size
          description: Number of records to return.
          in: query
          required: false
          type: string
          format: uint64
        - name: includeTotalCount
          description: Include total count.
          in: query
          required: false
          type: boolean
      tags:
        - WorkspaceResourceService
    post:
      summary: Create a Workspace.
      operationId: WorkspaceResourceService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.CreateWorkspaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.CreateWorkspaceRequest
      tags:
        - WorkspaceResourceService
  /v1alpha1/workspaces/{fullName.name}:
    get:
      summary: Get a Workspace.
      operationId: WorkspaceResourceService_Get
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.GetWorkspaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - WorkspaceResourceService
    delete:
      summary: Delete a Workspace.
      operationId: WorkspaceResourceService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.DeleteWorkspaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: fullName.orgId
          description: ID of Organization.
          in: query
          required: false
          type: string
      tags:
        - WorkspaceResourceService
    patch:
      summary: Patch (partially update) a Workspace.
      operationId: WorkspaceResourceService_Patch
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceRequest
      tags:
        - WorkspaceResourceService
  /v1alpha1/workspaces/{workspace.fullName.name}:
    put:
      summary: Update (overwrite) a Workspace.
      operationId: WorkspaceResourceService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.UpdateWorkspaceResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: workspace.fullName.name
          description: Name of this Workspace.
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/vmware.tanzu.manage.v1alpha1.workspace.UpdateWorkspaceRequest
      tags:
        - WorkspaceResourceService
definitions:
  google.protobuf.Any:
    type: object
    properties:
      typeUrl:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/google.protobuf.Any'
  vmware.tanzu.core.v1alpha1.object.Meta:
    type: object
    properties:
      uid:
        type: string
        description: UID for the object.
      generation:
        type: string
        format: int64
        description: >-
          Generation of the resource as specified by the user, increments on
          changes.
      resourceVersion:
        type: string
        description: >-
          A string that identifies the internal version of this object that can
          be used by clients to

          determine when objects have changed. This value MUST be treated as
          opaque by clients and 

          passed unmodified back to the server.
      creationTime:
        type: string
        format: date-time
        description: Creation time of the object.
      updateTime:
        type: string
        format: date-time
        description: Update time of the object.
      description:
        type: string
        description: Description of the resource.
      labels:
        type: object
        additionalProperties:
          type: string
        description: Labels to apply to the object.
      annotations:
        type: object
        additionalProperties:
          type: string
        description: >-
          Annotations for the object. Annotations hold system level information
          provisioned by controllers.
      parentReferences:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Hard object references to parents of this resource.
    description: Holds general shared object metadatas.
  vmware.tanzu.core.v1alpha1.object.Reference:
    type: object
    properties:
      rid:
        type: string
        description: RID for the object.
      uid:
        type: string
        description: UID for the object.
    description: Reference references a foreign resource.
  vmware.tanzu.core.v1alpha1.policy.BindingDelta:
    type: object
    properties:
      role:
        type: string
        description: Role for binding.
      subject:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.Subject'
        description: Subject of rolebinding.
      op:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta.OpType'
        description: Type of operation.
    description: Used for modify policy apis.
  vmware.tanzu.core.v1alpha1.policy.BindingDelta.OpType:
    type: string
    enum:
      - OP_TYPE_UNSPECIFIED
      - ADD
      - DELETE
    default: OP_TYPE_UNSPECIFIED
    description: |-
      Type of operation associated with the list of rolebindings.

       - OP_TYPE_UNSPECIFIED: Unspecified operation type.
       - ADD: Appending rolebindings to the existing policy.
       - DELETE: Deleting rolebindings from the existing policy.
  vmware.tanzu.core.v1alpha1.policy.IAMPolicy:
    type: object
    properties:
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for this policy.
      roleBindings:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.RoleBinding'
        description: List of role bindings associated with the policy.
    description: Representation of an iam policy.
  vmware.tanzu.core.v1alpha1.policy.RoleBinding:
    type: object
    properties:
      role:
        type: string
        description: Role for this rolebinding -max length for role is 126.
      subjects:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.Subject'
        description: Subject of rolebinding.
    description: Representation of an iam role-binding in resource manager.
  vmware.tanzu.core.v1alpha1.policy.Subject:
    type: object
    properties:
      name:
        type: string
        description: Subject name - allow max characters for email - 320.
      kind:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.Subject.Kind'
        description: Subject type.
    description: Representation of a subject in resource manager.
  vmware.tanzu.core.v1alpha1.policy.Subject.Kind:
    type: string
    enum:
      - KIND_UNSPECIFIED
      - GROUP
      - SERVICEACCOUNT
      - USER
      - K8S_SERVICEACCOUNT
    default: KIND_UNSPECIFIED
    description: |-
      Kind of subject.

       - KIND_UNSPECIFIED: Subject is a undefined.
       - GROUP: Subject is a group.
       - SERVICEACCOUNT: Subject is a service.
       - USER: Subject is a user.
       - K8S_SERVICEACCOUNT: Subject is k8s service account.
  vmware.tanzu.manage.v1alpha1.account.credential.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of this credential.
    description: |-
      Full name of the credential. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.account.credential.GetCredentialIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Credential policy.
    description: GetCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: Credential full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchCredentialIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.credential.TestCredentialIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: Credential full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestCredentialIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.account.credential.TestCredentialIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestCredentialIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.account.credential.UpdateCredentialIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Credential policy set.
    description: UpdateCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.credential.GeneratePermissionTemplateRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: The full name of the credential that will be created.
      capability:
        type: string
        description: The Tanzu capability for which the credential shall be used.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
    description: Request to generate a permission template for a non-existent credential.
  vmware.tanzu.manage.v1alpha1.account.credential.GeneratePermissionTemplateResponse:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: The full name of the credential that this template is for.
      capability:
        type: string
        description: The Tanzu capability for which the credential shall be used.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
      permissionTemplate:
        type: string
        description: Base64 encoded permission template.
      templateUrl:
        type: string
        description: URL for permission template.
      templateValues:
        type: object
        additionalProperties:
          type: string
        description: >-
          Values which helps in forming the CLI command output and displaying
          values on UI.
    description: Response containing the generated permission template.
  vmware.tanzu.manage.v1alpha1.account.credential.GetPermissionTemplateResponse:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: Credential's full name.
      capability:
        type: string
        description: The Tanzu capability for which the credential shall be used.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
      permissionTemplate:
        type: string
        description: Base64 encoded permission template.
      templateUrl:
        type: string
        description: URL for permission template.
      templateValues:
        type: object
        additionalProperties:
          type: string
        description: >-
          Values which helps in forming the CLI command output and displaying
          values on UI.
    description: >-
      Response containing the latest permission template for an existing
      credential.
  vmware.tanzu.manage.v1alpha1.account.credential.Provider:
    type: string
    enum:
      - PROVIDER_UNSPECIFIED
      - AWS_EC2
      - GENERIC_S3
      - AZURE_AD
      - AWS_EKS
      - AZURE_AKS
      - GENERIC_KEY_VALUE
    default: PROVIDER_UNSPECIFIED
    description: |-
      Provider definition - indicates the credential provider.

       - PROVIDER_UNSPECIFIED: Unspecified credential provider (default).
       - AWS_EC2: AmazonWeb Services EC2.
       - GENERIC_S3: Generic S3 provider.
       - AZURE_AD: Azure Active Directory.
       - AWS_EKS: AWS EKS.
       - AZURE_AKS: Azure AKS.
       - GENERIC_KEY_VALUE: Generic key value pair.
  google.protobuf.NullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

       The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  grpc.gateway.runtime.StreamError:
    type: object
    properties:
      grpcCode:
        type: integer
        format: int32
      httpCode:
        type: integer
        format: int32
      message:
        type: string
      httpStatus:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/google.protobuf.Any'
  vmware.tanzu.core.v1alpha1.event.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - CREATE
      - UPDATE
      - DELETE
    default: TYPE_UNSPECIFIED
    description: |-
      Possible types of events.

       - TYPE_UNSPECIFIED: Unspecified event type.
       - CREATE: Create event.
       - UPDATE: Update event.
       - DELETE: Delete event.
  vmware.tanzu.core.v1alpha1.object.Type:
    type: object
    properties:
      kind:
        type: string
        description: Kind of the type.
      version:
        type: string
        description: Version of the type.
      package:
        type: string
        description: Package of the type.
    description: Holds general type metadatas.
  vmware.tanzu.core.v1alpha1.object.UID:
    type: object
    properties:
      value:
        type: string
        description: UID for the object.
    description: UID is a unique identifier for a resource.
  vmware.tanzu.core.v1alpha1.options.OffsetPaginationOptions:
    type: object
    properties:
      offset:
        type: string
        format: uint64
        description: Offset at which to start returning records.
      size:
        type: string
        format: uint64
        description: Number of records to return.
    description: Options to paginate a response using offsets.
  vmware.tanzu.core.v1alpha1.patch.Operation:
    type: object
    properties:
      op:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation.Type'
        description: Type of operation to be performed as part of the patch.
      path:
        type: string
        description: Path is a JSON pointer to the target field within the resource.
      value:
        type: object
        description: Value to be applied to or tested on the target field.
      from:
        type: string
        description: From is a JSON pointer to the source field within the resource.
    title: |-
      Operation is a JSON style patch operation as defined by RFC6902.
      Ref.: https://tools.ietf.org/html/rfc6902
  vmware.tanzu.core.v1alpha1.patch.Operation.Type:
    type: string
    enum:
      - type_unspecified
      - add
      - remove
      - replace
      - test
      - copy
      - move
    default: type_unspecified
    description: |-
      Type of the Patch operation.

       - type_unspecified: Unspecified operation type.
       - add: Add a field.
       - remove: Remove a field.
       - replace: Replace a field.
       - test: Test a field.
       - copy: Copy a field.
       - move: Move a field.
  vmware.tanzu.core.v1alpha1.status.Condition:
    type: object
    properties:
      type:
        type: string
        description: Type of condition.
      status:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition.Status'
        description: |-
          Status of the condition, one of True, False, Unknown.
          Default is Unknown.
      severity:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition.Severity'
        description: |-
          Severity of condition, one of Error, Warning, Info.
          Default is Error.
      lastTransitionTime:
        type: string
        format: date-time
        description: Last time the condition transit from one status to another.
      reason:
        type: string
        description: One-word reason for the condition's last transition.
      message:
        type: string
        description: Human readable message indicating details about last transition.
    title: >-
      Condition describes the status of resource.

      Each resource should provide meaningful set of conditions.

      For Tanzu, each resource must support 'Ready' and 'Scheduled' conditions

      Here is meaning of base conditions and their states:

      Condition 'Ready' with Status 'True' means user action has reached the
      desired state

      Condition 'Ready' with Status 'False' means user action failed to reach
      desired state.

      Condition 'Scheduled' with Status 'False' means user action can not be
      scheduled due to some reason

      Condition 'Scheduled' with Status 'True', Ready unknown means job is
      scheduled and system is working/will work on reaching to desires state

      Condition 'Scheduled' with Status 'Unknown' means system does not know the
      status of the action
  vmware.tanzu.core.v1alpha1.status.Condition.Severity:
    type: string
    enum:
      - SEVERITY_UNSPECIFIED
      - ERROR
      - WARNING
      - INFO
    default: SEVERITY_UNSPECIFIED
    description: |-
      Severity expresses the severity of a Condition Type failing.

       - SEVERITY_UNSPECIFIED: Unspecified severity.
       - ERROR: Failure of a condition type should be viewed as an error.
       - WARNING: Failure of a condition type should be viewed as a warning, but that things could still work.
       - INFO: Failure of a condition type should be viewed as purely informational, and that things could still work.
  vmware.tanzu.core.v1alpha1.status.Condition.Status:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - 'TRUE'
      - 'FALSE'
    default: STATUS_UNSPECIFIED
    description: |-
      Status describes the state of condition.

       - STATUS_UNSPECIFIED: Controller is actively working to achieve the condition.
       - TRUE: Reconciliation has succeeded. Once all transition conditions have succeeded, the "happy state" condition should be set to True..
       - FALSE: Reconciliation has failed. This should be a terminal failure state until user action occurs.
  vmware.tanzu.manage.v1alpha1.account.credential.CreateCredentialRequest:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential to create.
    description: Request to create a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.CreateCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential created.
    description: Response from creating a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.Credential:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: Full name for the credential.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the credential object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Spec'
        description: Spec for the credential.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Status'
        description: Status for the credential.
    description: >-
      A credential for an infrastructure provider account connection.


      Credentials are scoped to and used by Tanzu Mission Control services to
      operate

      on resources in an infrastructure provider. The credential data is always
      encrypted

      and securely stored.
  vmware.tanzu.manage.v1alpha1.account.credential.Data:
    type: object
    properties:
      genericCredential:
        type: string
        description: Generic credential.
      awsCredential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.aws.Spec
        description: AWS credential.
      keyValue:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec
        description: Key Value credential.
      azureCredential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.azure.Spec
        description: Azure credential.
    description: Credential data.
  vmware.tanzu.manage.v1alpha1.account.credential.DeleteCredentialResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.EnumerateCredentialsResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential object.
    description: Streamed response from enumerating Credentials.
  vmware.tanzu.manage.v1alpha1.account.credential.GetCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential returned.
    description: Response from getting a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.ListCredentialsResponse:
    type: object
    properties:
      credentials:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: List of credentials.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Credentials.
  vmware.tanzu.manage.v1alpha1.account.credential.Meta:
    type: object
    properties:
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: Provider of the credential.
      temporaryCredentialSupport:
        type: boolean
        description: >-
          Temporary credential support flag indicates if this credential should
          be kept private

          and instead be used to generate temporary, short-lived, and scoped
          credentials.
    description: |-
      Credential metadata identifying additional details and the purpose of the
      credential.
  vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: Credential to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.PatchCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential patched.
    description: Response from patching a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.Reference:
    type: object
    properties:
      referenceUid:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.UID'
        description: UID of the reference.
      resourceId:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: The RID of the resource referencing the credential.
    description: >-
      Reference contains information on another TMC resource using this
      credential.

      Credentials with references cannot be deleted as they are being used by
      some resource.
  vmware.tanzu.manage.v1alpha1.account.credential.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      capability:
        type: string
        description: Filter credentials by a capability; supports globbing; default (*).
      provider:
        type: string
        description: Filter credentials by a provider; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.account.credential.Spec:
    type: object
    properties:
      meta:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Meta'
        description: Metadata and properties of the credential.
      capability:
        type: string
        description: The Tanzu capability for which the credential shall be used.
      data:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Data'
        description: Credential data.
    description: The credential object spec.
  vmware.tanzu.manage.v1alpha1.account.credential.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Status.Phase
        description: Phase of the credential.
      phaseInfo:
        type: string
        description: Additional information about the phase.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Status.Phase
        description: List of available phases for a credential.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: |-
          The conditions describing a credential's status.

          - "Scheduled"
               * True when the credential is being created.
               * False if the credential cannot be created.
          - "Ready"
               * True when the credential is created.
               * False if the credential creation failed.
          - "Validating"
               * True when and if the intended service starts validating the credential.
               * False if the credential validation process failed. This value does not
                 represent the validity of the credential.
      references:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Reference
        description: The list of references. i.e. resources using the credential.
    description: Status of the credential.
  vmware.tanzu.manage.v1alpha1.account.credential.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATED
      - VALIDATING
      - VALID
      - INVALID
      - ERROR
      - DELETING
      - DELETED
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: >-
      The overall phase of a credential.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - CREATED: The credential is created and can be used.
       - VALIDATING: The credential's capabilities are being validated by the intended service.

      Credentials can be used even if they have not been validated- this phase

      is set by the intended service if it validates credentials.
       - VALID: The credential satisfies the intended service's requirements.
       - INVALID: The credential does not satisfy the intended service's requirements.

      Invalid credentials might require user action to fix their permissions-
      this information

      is provided by the intended service.
       - ERROR: An error occurred while the credential was being created or validated.
       - DELETING: The credential clean up has begun.
       - DELETED: The credential clean up has completed and will be removed from TMC.
       - UPDATING: The credential update has begun.
  vmware.tanzu.manage.v1alpha1.account.credential.UpdateCredentialRequest:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Update Credential.
    description: Request to update (overwrite) a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.UpdateCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential updated.
    description: Response from updating a Credential.
  vmware.tanzu.manage.v1alpha1.account.credential.WatchCredentialsResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Credential
        description: Credential event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Credentials.
  vmware.tanzu.manage.v1alpha1.account.credential.type.aws.AccessKey:
    type: object
    properties:
      accessKeyId:
        type: string
        description: AWS access key ID.
      secretAccessKey:
        type: string
        description: Secret access key for the access key ID.
    description: AWS access key ID and secret access key pair.
  vmware.tanzu.manage.v1alpha1.account.credential.type.aws.IAMRole:
    type: object
    properties:
      arn:
        type: string
        description: AWS IAM role ARN.
      extId:
        type: string
        description: An external ID used to assume an AWS IAM role.
    description: AWS IAM role ARN and external ID.
  vmware.tanzu.manage.v1alpha1.account.credential.type.aws.Spec:
    type: object
    properties:
      accountId:
        type: string
        description: Account ID of the AWS credential.
      iamRole:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.aws.IAMRole
        description: AWS IAM role ARN and external ID.
      accessKey:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.aws.AccessKey
        description: AWS access key ID and secret access key.
      genericCredential:
        type: string
        description: Generic credential.
    description: AWS credential spec.
  vmware.tanzu.manage.v1alpha1.account.credential.type.azure.ServicePrincipal:
    type: object
    properties:
      subscriptionId:
        type: string
        description: Subscription ID of the Azure credential.
      tenantId:
        type: string
        description: Tenant ID of the Azure credential.
      resourceGroup:
        type: string
        description: Resource Group name.
      clientId:
        type: string
        description: Client ID of the Service Principal.
      clientSecret:
        type: string
        description: Client Secret of the Service Principal.
      azureCloudName:
        type: string
        description: Azure Cloud name.
    description: Azure Service Principal.
  vmware.tanzu.manage.v1alpha1.account.credential.type.azure.ServicePrincipalWithCertificate:
    type: object
    properties:
      subscriptionId:
        type: string
        description: Subscription ID of the Azure credential.
      tenantId:
        type: string
        description: Tenant ID of the Azure credential.
      clientId:
        type: string
        description: Client ID of the Service Principal.
      clientCertificate:
        type: string
        description: Client certificate of the Service Principal.
      azureCloudName:
        type: string
        description: Azure Cloud name.
      managedSubscriptions:
        type: array
        items:
          type: string
        description: IDs of the Azure Subscriptions that the Service Principal can manage.
    description: Azure Service Principal with client certificate.
  vmware.tanzu.manage.v1alpha1.account.credential.type.azure.Spec:
    type: object
    properties:
      servicePrincipal:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.azure.ServicePrincipal
        description: Service Principal.
      servicePrincipalWithCertificate:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.azure.ServicePrincipalWithCertificate
        description: ServicePrincipalWithCertificate.
    description: Azure credential spec.
  vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec:
    type: object
    properties:
      type:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec.SecretType
        description: |-
          Type of Secret.
          The default value is SECRET_TYPE_OPAQUE.
      data:
        type: object
        additionalProperties:
          type: string
          format: byte
        description: |-
          Data contains the secret data. Each key must consist of alphanumeric
          characters, '-', '_' or '.'.
    description: KeyValue Type credential stored in Account Manager.
  vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec.SecretType:
    type: string
    enum:
      - SECRET_TYPE_UNSPECIFIED
      - OPAQUE_SECRET_TYPE
      - DOCKERCONFIGJSON_SECRET_TYPE
    default: SECRET_TYPE_UNSPECIFIED
    description: |-
      Type of Secret.

       - SECRET_TYPE_UNSPECIFIED: SECRET_TYPE_UNSPECIFIED is default.
       - OPAQUE_SECRET_TYPE: SECRET_TYPE_OPAQUE maps to the k8s secret type OPAQUE.
      It is arbitrary user-defined data.
       - DOCKERCONFIGJSON_SECRET_TYPE: DOCKERCONFIGJSON_SECRET_TYPE maps to  Kubernetes secrets type kubernetes.io/dockerconfigjson.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: Organization ID.
      managementClusterName:
        type: string
        description: Name of the ManagementCluster.
      name:
        type: string
        description: Name of this credential.
    description: |-
      Full name of the credential. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GetCredentialIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Credential policy.
    description: GetCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: Credential full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchCredentialIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.TestCredentialIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: Credential full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestCredentialIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.TestCredentialIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestCredentialIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.UpdateCredentialIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Credential policy set.
    description: UpdateCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GeneratePermissionTemplateRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: The full name of the credential that will be created.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
    description: Request to generate a permission template for a non-existent credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GeneratePermissionTemplateResponse:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: The full name of the credential that this template is for.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
      permissionTemplate:
        type: string
        description: Base64 encoded permission template.
    description: Response containing the generated permission template.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GetPermissionTemplateResponse:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: Credential's full name.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
      permissionTemplate:
        type: string
        description: Base64 encoded permission template.
    description: >-
      Response containing the latest permission template for an existing
      credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.CreateCredentialRequest:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential to create.
    description: Request to create a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.CreateCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential created.
    description: Response from creating a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: Full name for the credential.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the credential object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Spec
        description: Spec for the credential.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Status'
        description: Status for the credential.
    description: >-
      A credential for an infrastructure provider account connection,
      specifically for ManagementClusters.


      Credential data is always encrypted and securely stored.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.DeleteCredentialResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.EnumerateCredentialsResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential object.
    description: Streamed response from enumerating Credentials.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.GetCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential returned.
    description: Response from getting a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.ListCredentialsResponse:
    type: object
    properties:
      credentials:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: List of credentials.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Credentials.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.FullName
        description: Credential to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.PatchCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential patched.
    description: Response from patching a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      provider:
        type: string
        description: Filter credentials by a provider; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Spec:
    type: object
    properties:
      meta:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Meta'
        description: Metadata and properties of the credential.
      data:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Data'
        description: Credential data.
    description: The ManagementClusterCredential object spec.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.UpdateCredentialRequest:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Update Credential.
    description: Request to update (overwrite) a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.UpdateCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential updated.
    description: Response from updating a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.WatchCredentialsResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.credential.Credential
        description: Credential event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Credentials.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the ManagementCluster.
      provisionerName:
        type: string
        description: Name of the Provisioner.
      name:
        type: string
        description: Name of this credential.
    description: |-
      Full name of the credential. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GetCredentialIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Credential policy.
    description: GetCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: Credential full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchCredentialIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.TestCredentialIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: Credential full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestCredentialIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.TestCredentialIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestCredentialIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.UpdateCredentialIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Credential policy set.
    description: UpdateCredentialIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GeneratePermissionTemplateRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: The full name of the credential that will be created.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
    description: Request to generate a permission template for a non-existent credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GeneratePermissionTemplateResponse:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: The full name of the credential that this template is for.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
      permissionTemplate:
        type: string
        description: Base64 encoded permission template.
    description: Response containing the generated permission template.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GetPermissionTemplateResponse:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: Credential's full name.
      provider:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Provider'
        description: The infrastructure provider that the permission template is for.
      permissionTemplate:
        type: string
        description: Base64 encoded permission template.
    description: >-
      Response containing the latest permission template for an existing
      credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.CreateCredentialRequest:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential to create.
    description: Request to create a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.CreateCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential created.
    description: Response from creating a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: Full name for the credential.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the credential object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Spec
        description: Spec for the credential.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Status'
        description: Status for the credential.
    description: >-
      A credential for an infrastructure provider account connection,
      specifically for Provisioners.


      Credential data is always encrypted and securely stored.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.DeleteCredentialResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.EnumerateCredentialsResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential object.
    description: Streamed response from enumerating Credentials.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.GetCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential returned.
    description: Response from getting a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.ListCredentialsResponse:
    type: object
    properties:
      credentials:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: List of credentials.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Credentials.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.FullName
        description: Credential to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.PatchCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential patched.
    description: Response from patching a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      provider:
        type: string
        description: Filter credentials by a provider; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Spec:
    type: object
    properties:
      meta:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Meta'
        description: Metadata and properties of the credential.
      data:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Data'
        description: Credential data.
    description: The ProvisionerCredential object spec.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.UpdateCredentialRequest:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Update Credential.
    description: Request to update (overwrite) a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.UpdateCredentialResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential updated.
    description: Response from updating a Credential.
  vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.WatchCredentialsResponse:
    type: object
    properties:
      credential:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.managementcluster.provisioner.credential.Credential
        description: Credential event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Credentials.
  vmware.tanzu.manage.v1alpha1.agentartifacts.ArtifactReference:
    type: object
    properties:
      repositoryPath:
        type: string
        description: The path of the repository containing the artifact.
      tag:
        type: string
        description: >-
          The tag or hash of the artifact version.

          The repository_path and the tag should be concatenated with `@` if the
          tag contains the prefix `sha`

          If the tag is `latest` or a valid semver, `:` should be used to
          concatenate them.
    description: The details of the artifact references.
  vmware.tanzu.manage.v1alpha1.agentartifacts.Extension:
    type: object
    properties:
      extensionName:
        type: string
        description: The name of the extension to which the referenced artifacts belong.
      references:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.agentartifacts.ArtifactReference
        description: The reference to all the artifacts belonging to an extension.
      createdAt:
        type: string
        format: date-time
        description: The timestamp when the extension was rolled out.
    description: The details of the artifact references for a particular extension.
  vmware.tanzu.manage.v1alpha1.agentartifacts.ListAgentArtifactsResponse:
    type: object
    properties:
      registryEndpoint:
        type: string
        description: The endpoint of the registry containing the artifact.
      extensions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.agentartifacts.Extension'
        description: The list of extensions and their corresponding artifact references.
    description: The response message to list the image artifacts.
  vmware.tanzu.manage.v1alpha1.agentartifacts.SearchScope:
    type: object
    properties:
      extensionName:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.akscluster.AADConfig:
    type: object
    properties:
      managed:
        type: boolean
        description: Whether to enable managed AAD.
      tenantId:
        type: string
        description: >-
          The AAD tenant ID to use for authentication. If not specified, will
          use the tenant of the deployment subscription.
      adminGroupObjectIds:
        type: array
        items:
          type: string
        description: >-
          The list of AAD group object IDs that will have admin role of the
          cluster.
      enableAzureRbac:
        type: boolean
        description: Whether to enable Azure RBAC for Kubernetes authorization.
    description: Configs for Azure Active Directory integration.
  vmware.tanzu.manage.v1alpha1.akscluster.AccessConfig:
    type: object
    properties:
      enableRbac:
        type: boolean
        description: Whether to enable kubernetes role-based access control.
      disableLocalAccounts:
        type: boolean
        description: Disable the local accounts on the cluster when it's true.
      aadConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AADConfig'
        description: Azure Active Directory config.
    description: Configs for the authentication and authorization.
  vmware.tanzu.manage.v1alpha1.akscluster.AddonsConfig:
    type: object
    properties:
      azureKeyvaultSecretsProviderConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AzureKeyvaultSecretsProviderAddonConfig
        description: The azure-keyvault-secrets-provider addon config.
      azurePolicyConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AzurePolicyAddonConfig
        description: The azure-policy addon config.
      monitoringConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.MonitoringAddonConfig
        description: The monitoring config.
    description: The addons config.
  vmware.tanzu.manage.v1alpha1.akscluster.AksCluster:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.FullName'
        description: Full name for the cluster.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Spec'
        description: Spec for the cluster.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Status'
        description: Status for the cluster.
    description: AksCluster is an AKS Kubernetes Cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.ApiServerAccessConfig:
    type: object
    properties:
      authorizedIpRanges:
        type: array
        items:
          type: string
        description: The IP ranges authorized to access the Kubernetes API server.
      enablePrivateCluster:
        type: boolean
        description: Whether to create the cluster as a private cluster or not.
    description: The access config for the cluster API server.
  vmware.tanzu.manage.v1alpha1.akscluster.ApplyAksClusterRequest:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster to apply.
    description: Request to apply an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.ApplyAksClusterResponse:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster applied.
    description: Response from applying an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.AutoUpgradeConfig:
    type: object
    properties:
      channel:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Channel'
        description: The channel for the auto upgrade.
    description: The auto upgrade config.
  vmware.tanzu.manage.v1alpha1.akscluster.AzureKeyvaultSecretsProviderAddonConfig:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether the azure-keyvault-secrets-provider addon is enabled or not.
      enableSecretRotation:
        type: boolean
        description: >-
          Whether to enable secret rotation for the
          azure-keyvault-secrets-provider addon.
      rotationPoolInterval:
        type: string
        description: >-
          The interval at which to rotate the secrets in the
          azure-keyvault-secrets-provider addon.
    description: The azure-keyvault-secrets-provider addon config.
  vmware.tanzu.manage.v1alpha1.akscluster.AzurePolicyAddonConfig:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether the azure-policy addon is enabled or not.
    description: The azure-policy addon config.
  vmware.tanzu.manage.v1alpha1.akscluster.Channel:
    type: string
    enum:
      - CHANNEL_UNSPECIFIED
      - NONE
      - PATCH
      - STABLE
      - RAPID
      - NODE_IMAGE
    default: CHANNEL_UNSPECIFIED
    description: |-
      Channel options of auto upgrade config.

       - CHANNEL_UNSPECIFIED: Unspecified channel.
       - NONE: Disables auto-upgrades and keeps the cluster at its current version of Kubernetes.
       - PATCH: Automatically upgrades the cluster to the latest supported patch version when it becomes available while keeping the minor version the same.
       - STABLE: Automatically upgrades the cluster to the latest supported patch release on minor version N-1, where N is the latest supported minor version.
       - RAPID: Automatically upgrades the cluster to the latest supported patch release on the latest supported minor version.
       - NODE_IMAGE: Automatically upgrades the node image to the latest version available.
  vmware.tanzu.manage.v1alpha1.akscluster.ClusterConfig:
    type: object
    properties:
      location:
        type: string
        description: The geo-location where the resource lives for the cluster.
      version:
        type: string
        description: Kubernetes version of the cluster.
      nodeResourceGroupName:
        type: string
        description: The name of the resource group containing node pool nodes.
      diskEncryptionSetId:
        type: string
        title: The resource ID of the disk encryption set to use for enabling
      sku:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ClusterSKU'
        description: SKU of the cluster.
      accessConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AccessConfig'
        description: The access config.
      apiServerAccessConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ApiServerAccessConfig
        description: The access config for the cluster API server.
      addonsConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AddonsConfig'
        description: The Addons config.
      linuxConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.LinuxConfig'
        description: The linux VMs config.
      networkConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.NetworkConfig'
        description: Kubernetes network config.
      storageConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.StorageConfig'
        description: The storage config.
      tags:
        type: object
        additionalProperties:
          type: string
        description: >-
          The metadata to apply to the cluster to assist with categorization and
          organization.
      autoUpgradeConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AutoUpgradeConfig
        description: The auto upgrade config.
      proxyName:
        type: string
        description: >-
          The name of the proxy credential to be used for the cluster.

          If specified, the AKS cluster will be created with the proxy
          configurations specified in the proxy credential.
      identityConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.IdentityConfig'
        description: The cluster identity config.
    description: The config of an AKS cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.ClusterSKU:
    type: object
    properties:
      name:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ClusterSKU.Name'
        description: Name of the cluster SKU.
      tier:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Tier'
        description: Tier of the cluster SKU.
    title: The SKU of an AKS cluster
  vmware.tanzu.manage.v1alpha1.akscluster.ClusterSKU.Name:
    type: string
    enum:
      - NAME_UNSPECIFIED
      - BASIC
      - BASE
    default: NAME_UNSPECIFIED
    description: |-
      Name options of cluster SKU.

       - NAME_UNSPECIFIED: Unspecified name.
       - BASIC: Basic option for the AKS control plane. Deprecated in favor of BASE to match Azure API changes.
       - BASE: Base option for the AKS control plane.
  vmware.tanzu.manage.v1alpha1.akscluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      credentialName:
        type: string
        description: Name of the credential.
      subscriptionId:
        type: string
        description: ID of Azure subscription of the cluster.
      resourceGroupName:
        type: string
        description: Name of the resource group.
      name:
        type: string
        description: Name of this cluster.
    description: |-
      Full name of the cluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.akscluster.IdentityConfig:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.IdentityType'
        description: Type of managed identity used by the cluster.
      systemAssigned:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.SystemAssignedIdentity
        description: >-
          Details of the system-assigned managed identity associated with the
          cluster.
      userAssigned:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.UserAssignedIdentity
        description: >-
          Details of the user-assigned managed identity associated with the
          cluster.
    description: The cluster identity config.
  vmware.tanzu.manage.v1alpha1.akscluster.IdentityType:
    type: string
    enum:
      - IDENTITY_TYPE_UNSPECIFIED
      - IDENTITY_TYPE_SYSTEM_ASSIGNED
      - IDENTITY_TYPE_USER_ASSIGNED
    default: IDENTITY_TYPE_UNSPECIFIED
    description: |-
      The type of managed identity associated with the cluster.

       - IDENTITY_TYPE_UNSPECIFIED: Unspecified identity type.
       - IDENTITY_TYPE_SYSTEM_ASSIGNED: Use an implicitly created system assigned managed identity to manage cluster resources.
       - IDENTITY_TYPE_USER_ASSIGNED: Use a user-specified identity to manage cluster resources.
  vmware.tanzu.manage.v1alpha1.akscluster.LinuxConfig:
    type: object
    properties:
      adminUsername:
        type: string
        description: The administrator username to use for Linux VMs.
      sshKeys:
        type: array
        items:
          type: string
        description: >-
          Certificate public key used to authenticate with VMs through SSH. The
          certificate must be in PEM format with or without headers.
    description: The linux VMs config.
  vmware.tanzu.manage.v1alpha1.akscluster.MonitoringAddonConfig:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether the monitoring addon is enabled or not.
      logAnalyticsWorkspaceId:
        type: string
        description: The log analytics workspace id for the monitoring addon.
    description: The monitoring addon config.
  vmware.tanzu.manage.v1alpha1.akscluster.NetworkConfig:
    type: object
    properties:
      loadBalancerSku:
        type: string
        description: >-
          The load balancer SKU for the cluster. The valid value is basic and
          standard.
      networkPlugin:
        type: string
        description: >-
          Network plugin of the cluster. The valid value is azure, kubenet and
          none.
      networkPolicy:
        type: string
        description: Network policy of the cluster. The valid value is azure and calico.
      dnsServiceIp:
        type: string
        description: >-
          An IP address assigned to the Kubernetes DNS service.

          It must be within the Kubernetes service address range specified in
          serviceCidr.
      dockerBridgeCidr:
        type: string
        description: >-
          A CIDR notation IP range assigned to the Docker bridge network.

          It must not overlap with any Subnet IP ranges or the Kubernetes
          service address range.
      podCidrs:
        type: array
        items:
          type: string
        description: The CIDR notation IP ranges from which to assign pod IPs.
      serviceCidrs:
        type: array
        items:
          type: string
        description: The CIDR notation IP ranges from which to assign service cluster IPs.
      dnsPrefix:
        type: string
        description: DNS prefix of the cluster.
      networkPluginMode:
        type: string
        description: >-
          Network plugin mode is used to control the mode the network plugin
          should operate in.

          Valid value is "overlay" when network_plugin is "azure".
    description: The network configuration for the AKS cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - READY
      - DELETING
      - ERROR
      - UPDATING
      - OVER_LIMIT
      - UPGRADING
      - STARTING
      - STOPPING
      - STOPPED
      - PENDING_MANAGE
      - PENDING_UNMANAGE
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the cluster resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Resource is pending processing.
       - CREATING: Resource is being created.
       - READY: Resource is ready state.
       - DELETING: Resource is being deleted.
       - ERROR: Error in processing.
       - UPDATING: This phase is used to reflect the UPDATING state of AKS cluster.
       - OVER_LIMIT: This phase indicates cluster has crossed resource limits set for the organization.
      For such cluster we no longer sync data back to TMC.
       - UPGRADING: This phase indicates kubernetes version is being upgraded for the cluster.
       - STARTING: The AKS cluster is being started.
       - STOPPING: The AKS cluster is being stopped.
       - STOPPED: The AKS cluster is stopped.
       - PENDING_MANAGE: This phase indicates the cluster is in the process of being managed by TMC.
       - PENDING_UNMANAGE: This phase indicates the cluster is in the process of being unmanaged by TMC.
  vmware.tanzu.manage.v1alpha1.akscluster.Spec:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: Name of the cluster group to which this cluster belongs.
      config:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ClusterConfig'
        description: AKS config for the cluster.
      proxyName:
        type: string
        description: >-
          The name of the proxy credential to be used for the TMC agents.

          If specified, the TMC agents will be installed with the proxy
          configurations specified in the proxy credential.
      agentName:
        type: string
        description: Name of the cluster in TMC.
      resourceId:
        type: string
        description: Resource ID of the cluster in Azure.
    description: Spec of the cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Phase'
        description: Phase of the cluster resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the cluster resource.
    description: Status of the AKS cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.StorageConfig:
    type: object
    properties:
      enableDiskCsiDriver:
        type: boolean
        description: Enable the azure disk CSI driver for the storage.
      enableFileCsiDriver:
        type: boolean
        description: Enable the azure file CSI driver for the storage.
      enableSnapshotController:
        type: boolean
        description: Enable the snapshot controller for the storage.
    description: The storage config.
  vmware.tanzu.manage.v1alpha1.akscluster.SystemAssignedIdentity:
    type: object
    properties:
      principalId:
        type: string
        description: >-
          READ-ONLY; The principal id of the system assigned identity associated
          with the cluster.
      tenantId:
        type: string
        description: >-
          READ-ONLY; The tenant id of the system assigned identity associated
          with the cluster.
    description: Details of the system-assigned managed identity for the cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.Tier:
    type: string
    enum:
      - TIER_UNSPECIFIED
      - FREE
      - PAID
      - STANDARD
    default: TIER_UNSPECIFIED
    description: >-
      Tier options of cluster SKU.

       - TIER_UNSPECIFIED: Unspecified tier.
       - FREE: No guaranteed SLA, no additional charges. Free tier clusters have an SLO of 99.5%.
       - PAID: Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use
      Availability Zones and 99.9% of availability for clusters that don't use
      Availability Zones.

      Deprecated in favor of STANDARD to match Azure API changes.
       - STANDARD: Guarantees 99.95% availability of the Kubernetes API server endpoint for clusters that use
      Availability Zones and 99.9% of availability for clusters that don't use
      Availability Zones.
  vmware.tanzu.manage.v1alpha1.akscluster.UserAssignedIdentity:
    type: object
    properties:
      resourceId:
        type: string
        description: >-
          The ARM resource ID of user assigned identity in the form:
          '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
      clientId:
        type: string
        description: READ-ONLY; The client id of user assigned identity.
      principalId:
        type: string
        description: READ-ONLY; The principal id of user assigned identity.
    description: Details of the user-assigned managed identity for the cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.GetAksClusterIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: AksCluster policy.
    description: GetAksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.FullName'
        description: AksCluster full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchAksClusterIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchAksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.akscluster.TestAksClusterIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.FullName'
        description: AksCluster full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestAksClusterIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.akscluster.TestAksClusterIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestAksClusterIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.akscluster.UpdateAksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: AksCluster policy set.
    description: UpdateAksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.akscluster.AccountAccessStatus:
    type: object
    properties:
      state:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AccountAccessStatus.State
        description: The status of our access to target Azure account.
      message:
        type: string
        description: The detailed message explaining the reason for the state.
    description: The status of the access to the target Azure account.
  vmware.tanzu.manage.v1alpha1.akscluster.AccountAccessStatus.State:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - PENDING
      - SUCCEEDED
      - FAILED
      - INVALID
    default: STATE_UNSPECIFIED
    description: |-
      The state of our access to the Azure account.

       - STATE_UNSPECIFIED: Unspecified state.
       - PENDING: Still in the process of accessing the customer's Azure account.
       - SUCCEEDED: Successfully accessed customer's Azure account.
       - FAILED: Failed to access customer's Azure account.
       - INVALID: Invalid access definition for the Azure account.
  vmware.tanzu.manage.v1alpha1.akscluster.DiskEncryptionSetOptions:
    type: object
    properties:
      id:
        type: string
        description: ID of the disk encryption set.
      name:
        type: string
        description: Name of disk encryption set.
    description: Azure specific disk encryption set options.
  vmware.tanzu.manage.v1alpha1.akscluster.ListAksClusterOptionsResponse:
    type: object
    properties:
      options:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Options'
        description: List the options available for cluster/nodepool operations.
    description: Response from listing akscluster options.
  vmware.tanzu.manage.v1alpha1.akscluster.LogWorkspaceOptions:
    type: object
    properties:
      id:
        type: string
        description: ID of the log workspace.
      name:
        type: string
        description: Name of the log workspace.
    description: Azure specific log workspace options.
  vmware.tanzu.manage.v1alpha1.akscluster.Options:
    type: object
    properties:
      resourceGroupOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.ResourceGroupOptions
        description: Resurce groups options.
      regionalOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.RegionalOptions
        description: Regional options.
      logWorkspaceOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.LogWorkspaceOptions
        description: Log workspace options.
      vmSizeOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.VmSizeOptions'
        description: VM sizes options.
      accessStatus:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AccountAccessStatus
        description: The information about of our access to the AKS account.
    description: Options available for cluster/nodepool operations.
  vmware.tanzu.manage.v1alpha1.akscluster.RegionalOptions:
    type: object
    properties:
      regionName:
        type: string
        description: Name of the Azure region.
      regionDisplayName:
        type: string
        description: Display name of the Azure region.
      versionList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.Version'
        description: List of supported Kubernetes versions.
      virtualNetworkOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.VirtualNetworkOptions
        description: Virtual network options.
      vmSizes:
        type: array
        items:
          type: string
        description: List names of supported vm sizes.
      diskEncryptionSetOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.DiskEncryptionSetOptions
        title: Disk encryption set options
      virtualMachineSpecs:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.VirtualMachineSpec
        description: List of supported vm specs.
      availabilityZones:
        type: array
        items:
          type: string
        title: List of availability zones that have vms
    description: Azure AKS specific regional options.
  vmware.tanzu.manage.v1alpha1.akscluster.ResourceGroupOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the resource group.
    description: Azure AKS specific resource group options.
  vmware.tanzu.manage.v1alpha1.akscluster.SubnetOptions:
    type: object
    properties:
      id:
        type: string
        description: ID of the subnet.
      name:
        type: string
        description: Name of the subnet.
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDR of the Azure subnet (ipv4/ipv6 dual stack).
      cidrBlock:
        type: string
        description: CIDR of the Azure subnet (ipv4).
      hasDelegations:
        type: boolean
        title: hasDelegations indicates that the subNet has one or more delegations
      hasIPConfigurations:
        type: boolean
        title: >-
          hasIpConfigurations indicates that the subNet has one or more IP
          Configurations
    description: Azure specific subnet options.
  vmware.tanzu.manage.v1alpha1.akscluster.Version:
    type: object
    properties:
      name:
        type: string
        description: Name of the kubernetes version.
      isDefault:
        type: boolean
        description: Is default version.
    description: The kubernetes version spec.
  vmware.tanzu.manage.v1alpha1.akscluster.VirtualMachineSpec:
    type: object
    properties:
      name:
        type: string
        title: Name of the supported vm size
      availabilityZones:
        type: array
        items:
          type: string
        title: Availability zones vm size supports
    title: The virtual machine spec
  vmware.tanzu.manage.v1alpha1.akscluster.VirtualNetworkOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the virtual network.
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDR blocks of the virtual network.
      subnetOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.SubnetOptions'
        description: Subnet options of the virtual network.
    description: Azure specific virtual network options.
  vmware.tanzu.manage.v1alpha1.akscluster.VmSizeOptions:
    type: object
    properties:
      name:
        type: string
        title: Name of VMSize
      availabilityZones:
        type: array
        items:
          type: string
        title: Availability zones for the VMSize
      numberOfCores:
        type: integer
        format: int32
        description: Number of cores.
      osDiskSizeMb:
        type: integer
        format: int32
        description: OS disk size in MB for the VMSize.
      resourceDiskSizeMb:
        type: integer
        format: int32
        description: Resource disk size in MB for the VMSize.
      memoryMb:
        type: integer
        format: int32
        description: Memory size in MB for the VMSize.
      maxDataDiskCount:
        type: integer
        format: int32
        description: Max data disk count for the VMSize.
      cachedDiskSizeMb:
        type: integer
        format: int32
        title: Cache Disk Size in MB
      ephemeralOsDiskSupported:
        type: boolean
        title: Is Ephemeral OS Disks Supported
    description: Azure specific VM size options.
  vmware.tanzu.manage.v1alpha1.akscluster.CreateAksClusterRequest:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster to create.
    description: Request to create an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.CreateAksClusterResponse:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster created.
    description: Response from creating an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.DeleteAksClusterResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.GetAksClusterResponse:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster returned.
    description: Response from getting an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.ListAksClustersResponse:
    type: object
    properties:
      aksClusters:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: List of aksclusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing AksClusters.
  vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.FullName'
        description: AksCluster to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.PatchAksClusterResponse:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster patched.
    description: Response from patching an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.SearchScope:
    type: object
    properties:
      credentialName:
        type: string
        description: >-
          Scope search to the specified credential_name; supports globbing;
          default (*).
      subscriptionId:
        type: string
        description: >-
          Scope search to the specified subscription_id; supports globbing;
          default (*).
      resourceGroupName:
        type: string
        description: >-
          Scope search to the specified resource_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.akscluster.UpdateAksClusterRequest:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: Update AksCluster.
    description: Request to update (overwrite) an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.UpdateAksClusterResponse:
    type: object
    properties:
      aksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.AksCluster'
        description: AksCluster updated.
    description: Response from updating an AksCluster.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ApplyNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool to apply.
    description: Request to apply a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ApplyNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool applied.
    description: Response from applying a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.AutoScalingConfig:
    type: object
    properties:
      enabled:
        type: boolean
        description: Whether to enable auto-scaler.
      minCount:
        type: integer
        format: int32
        description: The minimum number of nodes for auto-scaling.
      maxCount:
        type: integer
        format: int32
        description: The maximum number of nodes for auto-scaling.
    description: Auto scaling config for the nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      credentialName:
        type: string
        description: Name of the credential.
      subscriptionId:
        type: string
        description: ID of Azure subscription of the cluster.
      resourceGroupName:
        type: string
        description: Resource group name of the cluster.
      aksClusterName:
        type: string
        description: Name of the AKS cluster.
      name:
        type: string
        description: Name of the nodepool.
    description: |-
      Full name of the nodepool. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Mode:
    type: string
    enum:
      - MODE_UNSPECIFIED
      - USER
      - SYSTEM
    default: MODE_UNSPECIFIED
    description: |-
      - MODE_UNSPECIFIED: Unspecified mode.
       - USER: User nodepools are primarily for hosting your application pods.
       - SYSTEM: System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server.
    title: The mode type options of the cluster nodepool
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.FullName
        description: Full name for the Nodepool.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Nodepool object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Spec'
        description: Spec for the Nodepool.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Status'
        description: Status of the Nodepool.
    description: Nodepool associated with a AKS cluster.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.OsDiskType:
    type: string
    enum:
      - OS_DISK_TYPE_UNSPECIFIED
      - EPHEMERAL
      - MANAGED
    default: OS_DISK_TYPE_UNSPECIFIED
    description: |-
      The OS disk type of the nodepool.

       - OS_DISK_TYPE_UNSPECIFIED: Unspecified OS disk type.
       - EPHEMERAL: Ephemeral OS disks are stored only on the host machine, just like a temporary disk. This provides lower read/write latency, along with faster node scaling and cluster upgrades.
       - MANAGED: Azure replicates the operating system disk for a virtual machine to Azure storage to avoid data loss should the VM need to be relocated to another host
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.OsType:
    type: string
    enum:
      - OS_TYPE_UNSPECIFIED
      - LINUX
    default: OS_TYPE_UNSPECIFIED
    description: |-
      The operation system type options of the nodepool.

       - OS_TYPE_UNSPECIFIED: Unspecified OS type.
       - LINUX: The linux operation system.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - READY
      - ERROR
      - DELETING
      - RESIZING
      - UPGRADING
      - UPGRADE_FAILED
      - WAITING
      - UPDATING
      - UPGRADING_NODE_IMAGE
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the nodepool resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Resource is pending processing.
       - CREATING: Resource is creating processing.
       - READY: Resource is in ready state.
       - ERROR: Error in processing.
       - DELETING: Resource is being deleted.
       - RESIZING: Resizing state.
       - UPGRADING: An upgrade is in progress.
       - UPGRADE_FAILED: An upgrade has failed.
       - WAITING: Resource is not created yet. so wait till then.
       - UPDATING: A generic phase for nodepool update.
       - UPGRADING_NODE_IMAGE: An upgrade node image is in progress.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ScaleSetEvictionPolicy:
    type: string
    enum:
      - SCALE_SET_EVICTION_POLICY_UNSPECIFIED
      - DELETE
      - DEALLOCATE
    default: SCALE_SET_EVICTION_POLICY_UNSPECIFIED
    description: |-
      ScaleSetEvictionPolicy of the auto scaling config.

       - SCALE_SET_EVICTION_POLICY_UNSPECIFIED: Unspecified scale set eviction policy.
       - DELETE: Nodes in the underlying Scale Set of the nodepool are deleted when they're evicted.
       - DEALLOCATE: Nodes in the underlying Scale Set of the nodepool are set to the stopped-deallocated state upon eviction.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ScaleSetPriority:
    type: string
    enum:
      - SCALE_SET_PRIORITY_UNSPECIFIED
      - REGULAR
      - SPOT
    default: SCALE_SET_PRIORITY_UNSPECIFIED
    description: |-
      ScaleSetPriority of the auto scaling config.

       - SCALE_SET_PRIORITY_UNSPECIFIED: Unspecified scale set priority.
       - REGULAR: Regular VMs will be used.
       - SPOT: Spot priority VMs will be used. There is no SLA for spot nodes.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Spec:
    type: object
    properties:
      mode:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Mode'
        description: |-
          The mode of the nodepool
          A cluster must have at least one 'System' nodepool at all times.
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Type'
        description: The type of the nodepool.
      availabilityZones:
        type: array
        items:
          type: string
        description: >-
          The list of Availability zones to use for nodepool.

          This can only be specified if the type of the nodepool is
          AvailabilitySet.
      count:
        type: integer
        format: int32
        description: Count is the number of nodes.
      autoScaling:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.AutoScalingConfig
        description: Auto scaling config.
      vmSize:
        type: string
        description: The size of the nodepool VMs.
      osType:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.OsType'
        description: The operation system type of the nodepool.
      osDiskType:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.OsDiskType
        description: The OS disk type of the nodepool.
      osDiskSizeGb:
        type: integer
        format: int32
        description: >-
          OS Disk Size in GB to be used to specify the disk size for every
          machine in the nodepool.

          If you specify 0, it will apply the default osDisk size according to
          the vmSize specified.
      maxPods:
        type: integer
        format: int32
        description: The maximum number of pods that can run on a node.
      enableNodePublicIp:
        type: boolean
        description: Whether each node is allocated its own public IP.
      nodeLabels:
        type: object
        additionalProperties:
          type: string
        description: The node labels to be persisted across all nodes in nodepool.
      nodeTaints:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Taint'
        description: The taints added to new nodes during nodepool create and scale.
      vnetSubnetId:
        type: string
        title: >-
          If this is not specified, a VNET and subnet will be generated and
          used. If no podSubnetID is specified, this applies to

          nodes and pods, otherwise it applies to just nodes. This is of the
          form:
      upgradeConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpgradeConfig
        description: The upgrade config.
      tags:
        type: object
        additionalProperties:
          type: string
        description: The metadata to apply to the nodepool.
      scaleSetPriority:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ScaleSetPriority
        description: The Virtual Machine Scale Set priority.
      scaleSetEvictionPolicy:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ScaleSetEvictionPolicy
        description: |-
          The Virtual Machine Scale Set eviction policy to use.
          This cannot be specified unless the scaleSetPriority is 'Spot'.
      spotMaxPrice:
        type: number
        format: float
        description: >-
          The max price (in US Dollars) you are willing to pay for spot
          instances.

          Possible values are any decimal value greater than zero or -1 which
          indicates default price to be up-to on-demand.
      nodeImageVersion:
        type: string
        description: The node image version of the nodepool.
      podSubnetId:
        type: string
        description: >-
          Pod subnet id specifies the subnet Azure supposed to use to run the
          pods.

          If omitted, pod IPs are statically assigned on the node subnet (see
          vnetSubnetId for more details).
    description: Spec for the cluster nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Phase'
        description: Phase of the nodepool resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions for the nodepool resource.
    description: Status of nodepool resource.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Taint:
    type: object
    properties:
      effect:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Taint.Effect
        description: Current effect state of the nodepool.
      key:
        type: string
        description: The taint key to be applied to a node.
      value:
        type: string
        description: The taint value corresponding to the taint key.
    description: |-
      The node this Taint is attached to has the "effect" on
      any pod that does not tolerate the Taint.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Taint.Effect:
    type: string
    enum:
      - EFFECT_UNSPECIFIED
      - NO_SCHEDULE
      - NO_EXECUTE
      - PREFER_NO_SCHEDULE
    default: EFFECT_UNSPECIFIED
    description: >-
      The effect of the taint on pods

      that do not tolerate the taint.

      Valid effects are NoSchedule, NoExecute, PreferNoSchedule and
      EffectUnspecified.

       - EFFECT_UNSPECIFIED: Unspecified effect.
       - NO_SCHEDULE: Pods that do not tolerate this taint are not scheduled on the node.
       - NO_EXECUTE: Pods are evicted from the node if are already running on the node.
       - PREFER_NO_SCHEDULE: Avoids scheduling Pods that do not tolerate this taint onto the node.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - VIRTUAL_MACHINE_SCALE_SETS
      - AVAILABILITY_SET
    default: TYPE_UNSPECIFIED
    description: |-
      The type options of nodepool.

       - TYPE_UNSPECIFIED: Unspecified type.
       - VIRTUAL_MACHINE_SCALE_SETS: Create a nodepool backed by a Virtual Machine Scale Set.
       - AVAILABILITY_SET: Use of this is strongly discouraged.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpgradeConfig:
    type: object
    properties:
      maxSurge:
        type: string
        description: >-
          The maximum number or percentage of nodes that are surged during
          upgrade.

          This can either be set to an integer (e.g. '5') or a percentage (e.g.
          '50%').
    description: Upgrade config for the nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.GetNodepoolIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Nodepool policy.
    description: GetNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.FullName
        description: Nodepool full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchNodepoolIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.TestNodepoolIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.FullName
        description: Nodepool full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestNodepoolIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.TestNodepoolIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestNodepoolIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpdateNodepoolIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Nodepool policy set.
    description: UpdateNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.CreateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool to create.
    description: Request to create a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.CreateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool created.
    description: Response from creating a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.DeleteNodepoolResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.GetNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool returned.
    description: Response from getting a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.ListNodepoolsResponse:
    type: object
    properties:
      nodepools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: List of nodepools.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Nodepools.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.FullName
        description: Nodepool to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.PatchNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool patched.
    description: Response from patching a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.SearchScope:
    type: object
    properties:
      credentialName:
        type: string
        description: Name of the credential.
      subscriptionId:
        type: string
        description: ID of Azure subscription of the cluster.
      resourceGroupName:
        type: string
        description: Resource group name of the cluster.
      aksClusterName:
        type: string
        description: Name of the AKS cluster.
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    title: Custom SearchScope that only supports nodepool list within a cluster
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpdateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Update Nodepool.
    description: Request to update (overwrite) a Nodepool.
  vmware.tanzu.manage.v1alpha1.akscluster.nodepool.UpdateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.akscluster.nodepool.Nodepool
        description: Nodepool updated.
    description: Response from updating a Nodepool.
  vmware.tanzu.manage.v1alpha1.audit.Audit:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.FullName'
        description: Full name for the audit.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the audit .
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Spec'
        description: Spec for the audit.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Status'
        description: Status of the audit.
    description: An audit resource maps to an audit report for the specified date range.
  vmware.tanzu.manage.v1alpha1.audit.AuditReport:
    type: object
    properties:
      reportId:
        type: string
        description: Internal ID of the audit run.
      runDatetime:
        type: string
        format: date-time
        description: Date and time of the audit run.
      downloadUrl:
        type: string
        description: Download URL for the final file with complete audit logs.
      expiryDatetime:
        type: string
        format: date-time
        description: Date and time when audit file expires.
    description: Encapsulates the data for a audit run.
  vmware.tanzu.manage.v1alpha1.audit.CreateAuditRequest:
    type: object
    properties:
      audit:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Audit'
        description: Audit to create.
    description: Request to create an Audit.
  vmware.tanzu.manage.v1alpha1.audit.CreateAuditResponse:
    type: object
    properties:
      audit:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Audit'
        description: Audit created.
    description: Response from creating an Audit.
  vmware.tanzu.manage.v1alpha1.audit.DeleteAuditResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an Audit.
  vmware.tanzu.manage.v1alpha1.audit.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of the organization.
      name:
        type: string
        description: Name of the audit run (id).
    description: |-
      Full name for the audit. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.audit.GetAuditResponse:
    type: object
    properties:
      audit:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Audit'
        description: Audit returned.
    description: Response from getting an Audit.
  vmware.tanzu.manage.v1alpha1.audit.ListAuditsResponse:
    type: object
    properties:
      audits:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Audit'
        description: List of audits.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Audits.
  vmware.tanzu.manage.v1alpha1.audit.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.audit.Spec:
    type: object
    properties:
      startDatetime:
        type: string
        format: date-time
        description: >-
          The start timestamp of the audit period for which to collect audit
          logs.

          Defaults to 60 days before today.
      endDatetime:
        type: string
        format: date-time
        description: |-
          The end timestamp of the audit period for which to collect audit logs.
          Defaults to today.
    description: The audit spec.
  vmware.tanzu.manage.v1alpha1.audit.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.Status.Phase'
        description: Phase of the audit report based on conditions.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The Conditions attached to this audit resource.

          We support 2 conditions for audit: Ready and Scheduled

          Condition 'Scheduled' with Status 'Unknown' indicates that the audit
          is pending

          Condition 'Scheduled' with 'True' and Condition 'Ready' with 'Unknown'
          indicates that the audit is running

          Condition 'Ready' with 'True' and no severity indicates that the audit
          is complete successfully

          Condition 'Ready' with 'True' and severity 'WARNING' indicates that
          the audit is partially successfully

          Condition 'Ready' with 'False' indicates that the audit could not be
          processed and is in error state.
      report:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.audit.AuditReport'
        description: Report details.
    description: Status of the Audit.
  vmware.tanzu.manage.v1alpha1.audit.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - RUNNING
      - UPLOADING
      - COMPLETE
      - PARTIALLY_COMPLETE
      - ERROR
      - CANCEL
    default: PHASE_UNSPECIFIED
    description: >-
      Phase describes the current state of the audit report generation.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Pending - to indicate that the audit is waiting to be started.
       - RUNNING: Running - to indicate the audit is currently running
      i.e., the system is collecting the logs and generating the report.
       - UPLOADING: Uploading - to indicate that the audit results are being uploaded to S3.
       - COMPLETE: Complete - to indicate that the audit has completed and uploaded results to S3 successfully.
       - PARTIALLY_COMPLETE: Partially_Complete - to indicate that the audit has completed with partial success.
      Only a subset of the requested date range is uploaded because of file size
      limits.
       - ERROR: Error - to indicate that an error had occurred during the report generation.
       - CANCEL: CANCEL - to indicate that the report generation is canceled.
  vmware.tanzu.manage.v1alpha1.cluster.EncryptionKey:
    type: object
    properties:
      PublicKeyPem:
        type: string
        description: The RSA public key encoded in PEM format.
      timestamp:
        type: string
        format: date-time
        description: The timestamp as when the keys were generated.
    description: The encryption key used to encrypt the payload on fight.
  vmware.tanzu.manage.v1alpha1.cluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster.
      name:
        type: string
        description: Name of this cluster.
    description: |-
      Full name of the cluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.adminkubeconfig.GetAdminKubeconfigResponse:
    type: object
    properties:
      kubeconfig:
        type: string
        description: Cluster Admin Kubeconfig.
    description: Response with cluster admin kubeconfig.
  vmware.tanzu.manage.v1alpha1.cluster.auth.token.GetResponse:
    type: object
    properties:
      clusterUid:
        type: string
        description: ClusterUID is the UID for the cluster.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster full_name.
      token:
        type: string
        description: Opaque bearer token.
      expiration:
        type: string
        format: date-time
        description: The expiration timestamp for the token.
    description: Response containing an opaque bearer token for in-cluster access.
  vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewRequest.Body:
    type: object
    properties:
      apiVersion:
        type: string
        description: APIVersion should always be "authentication.k8s.io/v1beta1".
      kind:
        type: string
        description: Kind should always be "TokenReview".
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewRequest.Body.Spec
        description: Spec is the TokenReviewSpec object for this review.
    description: Body corresponds to the k8s TokenReview object.
  vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewRequest.Body.Spec:
    type: object
    properties:
      token:
        type: string
        description: Token is the bearer token under review.
      audiences:
        type: array
        items:
          type: string
        description: >-
          Audiences is a list of audiences to be validated (we must augment this
          with the cluster ID).
    description: Spec mirrors the Kubernetes TokenReviewSpec type.
  vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewResponse:
    type: object
    properties:
      apiVersion:
        type: string
        description: APIVersion should always be "authentication.k8s.io/v1beta1".
      kind:
        type: string
        description: Kind should always be "TokenReview".
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewResponse.Status
        description: Status is the TokenReviewStatus object for this review.
    description: Response containing the identity from the token.
  vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewResponse.Status:
    type: object
    properties:
      authenticated:
        type: boolean
        description: Authenticated is true if the token was valid.
      error:
        type: string
        description: Error is an optional error string if the token was not valid.
      audiences:
        type: array
        items:
          type: string
        description: Audiences is a list of valid audiences for this token.
      user:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewResponse.Status.UserInfo
        description: User is the UserInfo object for this review.
    description: Status mirrors the Kubernetes TokenReviewStatus type.
  vmware.tanzu.manage.v1alpha1.cluster.auth.token.ReviewResponse.Status.UserInfo:
    type: object
    properties:
      username:
        type: string
        description: Username is the name of the user which was validated for this token.
      uid:
        type: string
        description: UID is the unique user ID which was validated for this token.
      groups:
        type: array
        items:
          type: string
        description: >-
          Groups is a list of groups for the user which was validated in this
          token.
      extra:
        type: object
        additionalProperties:
          type: array
          items:
            type: object
        description: >-
          Extra is an optional list of extra information which may be used
          during authZ.
    description: UserInfo corresponds to the upstream UserInfo type.
  vmware.tanzu.manage.v1alpha1.cluster.ApplyClusterRequest:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster to apply.
    description: Request to apply a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.ApplyClusterResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster applied.
    description: Response from applying a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.Cluster:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Full name for the cluster.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Spec'
        description: Spec for the cluster.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Status'
        description: Status for the cluster.
    description: A Kubernetes Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - PROCESSING
      - CREATING
      - READY
      - DELETING
      - ERROR
      - DETACHING
      - UPGRADING
      - UPGRADE_FAILED
      - UPDATING
      - OVER_LIMIT
      - READY_TO_ATTACH
      - ATTACH_COMPLETE
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the cluster resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Resource is pending processing.
       - PROCESSING: Processing the resource.
       - CREATING: Resource is being created.
       - READY: Resource is ready state.
       - DELETING: Resource is being deleted.
       - ERROR: Error in processing.
       - DETACHING: Resource is being detached.
       - UPGRADING: An upgrade is in progress.
       - UPGRADE_FAILED: An upgrade has failed.
       - UPDATING: This phase is used to reflect the UPDATING state of TanzuKubernetescluster in TKG Service.
       - OVER_LIMIT: This phase indicates cluster has crossed resource limits set for the organization.
      For such cluster we no longer sync data back to TMC.
       - READY_TO_ATTACH: Resource is ready to be attached.
       - ATTACH_COMPLETE: Attach resource has been applied on the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.Spec:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: Name of the cluster group to which this cluster belongs.
      tkgVsphere:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Spec
        description: TKG vSphere cluster spec.
      tkgServiceVsphere:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Spec
        description: TKG Service vSphere cluster spec.
      tkgAws:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Spec
        description: TKG AWS cluster spec.
      tkgAzure:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Spec
        description: TKG Azure cluster spec.
      topology:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.Topology
        description: Tanzu Kubernetes cluster topology.
      proxyName:
        type: string
        description: |-
          Optional proxy name is the name of the Proxy Config
          to be used for the cluster.
      imageRegistry:
        type: string
        description: |-
          Optional image registry is the name of the Image Registry Config
          to be used for the cluster.
    description: Spec of the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Phase'
        description: Phase of the cluster resource.
      health:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Health'
        description: Health of a resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the cluster resource.
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Type'
        description: Type of the cluster.
      installerLink:
        type: string
        description: |-
          Installer link for TMC related K8s resource manifest.
          Note: Applicable only for attached clusters.
          If the cluster is attached with proxy, Get on this
          URL would need user token with sufficient permission to read the
          proxy set during the attach. In all other cases, this
          URL can be fetched without user token.
      infrastructureProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.InfrastructureProvider
        description: Cluster infrastructure provider.
      kubeServerVersion:
        type: string
        description: Kubernetes Server Git Version.
      infrastructureProviderRegion:
        type: string
        description: Cluster infrastructure provider region.
      allocatedMemory:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ResourceAllocation
        description: Memory allocation of a cluster.
      allocatedCpu:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ResourceAllocation
        description: CPU allocation of a cluster.
      nodeCount:
        type: string
        format: int64
        description: Total number of nodes.
      healthDetails:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.HealthInfo'
        description: Health details of the cluster.
      kubernetesProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.KubernetesProvider
        description: Kubernetes Provider of the cluster.
    description: Status of the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - ATTACHED
      - PROVISIONED
      - TANZU_KUBERNETES_GRID_SERVICE
      - TANZU_KUBERNETES_GRID
      - ADOPTED
    default: TYPE_UNSPECIFIED
    description: |-
      Type describe type of cluster.

       - TYPE_UNSPECIFIED: TYPE_UNSPECIFIED cluster type.
       - ATTACHED: ATTACHED cluster type.
       - PROVISIONED: PROVISIONED cluster type.
       - TANZU_KUBERNETES_GRID_SERVICE: Tanzu Kubernetes Grid Service cluster type.
       - TANZU_KUBERNETES_GRID: Tanzu Kubernetes Grid cluster type.
       - ADOPTED: ADOPTED cluster type.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.ClusterNetwork:
    type: object
    properties:
      pods:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.NetworkRange
        description: Pod CIDR for Kubernetes pods. Defaults to 192.168.0.0/16.
      services:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.NetworkRange
        description: Service CIDR for Kubernetes services. Defaults to 10.96.0.0/12.
      apiServerPort:
        type: integer
        format: int32
        description: |-
          APIServerPort specifies the port address for the cluster (optional).
          The port value defaults to 6443.
    description: Network information for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.ControlPlane:
    type: object
    properties:
      instanceType:
        type: string
        description: Control plane instance type.
      availabilityZones:
        type: array
        items:
          type: string
        description: List of availability zones for the control plane nodes.
      highAvailability:
        type: boolean
        description: >-
          Flag which controls if the cluster needs to be highly available. A
          highly available cluster has three

          controlplane machines, and a non highly available cluster has one.
    description: Control plane configuration for the AWS cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Distribution:
    type: object
    properties:
      version:
        type: string
        description: Version of the cluster.
      region:
        type: string
        description: Region of the cluster.
      provisionerCredentialName:
        type: string
        description: >-
          Name of the account (provisioner credential) in which to create the
          cluster.
      osName:
        type: string
        description: Name of the OS used for the cluster.
      osVersion:
        type: string
        description: Version of the OS used for the cluster.
      osArch:
        type: string
        description: Arch of the OS used for the cluster.
    description: Distribution of the AWS cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.NetworkRange:
    type: object
    properties:
      cidrBlocks:
        type: string
        description: CIDRBlocks specifies one or more of IP address ranges.
    description: Network range for the workload cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.NetworkSettings:
    type: object
    properties:
      cluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.ClusterNetwork
        description: Kubernetes network information for the cluster.
      provider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.ProviderNetwork
        description: Provider specific network information for the cluster.
    description: Network and provider information for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.ProviderNetwork:
    type: object
    properties:
      vpc:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.VPC
        description: AWS VPC configuration for the cluster.
      subnets:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Subnet
        description: Optional list of subnets used to place the nodes in the cluster.
    description: Provider related network settings for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.SecuritySettings:
    type: object
    properties:
      sshKey:
        type: string
        description: SSH key for the cluster VMs.
    description: Security settings for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Settings:
    type: object
    properties:
      network:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.NetworkSettings
        description: NetworkSettings specifies network-related settings for the cluster.
      security:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.SecuritySettings
        description: SecuritySettings specifies security-related settings for the cluster.
    description: Network and security settings for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Spec:
    type: object
    properties:
      settings:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Settings
        description: Cluster settings for the AWS cluster.
      distribution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Distribution
        description: Kubernetes version distribution for the cluster.
      topology:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Topology
        description: Topology configuration of the cluster.
      advancedConfigs:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfig
        description: Advanced configurations for AWS cluster.
    description: TKG AWS cluster spec.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Subnet:
    type: object
    properties:
      id:
        type: string
        description: >-
          AWS subnet ID. The rest of the fields are ignored if this field is
          specified.
      cidrBlock:
        type: string
        description: |-
          CIDR for AWS subnet.
          This CIDR block must be in the range of AWS VPC CIDR block.
      availabilityZone:
        type: string
        title: AWS availability zone e.g. us-west-2a
      isPublic:
        type: boolean
        description: Public subnet or private subnet.
    description: Subnet configuration for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Topology:
    type: object
    properties:
      controlPlane:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.ControlPlane
        description: Control plane specific configuration.
      nodePools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Definition
        description: Nodepool specific configuration.
    description: Topology is the topology definition for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.VPC:
    type: object
    properties:
      id:
        type: string
        description: >-
          AWS VPC ID. The rest of the fields are ignored if this field is
          specified..
      cidrBlock:
        type: string
        description: |-
          CIDR for AWS VPC.
          A valid example is 10.0.0.0/16.
          For the allowed ranges, please refer to AWS documentation..
    description: VPC configuration for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.ClusterNetwork:
    type: object
    properties:
      pods:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.NetworkRanges
        description: Pod CIDR for Kubernetes pods. Defaults to 100.96.0.0/11.
      services:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.NetworkRanges
        description: Service CIDR for Kubernetes services. Defaults to 100.64.0.0/13.
      apiServerPort:
        type: integer
        format: int32
        description: |-
          APIServerPort specifies the port address for the cluster (optional).
          The port value defaults to 6443.
    description: Network information for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.ControlPlane:
    type: object
    properties:
      vmSize:
        type: string
        description: Control plane vm size.
      availabilityZones:
        type: array
        items:
          type: string
        description: List of Availability Zone for control plane nodes.
      highAvailability:
        type: boolean
        description: >-
          Flag which controls if the cluster needs to be highly available. A
          highly available cluster has three

          controlplane machines, and a non highly available cluster has one.
    description: Control plane configuration for the Azure cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Distribution:
    type: object
    properties:
      version:
        type: string
        description: Version of the cluster.
      region:
        type: string
        description: Region of the cluster.
      resourceGroup:
        type: string
        description: >-
          Resource group to use in Azure. If unspecified, uses cluster name as
          resource group name.
      osName:
        type: string
        description: Name of the OS used for the cluster.
      osVersion:
        type: string
        description: Version of the OS used for the cluster.
      osArch:
        type: string
        description: Arch of the OS used for the cluster.
    description: Distribution of the Azure cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.NetworkRanges:
    type: object
    properties:
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDRBlocks specifies one or more of IP address ranges.
    description: Network range for the workload cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.NetworkSettings:
    type: object
    properties:
      cluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.ClusterNetwork
        description: Kubernetes network information for the cluster.
      provider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.ProviderNetwork
        description: Provider specific network information for the cluster.
      privateCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.PrivateCluster
        description: >-
          PrivateCluster specifies Private cluster configuration. If empty, TMC
          creates a public cluster.
    description: Cluster network and provider network information for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.PrivateCluster:
    type: object
    properties:
      ip:
        type: string
        description: >-
          IP specifies the ip address of Azure Internal Load Balancer for a
          private cluster. The value must

          be within control plane subnet CIDR range.
    description: PrivateCluster defines private cluster configuration.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.ProviderNetwork:
    type: object
    properties:
      vnet:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.VNET
        description: Azure VNET configuration for the cluster.
      controlPlaneSubnet:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Subnet
        description: Subnet details of the control plane.
      workerNodeSubnet:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Subnet
        description: Subnet details of the worker nodes.
    description: >-
      Azure related network settings for the cluster. Ensure all values are
      specified for this section.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.SecuritySettings:
    type: object
    properties:
      sshKeyValue:
        type: string
        description: SSH key for the cluster VMs.
      subscriptionId:
        type: string
        description: Subscription ID of the azure account.
    description: Security settings for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Settings:
    type: object
    properties:
      network:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.NetworkSettings
        description: NetworkSettings specifies network-related settings for the cluster.
      security:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.SecuritySettings
        description: SecuritySettings specifies security-related settings for the cluster.
    description: Network and security settings for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Spec:
    type: object
    properties:
      settings:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Settings
        description: Cluster settings for the Azure cluster.
      distribution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Distribution
        description: Kubernetes version distribution for the cluster.
      topology:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Topology
        description: Topology configuration of the cluster.
      advancedConfigs:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfig
        description: Advanced configurations for Azure cluster.
    description: TKG Azure cluster spec.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Subnet:
    type: object
    properties:
      name:
        type: string
        description: Azure subnet name.
      cidrBlock:
        type: string
        description: |-
          CIDR for Azure subnet.
          This CIDR block must be within the range of Azure VNET CIDR block.
    description: Subnet configuration for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Topology:
    type: object
    properties:
      controlPlane:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.ControlPlane
        description: Control plane specific configuration.
      nodePools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Definition
        description: Nodepool specific configuration.
    description: Topology is the topology definition for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.VNET:
    type: object
    properties:
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.VNETSpec
        description: VNET configuration of a cluster.
      cidrBlock:
        type: string
        description: CIDR for new Azure VNET.
    description: VNET configuration for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.VNETSpec:
    type: object
    properties:
      resourceGroup:
        type: string
        description: >-
          Resource group of the VNET. Use resource group specified in the
          Distribution section if creating a new VNET.
      name:
        type: string
        description: Name of the VNET.
    description: VNETSpec has the name and resource of a pre existing VNET.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.ControlPlane:
    type: object
    properties:
      class:
        type: string
        description: Control plane instance type.
      storageClass:
        type: string
        description: >-
          Storage Class to be used for storage of the disks which store the root
          filesystems of the nodes.
      highAvailability:
        type: boolean
        description: |-
          High Availability or Non High Availability Cluster. HA cluster
          creates three controlplane machines, and non HA creates just one.
      volumes:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGServiceVsphereVolume
        description: Configure volumes for control plane nodes.
    description: VSphere specific control plane configuration for workload cluster object.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Distribution:
    type: object
    properties:
      version:
        type: string
        description: Version of the cluster.
      osName:
        type: string
        description: Name of the OS used for the cluster.
      osVersion:
        type: string
        description: Version of the OS used for the cluster.
      osArch:
        type: string
        description: Arch of the OS used for the cluster.
    description: Distribution of the tkg service vsphere cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.NetworkRanges:
    type: object
    properties:
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDRBlocks specifies one or more ranges of IP addresses.
    description: Network ranges for the workload cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.NetworkSettings:
    type: object
    properties:
      pods:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.NetworkRanges
        description: Pod CIDR for Kubernetes pods defaults to 192.168.0.0/16.
      services:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.NetworkRanges
        description: Service CIDR for kubernetes services defaults to 10.96.0.0/12.
    description: Kubernetes specific network information for workload cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Settings:
    type: object
    properties:
      network:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.NetworkSettings
        description: NetworkSettings specifies network-related settings for the cluster.
      storage:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.StorageSettings
        description: StorageSettings specifies storage-related settings for the cluster.
    description: Settings is the tkg service specific cluster setting.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Spec:
    type: object
    properties:
      settings:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Settings
        description: VSphere related settings for workload cluster.
      distribution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Distribution
        description: VSphere specific distribution.
      topology:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Topology
        description: Topology specific configuration.
    description: The tkg service vsphere cluster spec.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.StorageSettings:
    type: object
    properties:
      classes:
        type: array
        items:
          type: string
        description: >-
          Classes is a list of storage classes from the supervisor namespace to
          expose within a cluster.

          If omitted, all storage classes from the supervisor namespace will be
          exposed within the cluster.
      defaultClass:
        type: string
        description: >-
          DefaultClass is the valid storage class name which is treated as the
          default storage class within a cluster.

          If omitted, no default storage class is set.
    description: Storage related settings for workload cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Topology:
    type: object
    properties:
      controlPlane:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.ControlPlane
        description: Control plane specific configuration.
      nodePools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Definition
        description: Nodepool specific configuration.
    description: Topology is the topology for tkg service vsphere cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.ControlPlane:
    type: object
    properties:
      vmConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereVMConfig
        description: VM specific configuration.
      highAvailability:
        type: boolean
        description: |-
          High Availability or Non High Availability Cluster. HA cluster
          creates three controlplane machines, and non HA creates just one.
    description: VSphere specific control plane configuration for workload cluster object.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Distribution:
    type: object
    properties:
      version:
        type: string
        description: Version specifies the version of the Kubernetes cluster.
      workspace:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereWorkspace
        description: >-
          Workspace defines a workspace configuration for the vSphere cloud
          provider.
      osName:
        type: string
        description: Name of the OS used for the cluster.
      osVersion:
        type: string
        description: Version of the OS used for the cluster.
      osArch:
        type: string
        description: Arch of the OS used for the cluster.
    description: VSphere specific distribution.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.NetworkRanges:
    type: object
    properties:
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDRBlocks specifies one or more ranges of IP addresses.
    description: NetworkRanges describes a collection of IP addresses as a list of ranges.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.NetworkSettings:
    type: object
    properties:
      pods:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.NetworkRanges
        description: Pod CIDR for Kubernetes pods defaults to 192.168.0.0/16.
      services:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.NetworkRanges
        description: Service CIDR for kubernetes services defaults to 10.96.0.0/12.
      controlPlaneEndpoint:
        type: string
        description: ControlPlaneEndpoint specifies the control plane virtual IP address.
      apiServerPort:
        type: integer
        format: int32
        description: |-
          APIServerPort specifies the port address for the cluster (optional).
          The port value defaults to 6443.
    description: Network related settings for VSphere cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.SecuritySettings:
    type: object
    properties:
      sshKey:
        type: string
        description: SSH key for provisioning and accessing the cluster VMs.
    description: Security related settings for the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Settings:
    type: object
    properties:
      network:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.NetworkSettings
        description: NetworkSettings specifies network-related settings for the cluster.
      security:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.SecuritySettings
        description: SecuritySettings specifies security-related settings for the cluster.
    description: VSphere related settings for workload cluster.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Spec:
    type: object
    properties:
      settings:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Settings
        description: VSphere related settings for workload cluster.
      distribution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Distribution
        description: VSphere specific distribution.
      topology:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Topology
        description: Topology specific configuration.
      advancedConfigs:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfig
        description: Advanced configurations for vSphere cluster.
    description: The tkg vsphere cluster spec.
  vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Topology:
    type: object
    properties:
      controlPlane:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.ControlPlane
        description: Control plane specific configuration.
      nodePools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Definition
        description: Nodepool specific configuration.
    description: Topology specific configuration.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Definition:
    type: object
    properties:
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Spec'
        description: Spec for the nodepool.
      info:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Info'
        description: Info for the nodepool.
    description: Definition is the definition of nodepool for cluster.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Info:
    type: object
    properties:
      name:
        type: string
        description: Name of the nodepool.
      description:
        type: string
        description: Description for the nodepool.
    description: Info is the meta information of nodepool for cluster.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Spec:
    type: object
    properties:
      workerNodeCount:
        type: string
        format: int64
        description: Count is the number of nodes.
      taints:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Taint'
        description: If specified, the node's taints.
      nodeLabels:
        type: object
        additionalProperties:
          type: string
        description: Node labels.
      cloudLabels:
        type: object
        additionalProperties:
          type: string
        description: Cloud labels.
      tkgVsphere:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGVsphereNodepool
        description: Nodepool config for tkg vsphere.
      tkgServiceVsphere:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGServiceVsphereNodepool
        description: Nodepool config for tkg service vsphere.
      tkgAws:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGAWSNodepool
        description: Nodepool config for tkg aws.
      tkgAzure:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGAzureNodepool
        description: Nodepool config for tkg azure.
    description: Spec for the cluster nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGAWSNodePlacement:
    type: object
    properties:
      availabilityZone:
        type: string
        description: The AZ where the AWS nodes are placed.
    description: >-
      TKGAWSNodePlacement is the structure to indicate the AZ to place the nodes
      on.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGAWSNodepool:
    type: object
    properties:
      instanceType:
        type: string
        description: |-
          Nodepool instance type.
          The potential values could be found using cluster:options api.
      availabilityZone:
        type: string
        title: >-
          Availability zone for the nodepool. Should be one of the availability
          zones chosen for the cluster.

          Use this field only if you are creating a nodepool for cluster in TMC
          hosted AWS solution. To create a nodepool for TKG

          workload cluster please use TKGAWSNodePlacement
      subnetId:
        type: string
        description: >-
          Subnet ID of the private subnet in which you want the nodes to be
          created in. If specified, availability zone is

          ignored.
      version:
        type: string
        description: Kubernetes version of the node pool.
      publicCidr:
        type: string
        description: |-
          The nodes public CIDR block if we are creating a new VPC.
          This is no longer used - Please dont use this deprecated field.
      privateCidr:
        type: string
        description: |-
          The nodes private CIDR block if we are creating a new VPC.
          This is no longer used - Please dont use this deprecated field.
      nodePlacement:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGAWSNodePlacement
        description: >-
          List of AZs to place the AWS nodes on. Please use this field to
          provision a nodepool for workload cluster on an attached TKG AWS
          management cluster.

          Please specify 1 AZ for a dev cluster and up to 3 AZs for production
          cluster.
    description: TKGAWSNodepool is the nodepool spec for TKG aws cluster.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGAzureNodepool:
    type: object
    properties:
      vmSize:
        type: string
        description: |-
          Nodepool instance type.
          The potential values could be found using cluster:options api.
      availabilityZones:
        type: array
        items:
          type: string
        description: Availability zones where the nodes in a nodepool have been created.
    description: TKGAzureNodepool is the nodepool spec for TKG Azure cluster.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGServiceVsphereNodepool:
    type: object
    properties:
      class:
        type: string
        description: |-
          Nodepool instance type.
          The potential values could be found using cluster:options api.
      storageClass:
        type: string
        description: >-
          Storage Class to be used for storage of the disks which store the root
          filesystem of the nodes.

          The potential values could be found using cluster:options api.
      volumes:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGServiceVsphereVolume
        description: Configure volumes for node pool nodes.
      failureDomain:
        type: string
        description: >-
          Configure the failure domain of nodepool.

          The potenial values could be found using cluster:options api.

          This parameter will be ignored by the backend if the TKG service
          vsphere cluster doesn't support.
    description: >-
      TKGServiceVsphereNodepool is the nodepool spec for TKG service vsphere
      cluster.

      The values will flow via cluster:options api.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TKGVsphereNodepool:
    type: object
    properties:
      vmConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereVMConfig
        description: VM specific configuration.
    description: |-
      TKGVsphereNodepool is the nodepool spec for TKG vsphere cluster.
      The values will flow via cluster:options api.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Taint:
    type: object
    properties:
      effect:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Taint.Effect
        description: Current effect state of the node pool.
      key:
        type: string
        description: The taint key to be applied to a node.
      value:
        type: string
        description: The taint value corresponding to the taint key.
    description: |-
      The node this Taint is attached to has the "effect" on
      any pod that does not tolerate the Taint.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Taint.Effect:
    type: string
    enum:
      - EFFECT_UNSPECIFIED
      - NO_SCHEDULE
      - NO_EXECUTE
      - PREFER_NO_SCHEDULE
    default: EFFECT_UNSPECIFIED
    description: >-
      The effect of the taint on pods

      that do not tolerate the taint.

      Valid effects are NoSchedule, NoExecute, PreferNoSchedule and
      EffectUnspecified.

       - EFFECT_UNSPECIFIED: Unspecified effect.
       - NO_SCHEDULE: Pods that do not tolerate this taint are not scheduled on the node.
       - NO_EXECUTE: Pods are evicted from the node if are already running on the node.
       - PREFER_NO_SCHEDULE: Avoids scheduling Pods that do not tolerate this taint onto the node.
  vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfig:
    type: object
    properties:
      key:
        type: string
        description: The key of the advanced configuration parameters.
      value:
        type: string
        description: The value of the advanced configuration parameters.
    description: The advanced configuration for TKGm cluster.
  vmware.tanzu.manage.v1alpha1.common.cluster.ComponentHealth:
    type: object
    properties:
      name:
        type: string
        description: Name of the component.
      health:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Health'
        description: Health of the component.
      message:
        type: string
        description: Message providing details.
    description: ComponentHealth holds a component health status.
  vmware.tanzu.manage.v1alpha1.common.cluster.Health:
    type: string
    enum:
      - HEALTH_UNSPECIFIED
      - HEALTHY
      - WARNING
      - UNHEALTHY
      - DISCONNECTED
      - OVER_LIMIT
    default: HEALTH_UNSPECIFIED
    description: |-
      Health describes the health of a resource.

       - HEALTH_UNSPECIFIED: Unspecified health.
       - HEALTHY: Resource is healthy.
       - WARNING: Resource is in warning state.
       - UNHEALTHY: Resource is unhealthy.
       - DISCONNECTED: Resource is disconnected.
       - OVER_LIMIT: Resource is over limits.
  vmware.tanzu.manage.v1alpha1.common.cluster.HealthInfo:
    type: object
    properties:
      message:
        type: string
        description: Message providing overall health details.
      etcdHealth:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ComponentHealth
        description: ETCD's health status.
      schedulerHealth:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ComponentHealth
        description: Scheduler's health status.
      controllerManagerHealth:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ComponentHealth
        description: Controller manager's health status.
      timestamp:
        type: string
        format: date-time
        description: Timestamp of the record.
    description: Health information about cluster components healths.
  vmware.tanzu.manage.v1alpha1.common.cluster.InfrastructureProvider:
    type: string
    enum:
      - INFRASTRUCTURE_PROVIDER_UNSPECIFIED
      - INFRASTRUCTURE_PROVIDER_NONE
      - AWS_EC2
      - GCP_GCE
      - AZURE_COMPUTE
      - VMWARE_VSPHERE
      - OPENSHIFT
    default: INFRASTRUCTURE_PROVIDER_UNSPECIFIED
    description: >-
      InfrastructureProvider definition - indicates the cluster infrastructure
      provider.

       - INFRASTRUCTURE_PROVIDER_UNSPECIFIED: Unspecified infrastructure provider (default).
       - INFRASTRUCTURE_PROVIDER_NONE: No cloud provider (likely bare metal).
       - AWS_EC2: AmazonWeb Services EC2.
       - GCP_GCE: Google Cloud.
       - AZURE_COMPUTE: Azure Compute.
       - VMWARE_VSPHERE: VMWare vSphere.
       - OPENSHIFT: OpenShift.
  vmware.tanzu.manage.v1alpha1.common.cluster.KubernetesProvider:
    type: object
    properties:
      type:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.KubernetesProviderType
        description: Indicates the k8s provider type.
      version:
        type: string
        description: Indicates the k8s provider version.
    description: >-
      KubernetesProvider definition - indicates the k8s provider type and
      version.
  vmware.tanzu.manage.v1alpha1.common.cluster.KubernetesProviderType:
    type: string
    enum:
      - KUBERNETES_PROVIDER_UNSPECIFIED
      - VMWARE_TANZU_KUBERNETES_GRID
      - VMWARE_TANZU_KUBERNETES_GRID_SERVICE
      - VMWARE_TANZU_KUBERNETES_GRID_HOSTED
      - VMWARE_TANZU_COMMUNITY_EDITION
      - VMWARE_MANAGED_KUBERNETES_SERVICE
    default: KUBERNETES_PROVIDER_UNSPECIFIED
    description: |-
      KubernetesProviderType definition - indicates the k8s provider Type.

       - KUBERNETES_PROVIDER_UNSPECIFIED: Unspecified k8s provider (default).
       - VMWARE_TANZU_KUBERNETES_GRID: VMware Tanzu Kubernetes Grid.
       - VMWARE_TANZU_KUBERNETES_GRID_SERVICE: VMware Tanzu Kubernetes Grid Service (Guest Cluster Management).
       - VMWARE_TANZU_KUBERNETES_GRID_HOSTED: VMware Tanzu Kubernetes Grid hosted in TMC.
       - VMWARE_TANZU_COMMUNITY_EDITION: VMware Tanzu Community Edition.
       - VMWARE_MANAGED_KUBERNETES_SERVICE: VMware Managed Kubernetes Service.
  vmware.tanzu.manage.v1alpha1.common.cluster.ResourceAllocation:
    type: object
    properties:
      allocatable:
        type: number
        format: float
        description: >-
          Allocatable is the quantity of compute resources that can be allocated
          by the user excluding reserved resources.
      requested:
        type: number
        format: float
        description: Requested is the requested quantity of compute resources.
      units:
        type: string
        description: >-
          Units is the unit on which resource can be measured e.g. mb,
          millicores etc.
      allocatedPercentage:
        type: number
        format: float
        description: Represents allocated percentage.
      capacity:
        type: number
        format: float
        description: >-
          Capacity is the total quantity of compute resources available
          including reserved resources.
    description: ResourceAllocation is used for CPU and Memory metrics of a cluster.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGServiceVsphereVolume:
    type: object
    properties:
      name:
        type: string
        description: Volume name.
      mountPath:
        type: string
        description: MountPath is the directory where the volume device is to be mounted.
      capacity:
        type: number
        format: float
        description: Volume capacity is in gib.
      storageClass:
        type: string
        description: |-
          Storage class for PVC
          If omitted, default storage class will be used for the disks.
    description: >-
      TKGServiceVsphereVolume defines a Persistent Volume Claim attached for the
      workload cluster.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereVMConfig:
    type: object
    properties:
      cpu:
        type: string
        format: int64
        description: Number of CPUs per node.
      diskGib:
        type: string
        format: int64
        description: Root disk size in gigabytes for the VM.
      memoryMib:
        type: string
        format: int64
        description: Memory associated with the node in megabytes.
    description: VM specific configuration.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereWorkspace:
    type: object
    properties:
      datacenter:
        type: string
        description: Datacenter in which a VM is created.
      datastore:
        type: string
        description: Datastore in which a VM is created.
      folder:
        type: string
        description: Folder in which a VM is created.
      network:
        type: string
        description: Network used by the VM.
      resourcePool:
        type: string
        description: Resource pool in which a VM is created.
    description: TKG vSphere workspace configuration.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ControlPlane:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        description: The replicas of the control plane.
      metadata:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.Metadata
        description: The metadata of the control plane.
      osImage:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.OSImage
        description: The OS image of the control plane.
    description: The cluster specific control plane configuration.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.CoreAddon:
    type: object
    properties:
      type:
        type: string
        description: Type of core addon, e.g. 'cni'.
      provider:
        type: string
        description: Provider of core addon, e.g. 'antrea', 'calico'.
    description: The core addon.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.NetworkRanges:
    type: object
    properties:
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDRBlocks specifies one or more ranges of IP addresses.
    description: NetworkRanges describes a collection of IP addresses as a list of ranges.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.NetworkSettings:
    type: object
    properties:
      pods:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.NetworkRanges
        description: Pod CIDR for Kubernetes pods defaults to 192.168.0.0/16.
      services:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.NetworkRanges
        description: Service CIDR for kubernetes services defaults to 10.96.0.0/12.
      serviceDomain:
        type: string
        description: Domain name for services.
    description: Network related settings for the cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.Topology:
    type: object
    properties:
      version:
        type: string
        description: Kubernetes version of the cluster.
      clusterClass:
        type: string
        description: The name of the cluster class for the cluster.
      controlPlane:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ControlPlane
        description: Control plane specific configuration.
      nodePools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Definition
        description: Nodepool definition for the cluster.
      variables:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.ClusterVariable
        description: Variables configuration for the cluster.
      network:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.NetworkSettings
        description: Network specific configuration.
      coreAddons:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.CoreAddon
        description: The core addons.
    description: The cluster topology.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.ClusterVariable:
    type: object
    properties:
      name:
        type: string
        description: Name of the variable.
      value:
        type: object
        description: Value of the variable.
    description: The TKG cluster variable configuration.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.Metadata:
    type: object
    properties:
      labels:
        type: object
        additionalProperties:
          type: string
        description: The labels configuration.
      annotations:
        type: object
        additionalProperties:
          type: string
        description: The annotations configuration.
    description: The labels and annotations configurations.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.OSImage:
    type: object
    properties:
      name:
        type: string
        description: The name of the OS image.
      version:
        type: string
        description: The version of the OS image.
      arch:
        type: string
        description: The arch of the OS image.
    description: The OS image configuration.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Definition:
    type: object
    properties:
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Spec
        description: Spec for the nodepool.
      info:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Info
        description: Info for the nodepool.
    description: Definition is the definition of nodepool for cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Info:
    type: object
    properties:
      name:
        type: string
        description: Name of the nodepool.
      description:
        type: string
        description: Description for the nodepool.
    description: Info is the meta information of nodepool for cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Spec:
    type: object
    properties:
      class:
        type: string
        description: The name of the machine deployment class used to create the nodepool.
      replicas:
        type: integer
        format: int32
        description: The replicas of the nodepool.
      failureDomain:
        type: string
        description: The failure domain the machines will be created in.
      overrides:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.ClusterVariable
        description: Overrides can be used to override cluster level variables.
      metadata:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.Metadata
        description: The metadata of the nodepool.
      osImage:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.common.cluster.OSImage
        description: The OS image of the nodepool.
    description: Spec for the cluster nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.ClusterManifestGetResponse:
    type: object
    properties:
      manifest:
        type: string
        description: Attach manifest for the cluster resource.
    description: The response type for getting the attach manifest for a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.ClusterReattachRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster full_name.
      proxyName:
        type: string
        description: |-
          Optional proxy name is the name of the Proxy Config
          to be used for the cluster.
          If set empty, existing proxy config will be used.
          If set non-empty, defined proxy config will be used.
          If left unset, no proxy config will be used.
      imageRegistry:
        type: string
        description: |-
          Optional image registry is the name of the Image Registry Config
          to be used for the cluster.
          If set empty, no image registry config will be used.
          If set non-empty, defined image registry config will be used.
          If left unset, existing image registry config will be used.
    description: The request type for reattaching a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.ClusterReattachResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Reattached Cluster resource.
    description: The response type for reattaching a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.GetClusterIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Cluster policy.
    description: GetClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.PatchClusterIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchClusterIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.cluster.PatchClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.TestClusterIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestClusterIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.cluster.TestClusterIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestClusterIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.cluster.UpdateClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Cluster policy set.
    description: UpdateClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.ListClusterOptionsResponse:
    type: object
    properties:
      awsOptions:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSProviderOptions
        description: AWS specific cluster options.
      networkOptions:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.NetworkOptions
        description: Network specific cluster options.
      tkgServiceVsphereOptions:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGServiceVsphereOptions
        description: TKG service vsphere specific cluster options.
      tkgVsphereOptions:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereOptions
        description: TKG on vSphere specific cluster options.
      tkgAzureOptions:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureOptions
        description: TKG on azure specific cluster options.
    description: Response from listing cluster options.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSAccountAccessStatus:
    type: object
    properties:
      state:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSAccountAccessStatus.State
        description: The status of our access to target AWS account.
      message:
        type: string
        description: The detailed message explaining the reason for the state.
    description: The status of the access to the target AWS account.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSAccountAccessStatus.State:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - PENDING
      - SUCCEEDED
      - FAILED
    default: STATE_UNSPECIFIED
    description: |-
      The state of our access to the AWS account.

       - STATE_UNSPECIFIED: Unspecified state.
       - PENDING: Still in the process of accessing the customer's AWS account.
       - SUCCEEDED: Successfully accessed customer's AWS account.
       - FAILED: Failed to access customer's AWS account.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSProviderOptions:
    type: object
    properties:
      regionalOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSRegionalOptions
        description: List of regional options for the AWS cloud provider.
      accessStatus:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSAccountAccessStatus
        description: The information about of our access to the AWS account.
      defaultVpcCidr:
        type: string
        description: Default VPC CIDR for AWS provider.
      advancedConfigOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfigOption
        description: The advanced configuration options for AWS cloud provider.
    description: AWS cloud provider specific options.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSRegionalOptions:
    type: object
    properties:
      regionName:
        type: string
        description: Name of the AWS region.
      versionList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Version'
        description: List of supported Kubernetes versions.
      zoneOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSZoneOptions
        description: >-
          List of zones and their options within the region (eg. zone format:
          us-west-2a).
      vpcOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSVPCOptions
        description: List of VPCs.
      sshKeyNames:
        type: array
        items:
          type: string
        description: List of AWS SSH key name.
    description: AWS cloud provider specific regional options.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSSubnetOptions:
    type: object
    properties:
      subnetId:
        type: string
        description: ID of the AWS subnet.
      name:
        type: string
        description: Name of the AWS subnet.
      cidr:
        type: string
        description: CIDR of the AWS subnet.
      availabilityZone:
        type: string
        description: Availability zone that the subnet is belonged to.
      public:
        type: boolean
        description: Public or private subnet.
    description: AWS cloud provider specific subnet options.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSVPCOptions:
    type: object
    properties:
      vpcId:
        type: string
        description: ID of the AWS VPC.
      subnetOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AWSSubnetOptions
        description: List of subnets that is supported in the VPC.
      name:
        type: string
        description: Name of the AWS VPC.
      cidr:
        type: string
        description: CIDR of the AWS VPC.
    description: AWS cloud provider specific vpc options.
  vmware.tanzu.manage.v1alpha1.common.cluster.AWSZoneOptions:
    type: object
    properties:
      zoneName:
        type: string
        description: Name of the AWS zone.
      instanceTypes:
        type: array
        items:
          type: string
        description: List of instance types that is supported in the zone.
    description: AWS cloud provider specific zone options.
  vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfigOption:
    type: object
    properties:
      key:
        type: string
        description: The key of the advanced configuration parameters.
      description:
        type: string
        description: The description of the advanced configuration parameters.
      default:
        type: string
        description: The default value of the advanced configuration parameters.
    description: The options of TKGm advanced configuration.
  vmware.tanzu.manage.v1alpha1.common.cluster.NetworkOptions:
    type: object
    properties:
      defaultServiceCidr:
        type: string
        description: Default provisioned cluster service CIDR.
      defaultPodCidr:
        type: string
        description: Default provisioned cluster pod CIDR.
      occupiedNetworkRanges:
        type: array
        items:
          type: string
        description: >-
          List of network ip ranges that have been occupied by TKGS management
          cluster network

          and cannot be used for workload clusters CIDR ranges.
    description: Options for default Kubernetes cluster network value.
  vmware.tanzu.manage.v1alpha1.common.cluster.StorageClass:
    type: object
    properties:
      name:
        type: string
        description: Name of the storage class.
    description: Storage class for the TKG Service vSphere provider.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureInstanceOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the instance type.
      availabilityZones:
        type: array
        items:
          type: string
        description: Availability zone in which the instance is available.
    description: Instance options for TKG Azure.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureOptions:
    type: object
    properties:
      subscriptionOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureSubscriptions
        description: List of subscription options for the Azure cloud provider.
      advancedConfigOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfigOption
        description: The advanced configuration options for Azure cloud provider.
    description: TKG azure provider specific options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureRegionalOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the Azure region.
      resourceGroupOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureResourceGroupOptions
        description: List of Resource Groups.
      instanceOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureInstanceOptions
        description: List of Azure instance types.
    description: Azure cloud provider specific regional options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureRelease:
    type: object
    properties:
      version:
        type: string
        description: Version of this TKG release.
      kubernetesVersion:
        type: string
        description: Version of Kubernetes used in this release.
      osOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureReleaseOSOptions
        description: OS options for azure release.
    description: Azure specific releases.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureReleaseOSOptions:
    type: object
    properties:
      name:
        type: string
        description: OS name supporting the release.
      version:
        type: string
        description: OS version supporting the release.
      termsAccepted:
        type: boolean
        description: Terms of the release have been accepted or not.
      arch:
        type: string
        description: OS arch supporting the release.
    description: Azure specific os options per release.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureResourceGroupOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the resource group.
      vnetOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureVNetOptions
        description: List of VNets.
    description: Resource group options for TKG Azure.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureSubnetOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the subnet.
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDR of the Azure subnet.
    description: Azure specific subnet options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureSubscriptions:
    type: object
    properties:
      name:
        type: string
        description: Name of Azure subscription.
      subscriptionId:
        type: string
        description: ID of Azure subscription.
      regionalOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureRegionalOptions
        description: >-
          List of regional options for the Azure cloud provider in the
          subscription.
      releases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureRelease
        description: List of TKG releases that can be used in the subscription.
    description: TKG Azure provider subscription options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureVNetOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the vnet.
      cidrBlocks:
        type: array
        items:
          type: string
        description: CIDR of the Azure vnet.
      subnetOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGAzureSubnetOptions
        description: List of subnet options.
    description: Azure specific vnet options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGServiceVsphereOptions:
    type: object
    properties:
      virtualMachineClasses:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.VirtualMachineClass
        description: >-
          List of supported virtual machine classes on a TKG Service management
          cluster.
      storageClasses:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.StorageClass
        description: List of available storage classes on a TKG Service management cluster.
      virtualMachineImages:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.VirtualMachineImage
        description: >-
          List of available virtual machine images on a TKG Service management
          cluster.
      supportsMultipleNodepools:
        type: boolean
        description: >-
          Flag to denote support for multiple nodepools in a TKGS workload
          cluster.
      tkcVersion:
        type: string
        description: TKC version of TKG Service.
      availabilityZones:
        type: array
        items:
          type: string
        description: >-
          List of available availability zones on TKG Service management cluster
          for creating nodepools with failure domains.
    description: TKG service vsphere provider specific options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereAVIOptions:
    type: object
    properties:
      isAviEnabled:
        type: boolean
        description: Is AVI enabled on the management cluster.
      isAviControlPlaneHaProviderEnabled:
        type: boolean
        description: Is AVI control plane HA provider enabled on the management cluster.
    description: AVI related config parameters.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereDatacenterOptions:
    type: object
    properties:
      name:
        type: string
        description: Name of the vSphere object.
      path:
        type: string
        description: Path to the object in the vSphere API.
      folders:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereFolders
        description: List of vSphere folders where TKG cluster nodes can reside in.
      datastores:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereDatastores
        description: List of vSphere datastores a TKG cluster can use.
      resourcePools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereResourcePools
        description: List of vSphere resource pools a TKG cluster can use.
      releases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereReleases
        description: List of TKG releases that can be used.
      networks:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereNetworks
        description: List of vSphere networks a TKG cluster can use.
    description: TKG vSphere options avaiable per datacenter.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereDatastores:
    type: object
    properties:
      name:
        type: string
        description: Name of the vSphere object.
      path:
        type: string
        description: Path to the object in the vSphere API.
    description: TKG vSphere datastores.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereFolders:
    type: object
    properties:
      name:
        type: string
        description: Name of the vSphere object.
      path:
        type: string
        description: Path to the object in the vSphere API.
    description: TKG vSphere virtual machine folders.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereInstanceType:
    type: object
    properties:
      vmConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereVMConfig
        description: >-
          VM resource configuration for the instance type. e.g. cpu, disk,
          memory.
      name:
        type: string
        title: >-
          Name of the t-shirt size associated with this set of resources, if
          any.

          Example: small, medium, large
    description: Predefined TKG Instance Type.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereNetworks:
    type: object
    properties:
      name:
        type: string
        description: Name of the vSphere object.
      path:
        type: string
        description: Path to the object in the vSphere API.
    description: TKG vSphere networks.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereOptions:
    type: object
    properties:
      datacenterOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereDatacenterOptions
        description: List of TKG vSphere options broken by datacenter.
      vmMinimums:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereVMConfig
        description: The minimum resources required for TKG vms.
      instanceTypes:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereInstanceType
        title: |-
          TKG Instance Types
          An ordered ascending list of sizes e.g. small, medium, large
      aviOptions:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereAVIOptions
        description: AVI related config parameters.
      advancedConfigOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.AdvancedConfigOption
        description: The advanced configuration options for vSphere cloud provider.
    description: TKG vSphere provider specific options.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereReleases:
    type: object
    properties:
      version:
        type: string
        description: Version of this TKG release.
      kubernetesVersion:
        type: string
        description: Version of Kubernetes used in this release.
      templates:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereTemplates
        description: >-
          The vSphere virtual machine templates associated with this TKG
          release.
    description: Kubernetes releases for TKG vSphere.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereResourcePools:
    type: object
    properties:
      name:
        type: string
        description: Name of the vSphere object.
      path:
        type: string
        description: Path to the object in the vSphere API.
    description: TKG vSphere resource pools.
  vmware.tanzu.manage.v1alpha1.common.cluster.TKGVsphereTemplates:
    type: object
    properties:
      name:
        type: string
        description: Name of the vSphere object.
      path:
        type: string
        description: Path to the object in the vSphere API.
      osName:
        type: string
        description: OS name of the template.
      osVersion:
        type: string
        description: OS version of the template.
      osArch:
        type: string
        description: OS arch of the template.
    description: TKG vSphere virtual machine templates for use in TKG clusters.
  vmware.tanzu.manage.v1alpha1.common.cluster.Version:
    type: object
    properties:
      name:
        type: string
        description: Name of the kubernetes version.
      isDefault:
        type: boolean
        description: Is default version.
      isEligible:
        type: boolean
        description: Is this version eligible to be used in the current context.
      upstreamVersion:
        type: string
        description: The upstream Kubernetes version.
      osFamily:
        type: string
        description: The OS family this version belongs to.
      osOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.VersionOsOptions
        description: OS options for this version.
    description: The kubernetes version spec.
  vmware.tanzu.manage.v1alpha1.common.cluster.VersionOsOptions:
    type: object
    properties:
      name:
        type: string
        description: OS name supporting the version.
      version:
        type: string
        description: OS version supporting the version.
      arch:
        type: string
        description: OS arch supporting the version.
    description: The kubernetes version specific os options.
  vmware.tanzu.manage.v1alpha1.common.cluster.VirtualMachineClass:
    type: object
    properties:
      name:
        type: string
        description: Name of the virtual machine class.
      cpuCores:
        type: string
        format: int64
        description: CPU cores provided by the virtual machine class.
      memoryGb:
        type: string
        format: int64
        description: Memory provided by the virtual machine class.
    description: Virtual machine class for the TKG Service vSphere provider.
  vmware.tanzu.manage.v1alpha1.common.cluster.VirtualMachineImage:
    type: object
    properties:
      name:
        type: string
        description: Name of the virtual machine image.
    description: Virtual machine image for the TKG Service vSphere provider.
  vmware.tanzu.manage.v1alpha1.cluster.CreateClusterRequest:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster to create.
    description: Request to create a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.CreateClusterResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster created.
    description: Response from creating a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.DeleteClusterResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.EnumerateClustersResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster object.
    description: Streamed response from enumerating Clusters.
  vmware.tanzu.manage.v1alpha1.cluster.GetClusterResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster returned.
    description: Response from getting a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.ListClustersResponse:
    type: object
    properties:
      clusters:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: List of clusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Clusters.
  vmware.tanzu.manage.v1alpha1.cluster.PatchClusterRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.PatchClusterResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster patched.
    description: Response from patching a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.UpdateClusterRequest:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Update Cluster.
    description: Request to update (overwrite) a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.UpdateClusterResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster updated.
    description: Response from updating a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.WatchClustersResponse:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.Cluster'
        description: Cluster event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Clusters.
  k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector:
    type: object
    properties:
      matchLabels:
        type: object
        additionalProperties:
          type: string
        title: >-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the
          matchLabels

          map is equivalent to an element of matchExpressions, whose key field
          is "key", the

          operator is "In", and the values array contains only "value". The
          requirements are ANDed.

          +optional
      matchExpressions:
        type: array
        items:
          $ref: >-
            #/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement
        title: >-
          matchExpressions is a list of label selector requirements. The
          requirements are ANDed.

          +optional
    description: >-
      A label selector is a label query over a set of resources. The result of
      matchLabels and

      matchExpressions are ANDed. An empty label selector matches all objects. A
      null

      label selector matches no objects.
  k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement:
    type: object
    properties:
      key:
        type: string
        title: |-
          key is the label key that the selector applies to.
          +patchMergeKey=key
          +patchStrategy=merge
      operator:
        type: string
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
      values:
        type: array
        items:
          type: string
        title: >-
          values is an array of string values. If the operator is In or NotIn,

          the values array must be non-empty. If the operator is Exists or
          DoesNotExist,

          the values array must be empty. This array is replaced during a
          strategic

          merge patch.

          +optional
    description: >-
      A label selector requirement is a selector that contains values, a key,
      and an operator that

      relates the key and values.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Backup:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.FullName
        description: Full name for the Backup Config.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the backup object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Spec
        description: Spec for the backup.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Status
        description: Status of the backup.
    description: >-
      The Kubernetes cluster state related to backup (API objects and associated
      volume state).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupHooks:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupResourceHookSpec
        description: >-
          Resources are hooks that should be executed when backing up individual
          instances of a resource.
    description: >-
      BackupHooks contains custom actions that should be executed at different
      phases of the backup.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupResourceHook:
    type: object
    properties:
      exec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.ExecHook
        description: Exec defines an exec hook.
    description: BackupResourceHook defines a hook for a resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupResourceHookSpec:
    type: object
    properties:
      name:
        type: string
        description: Name is the name of this hook.
      includedNamespaces:
        type: array
        items:
          type: string
        description: >-
          IncludedNamespaces specifies the namespaces to which this hook spec
          applies. If empty, it applies

          to all namespaces.
      excludedNamespaces:
        type: array
        items:
          type: string
        description: >-
          ExcludedNamespaces specifies the namespaces to which this hook spec
          does not apply.
      labelSelector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: >-
          LabelSelector, if specified, filters the resources to which this hook
          spec applies.
      preHooks:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupResourceHook
        description: >-
          PreHooks is a list of BackupResourceHooks to execute prior to storing
          the item in the backup.

          These are executed before any "additional items" from item actions are
          processed.
      postHooks:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupResourceHook
        description: >-
          PostHooks is a list of BackupResourceHooks to execute after storing
          the item in the backup.

          These are executed after all "additional items" from item actions are
          processed.
    description: >-
      BackupResourceHookSpec defines one or more BackupResourceHooks that should
      be executed based on

      the rules defined for namespaces and labels.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.CreateBackupRequest:
    type: object
    properties:
      backup:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Backup
        description: Backup to create.
    description: Request to create a Backup.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.CreateBackupResponse:
    type: object
    properties:
      backup:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Backup
        description: Backup created.
    description: Response from creating a Backup.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.DeleteBackupResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Backup.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.ExecHook:
    type: object
    properties:
      container:
        type: string
        description: >-
          Container is the container in the pod where the command should be
          executed. If not specified,

          the pod's first container is used.
      command:
        type: array
        items:
          type: string
        description: Command is the command and arguments to execute.
      onError:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.HookErrorMode
        description: >-
          OnError specifies how Velero should behave if it encounters an error
          executing this hook.
      timeout:
        type: string
        description: >-
          Timeout defines the maximum amount of time Velero should wait for the
          hook to complete before

          considering the execution a failure.
    description: >-
      ExecHook is a hook that uses the pod exec API to execute a command in a
      container in a pod.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of this Backup.
    description: |-
      Full name of the backup. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.GatherBackupResourcesStatus:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.GatherBackupResourcesStatus.Phase
        description: Phase is the overall state of the ListBackupResources operation.
      phaseInfo:
        type: string
        description: >-
          PhaseInfo defines the message for the state which maybe non-empty for
          the failed state.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          Conditions attached to sub-operations like uploads during the
          collection of backup resources.
    description: Defines the status of ListBackupResources action.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.GatherBackupResourcesStatus.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PROCESSED
      - FAILED
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the ListBackupResources action in the associated cluster.

       - PHASE_UNSPECIFIED: Default phase.
       - PROCESSED: The internal backupResources state which specifies if the resources have been populated to the CR.
       - FAILED: Failure state while processing the backup resources tar from velero or while uploading.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.GetBackupResponse:
    type: object
    properties:
      backup:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Backup
        description: Backup returned.
    description: Response from getting a Backup.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.HookErrorMode:
    type: string
    enum:
      - MODE_UNSPECIFIED
      - CONTINUE
      - FAIL
    default: MODE_UNSPECIFIED
    description: >-
      Specifies how Velero should behave if it encounters an error executing
      this hook.

       - MODE_UNSPECIFIED: The default mode.
       - CONTINUE: Means that an error from a hook is acceptable, and the operation can proceed.
       - FAIL: Means that an error from a hook is problematic, and the operation should be in error.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.ListBackupsResponse:
    type: object
    properties:
      backups:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Backup
        description: List of backups.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Backups.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Progress:
    type: object
    properties:
      totalItems:
        type: integer
        format: int32
        description: >-
          The total number of items to be backed up. This number may change

          throughout the execution of the backup due to plugins that return
          additional related

          items to back up, the velero.io/exclude-from-backup label, and various
          other

          filters that happen as items are processed.
      itemsBackedUp:
        type: integer
        format: int32
        description: |-
          The number of items that have actually been written to the
          backup tarball so far.
    description: Progress provides additional fields to track backup completion progress.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Resources:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
        description: Names will be the list of resource name under that GVK.
    description: Resources represents the list of names of k8s resources of one kind.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Spec:
    type: object
    properties:
      includedNamespaces:
        type: array
        items:
          type: string
        description: >-
          The namespace to be included for backup from. If empty, all namespaces
          are included.
      excludedNamespaces:
        type: array
        items:
          type: string
        description: The namespaces to be excluded in the backup.
      includedResources:
        type: array
        items:
          type: string
        description: >-
          The name list for the resources to be included into backup. If empty,
          all resources are included.
      excludedResources:
        type: array
        items:
          type: string
        description: The name list for the resources to be excluded in backup.
      labelSelector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: >-
          The label selector to selectively adding individual objects to the
          backup. If empty

          or nil, all objects are included. Optional.
      snapshotVolumes:
        type: boolean
        description: >-
          A flag which specifies whether to take cloud snapshots of any PV's
          referenced in the set of objects

          included in the Backup. If set to true, snapshots will be taken. If
          set to false, snapshots will be skipped.

          If left unset, snapshots will be attempted if volume snapshots are
          configured for the cluster.
      ttl:
        type: string
        description: The backup retention period.
      includeClusterResources:
        type: boolean
        description: >-
          A flag which specifies whether cluster-scoped resources should be
          included for consideration in the backup.

          If set to true, all cluster-scoped resources will be backed up. If set
          to false, all cluster-scoped resources

          will be excluded from the backup. If unset, all cluster-scoped
          resources are included if and only if all

          namespaces are included and there are no excluded namespaces.

          Otherwise, only cluster-scoped resources associated with
          namespace-scoped resources

          included in the backup spec are backed up. For example, if a
          PersistentVolumeClaim is included in the backup,

          its associated PersistentVolume (which is cluster-scoped) would also
          be backed up.
      storageLocation:
        type: string
        description: The name of a BackupStorageLocation where the backup should be stored.
      volumeSnapshotLocations:
        type: array
        items:
          type: string
        description: >-
          A list containing names of VolumeSnapshotLocations associated with
          this backup.
      orLabelSelectors:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: >-
          A list of metav1.LabelSelector to filter with when adding individual
          objects to the backup.

          If multiple provided they will be joined by the OR operator.
          LabelSelector as well as

          OrLabelSelectors cannot co-exist in backup request, only one of them
          can be used.
      orderedResources:
        type: object
        additionalProperties:
          type: string
        description: >-
          Specifies the backup order of resources of specific Kind. The map key
          is the Kind name and

          value is a list of resource names separated by commas. Each resource
          name has format "namespace/resourcename".

          For cluster resources, simply use "resourcename".
      defaultVolumesToRestic:
        type: boolean
        description: >-
          Specifies whether restic should be used to take a backup of all pod
          volumes by default.

          Deprecated - use default_volumes_to_fs_backup instead.
      csiSnapshotTimeout:
        type: string
        description: >-
          Specifies the time used to wait for CSI VolumeSnapshot status turns to
          ReadyToUse

          during creation, before returning error as timeout. The default value
          is 10 minute.
      defaultVolumesToFsBackup:
        type: boolean
        description: >-
          Specifies whether all pod volumes should be backed up via file system
          backup by default.
      hooks:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.BackupHooks
        description: >-
          Hooks represent custom actions that should be executed at different
          phases of the backup.
      includedClusterScopedResources:
        type: array
        items:
          type: string
        description: >-
          A slice of cluster-scoped resource type names to include in the
          backup.

          If set to "*", all cluster-scoped resource types are included.

          The default value is empty, which means only related cluster-scoped
          resources are included.
      excludedClusterScopedResources:
        type: array
        items:
          type: string
        description: >-
          A slice of cluster-scoped resource type names to exclude from the
          backup.

          If set to "*", all cluster-scoped resource types are excluded.
      includedNamespaceScopedResources:
        type: array
        items:
          type: string
        description: >-
          A slice of namespace-scoped resource type names to include in the
          backup.

          The default value is "*".
      excludedNamespaceScopedResources:
        type: array
        items:
          type: string
        description: >-
          A slice of namespace-scoped resource type names to exclude from the
          backup.

          If set to "*", all namespace-scoped resource types are excluded.
      snapshotMoveData:
        type: boolean
        description: >-
          Specifies whether snapshot data should be moved to the target
          location.
    description: The backup spec.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Status.Phase
        description: The current state of the Backup.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this backup object.

          The description of the conditions is as follows:

          - "Scheduled" with status 'Unknown' indicates the backup request has
          not been applied to the cluster yet

          - "Scheduled" with status 'False' indicates the request could not be
          forwarded to the cluster (e.g. intent generation failure)

          - "Scheduled" with status 'True' and "Ready" with status 'Unknown'
          indicates the backup create / delete intent has been applied / deleted
          but not yet acted upon

          - "Ready" with status 'True' indicates the the creation of data
          protection is complete

          - "Ready" with status 'False' indicates the the creation of data
          protection is in error state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Status.Phase
        description: A list of available phases for backup object.
      validationErrors:
        type: array
        items:
          type: string
        description: A list of all validation errors (if applicable).
      startTimestamp:
        type: string
        format: date-time
        description: The timestamp when a backup was started.
      completionTimestamp:
        type: string
        format: date-time
        description: The timestamp when a backup was completed.
      volumeSnapshotsAttempted:
        type: integer
        format: int32
        description: The total number of attempted volume snapshots for this backup.
      volumeSnapshotsCompleted:
        type: integer
        format: int32
        description: >-
          The total number of successfully completed volume snapshots for this
          backup.
      expiration:
        type: string
        format: date-time
        description: >-
          The expiration time associated with this Backup object if it is
          eligible for garbage-collection.
      formatVersion:
        type: string
        description: >-
          The backup's format version, including major, minor, and patch
          version.
      progress:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Progress
        description: The backup progress so far.
      resources:
        type: object
        additionalProperties:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Resources
        description: >-
          Map of important resources kind with their names. Map<k8s_Kind, list
          of names>.

          Currently the expected kinds in a backup are Namespace,
          PersistentVolumeClaim and PersistentVolume.

          Other resources which are part of the backup will be saved in an
          appropriate format in TMC S3 bucket and will be accessible

          to the user on demand.
      gatherBackupResourcesStatus:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.GatherBackupResourcesStatus
        description: >-
          This holds the status of ListBackupResources action which is triggered
          on the cluster once the backup is completed.

          This will specify the state of that process such that the user is
          indicated, if the action to get the resources is processed or failed.
      resticBackupsCompleted:
        type: array
        items:
          type: string
        description: A list of all the volume backups completed by restic.
      resticBackupsAttempted:
        type: array
        items:
          type: string
        description: A list of all the volume backups attempted by restic.
      failureReason:
        type: string
        description: The error that caused the entire backup to fail.
      csiVolumeSnapshotsAttempted:
        type: integer
        format: int32
        description: The total number of attempted CSI volume snapshots for this backup.
      csiVolumeSnapshotsCompleted:
        type: integer
        format: int32
        description: >-
          The total number of successfully completed CSI volume snapshots for
          this backup.
      resourceListUrl:
        type: string
        description: The URL to download the list of resources that were backed up.
      backupLogsUrl:
        type: string
        description: The URL to download the backup logs.
      volumeBackups:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackup
        description: Information about volumes backed up.
    description: Status of the backup resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - NEW
      - FAILEDVALIDATION
      - INPROGRESS
      - COMPLETED
      - FAILED
      - PENDING_DELETE
      - DELETING
      - PARTIALLY_FAILED
    default: PHASE_UNSPECIFIED
    description: |-
      The phase for the current backup.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the backup object is being processed by the service (TMC).
       - CREATING: Creating phase is set when backup is being created on the cluster.
       - NEW: The phase when backup has been created but not yet processed by velero.
       - FAILEDVALIDATION: The phase when backup has failed the velero controller's validations and therefore will not run.
       - INPROGRESS: The phase when backup is currently executing by velero.
       - COMPLETED: The phase when backup has run successfully without errors.
       - FAILED: The phase when backup ran but encountered an error that prevented it from completing successfully.
       - PENDING_DELETE: Pending delete is set when the object deletion is being processed by the service.
       - DELETING: The phase when backup and all its associated data are being deleted.
       - PARTIALLY_FAILED: The phase when the backup has run to completion but encountered errors backing up individual items.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackup:
    type: object
    properties:
      pvcName:
        type: string
        description: The name of the persistent volume claim.
      pvcNamespace:
        type: string
        description: The namespace of the persistent volume claim.
      pvName:
        type: string
        description: The name of the persistent volume.
      scName:
        type: string
        description: The name of the storage class used by the persistent volume.
      size:
        type: string
        format: int64
        description: The complete size of the snapshot in bytes.
      method:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackup.VolumeBackupMethod
        description: The method used to perform the volume backup.
      podInfo:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackupPodInfo
        description: |-
          Additional metadata about the pod where the volume was mounted.
          Only present for file system backups.
    description: VolumeBackup contains metadata about a particular volume backup taken.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackup.VolumeBackupMethod:
    type: string
    enum:
      - METHOD_UNSPECIFIED
      - RESTIC
      - CSI_VOLUME_SNAPSHOT
      - KOPIA
      - DATA_MOVER
    default: METHOD_UNSPECIFIED
    description: |-
      The possible methods used to perform a volume backup.

       - METHOD_UNSPECIFIED: Unspecified method.
       - RESTIC: A file system backup using velero's restic integration.
       - CSI_VOLUME_SNAPSHOT: A volume snapshot performed by the CSI driver.
       - KOPIA: A file system backup using velero's kopia integration.
       - DATA_MOVER: A volume snapshot performed by the CSI driver and copied to the target location.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackupPodInfo:
    type: object
    properties:
      podName:
        type: string
        description: The name of the pod where the volume was mounted.
      podNamespace:
        type: string
        description: The namespace of the pod where the volume was mounted.
      podVolumeName:
        type: string
        description: The name of the volume as depicted in the pod manifest.
      backupPhase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackupPodInfo.PodVolumeBackupPhase
        description: The phase of the pod volume backup.
    description: >-
      VolumeBackupPodInfo contains additional metadata about the pod where a
      backed up volume was mounted.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.VolumeBackupPodInfo.PodVolumeBackupPhase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    default: PHASE_UNSPECIFIED
    description: |-
      The possible phases pod volume backup can be in.

       - PHASE_UNSPECIFIED: Default phase.
       - IN_PROGRESS: The pod volume backup is in progress.
       - COMPLETED: The pod volume backup has completed successfully.
       - FAILED: The pod volume backup has completed unsuccessfully.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.resources.BackupResource:
    type: object
    properties:
      name:
        type: string
        description: The name of the resource.
      namespaceName:
        type: string
        description: >-
          The namespace to which the resource belonged. An empty string
          indicates a cluster-scoped resource.
      gvk:
        type: string
        description: >-
          The string representation of a GroupVersionKind of the resource as
          <group>/<version>/<kind>.
    description: The metadata for a backup resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.resources.ListBackupResourcesResponse:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.resources.BackupResource
        description: The list of resources.
    description: The response message to list the resources in a backup.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.resources.SearchScope:
    type: object
    properties:
      namespaceName:
        type: string
        description: >-
          Scope search to resources in the specified namespace; supports
          globbing.

          An empty string indicates cluster-scoped resources. The default value
          is NOT all; use '*' for that.
      gvk:
        type: string
        description: >-
          Scope search to resources of the specified GroupVersionKind; supports
          globbing; default (*).
    description: Scope to search by.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.BackupLocation:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the backup location object.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.FullName
        description: Full name for the BackupLocation.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Spec
        description: Spec for the backup location.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status
        description: Status of the backup location.
    description: A backup location assigned to a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of this Backup Location.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.GetBackupLocationResponse:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.BackupLocation
        description: BackupLocation returned.
    description: Response from getting a BackupLocation.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.ListBackupLocationsResponse:
    type: object
    properties:
      backupLocations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.BackupLocation
        description: List of backuplocations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing BackupLocations.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Spec:
    type: object
    properties:
      targetProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.TargetProvider
        description: The target provider of the backup storage.
      config:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.TargetProviderSpecificConfig
        description: Provider-specific configuration fields.
      bucket:
        type: string
        description: The bucket to use for object storage.
      region:
        type: string
        description: The region of the bucket origin. Optional.
      credential:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: The name of secret to be used to access the bucket.
      prefix:
        type: string
        description: The prefix of the bucket.  Optional.
      caCert:
        type: string
        description: >-
          A PEM-encoded certificate bundle to trust while connecting to the
          storage backend. Optional.
    description: The backup location spec.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status.Phase
        description: The current state of the backup location.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The conditions attached to this backup location object.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status.Phase
        description: A list of available phases for backup location object.
      accessMode:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status.BackupStorageLocationAccessMode
        description: Permission for the backup location.
      lastSyncRevision:
        type: string
        description: >-
          The SHA value inside the file `<bucket>/metadata/revision`. Updating
          the SHA in that file will force

          a sync to happen sooner.
      lastSyncTimestamp:
        type: string
        format: date-time
        description: The timestamp when last sync happened.
      message:
        type: string
        description: A message about the backup storage location's status.
    description: Status of the backup location resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status.BackupStorageLocationAccessMode:
    type: string
    enum:
      - READONLY
      - READWRITE
    default: READONLY
    description: |-
      The permissions for a BackupStorageLocation.

       - READONLY: The read only access.
       - READWRITE: Read and write access.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backuplocation.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - AVAILABLE
      - UNAVAILABLE
      - PENDING_DELETE
      - DELETING
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Available phases for backup location object.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the backup location object is being processed by the service (TMC).
       - CREATING: Creating phase is set when backup location is being created by the service.
       - AVAILABLE: The location is available to read and write from.
       - UNAVAILABLE: The location is unavailable for read and write from.
       - PENDING_DELETE: Pending delete is set when the backup location delete is being processed by the service.
       - DELETING: Deleting is set when the backup location delete is in progress.
       - UPDATING: Updating is set when the backup location is being updated.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.AzureStorageConfiguration:
    type: object
    properties:
      resourceGroup:
        type: string
        description: >-
          Name of the resource group containing the storage account for this
          backup storage location.
      storageAccount:
        type: string
        description: Name of the storage account for this backup storage location.
      subscriptionId:
        type: string
        description: >-
          Subscription ID under which all the resources are being managed in
          azure. Optional.
    description: Azure specific storage configuration details.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.S3Configuration:
    type: object
    properties:
      s3ForcePathStyle:
        type: boolean
        description: >-
          A flag for whether to force path style URLs for S3 objects. It is
          default to false and set it to true when

          using local storage service like Minio.
      s3Url:
        type: string
        description: The service endpoint for non-AWS S3 storage solution.
      publicUrl:
        type: string
        description: >-
          The service endpoint used for generating download URLs. This field is
          primarily for local storage services like Minio.
    description: AWS S3 or other S3-compatible storage configuration details.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.TargetProvider:
    type: string
    enum:
      - TARGET_PROVIDER_UNSPECIFIED
      - AWS
      - AZURE
    default: TARGET_PROVIDER_UNSPECIFIED
    description: |-
      Available target provider for back up locations.

       - TARGET_PROVIDER_UNSPECIFIED: Unspecified target provider.
       - AWS: AWS.
       - AZURE: AZURE.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.TargetProviderSpecificConfig:
    type: object
    properties:
      s3Config:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.S3Configuration
        description: S3 and S3-compatible config.
      azureConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.AzureStorageConfiguration
        description: Azure specific config.
    description: >-
      Provider specific configuration for backup location
      (https://github.com/heptio/velero/blob/master/docs/api-types/backupstoragelocation.md).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.CreateDataProtectionRequest:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection
        description: DataProtection to create.
    description: Request to create a DataProtection.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.CreateDataProtectionResponse:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection
        description: DataProtection created.
    description: Response from creating a DataProtection.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.FullName
        description: Full name for the DataProtection.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the DataProtection object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Spec'
        description: Spec field for DataProtection.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Status
        description: Status field.
    description: >-
      Backup, restore, or migrate cluster data.


      Protect Kubernetes cluster data with the DataProtection resource. Backup,
      restore, or 

      migrate cluster objects and volumes.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DeleteDataProtectionResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a DataProtection.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.GetDataProtectionResponse:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection
        description: DataProtection returned.
    description: Response from getting a DataProtection.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.ListDataProtectionsResponse:
    type: object
    properties:
      dataProtections:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection
        description: List of dataprotections.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing DataProtections.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Spec:
    type: object
    properties:
      disableRestic:
        type: boolean
        description: >-
          A flag to indicate whether to skip installation of restic server
          (https://github.com/restic/restic).

          Otherwise, restic would be enabled by default as part of Data
          Protection installation.
      backupLocationNames:
        type: array
        items:
          type: string
        description: List of Backup Locations to install in the cluster.
      enableAllApiGroupVersionsBackup:
        type: boolean
        description: >-
          A flag to indicate whether to backup all the supported API Group
          versions of a resource on the cluster.
      enableCsiSnapshots:
        type: boolean
        description: >-
          A flag to indicate whether to install CSI snapshotting related
          capabilities.
      useNodeAgent:
        type: boolean
        description: >-
          A flag to indicate whether to install the node agent daemonset which
          is responsible for data transfer

          to the target location.
    description: >-
      The spec collects all the options for installing backup and restore
      solution into a Kubernetes cluster.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Status.Phase
        description: The overall phase of the data protection.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this data protection object.

          The description of the conditions is as follows:

          - "Scheduled" with status 'Unknown' indicates the request has not been
          applied to the cluster yet

          - "Scheduled" with status 'True' and "Ready" with status 'Unknown'
          indicates the data protection create / delete intent has been applied
          / deleted but not yet acted upon

          - "Ready" with status 'True' indicates the the creation of data
          protection is complete

          - "Ready" with status 'False' indicates the the creation of data
          protection is in error state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Status.Phase
        description: A list of available phases for data protection object.
      namespace:
        type: string
        description: The namespace used to install backup solution.
      version:
        type: string
        description: The version information of backup solution.
    description: Status of the DataProtection configure resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - PENDING_DELETE
      - DELETING
      - READY
      - ERROR
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Available phases for data protection object.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the data protection object is being processed by the service (TMC).
       - CREATING: Creating phase is set when data protection is being enabled on the cluster.
       - PENDING_DELETE: Pending delete is set when the data protection delete is being processed by the service.
       - DELETING: Deleting the set when the data protection delete is in progress on the the cluster.
       - READY: Ready phase is set when the data protection is successfully enabled.
       - ERROR: Error phase is set when there was a failure while creating/deleting data protection.
       - UPDATING: Updating is set when the data protection is being updated.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.UpdateDataProtectionRequest:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection
        description: Update DataProtection.
    description: Request to update (overwrite) a DataProtection.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.UpdateDataProtectionResponse:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.DataProtection
        description: DataProtection updated.
    description: Response from updating a DataProtection.
  k8s.io.apimachinery.pkg.runtime.RawExtension:
    type: object
    properties:
      raw:
        type: string
        format: byte
        description: >-
          Raw is the underlying serialization of this object.


          TODO: Determine how to detect ContentType and ContentEncoding of 'Raw'
          data.
    description: "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\ntype MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n}\ntype PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package:\ntype MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n}\ntype PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this:\n{\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true"
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.BackupReference:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Full Name of Cluster to restore from.
      backupName:
        type: string
        description: Name of the Backup to restore from.
      backupUid:
        type: string
        description: UID of the backup to restore from.
    description: The Backup to restore from.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.CreateRestoreRequest:
    type: object
    properties:
      restore:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Restore
        description: Restore to create.
    description: Request to create a Restore.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.CreateRestoreResponse:
    type: object
    properties:
      restore:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Restore
        description: Restore created.
    description: Response from creating a Restore.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.DeleteRestoreResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Restore.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.ExecRestoreHook:
    type: object
    properties:
      container:
        type: string
        description: >-
          Container is the container in the pod where the command should be
          executed. If not specified,

          the pod's first container is used.
      command:
        type: array
        items:
          type: string
        description: Command is the command and arguments to execute.
      onError:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.HookErrorMode
        description: >-
          OnError specifies how Velero should behave if it encounters an error
          executing this hook.
      execTimeout:
        type: string
        description: >-
          ExecTimeout defines the maximum amount of time Velero should wait for
          the hook to complete before

          considering the execution a failure.
      waitTimeout:
        type: string
        description: >-
          WaitTimeout defines the maximum amount of time Velero should wait for
          the container to be Ready

          before attempting to run the command.
    description: >-
      ExecRestoreHook is a hook that uses pod exec API to execute a command
      inside a container in a pod.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of this Restore.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.GatherRestoreResourcesStatus:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          Conditions attached to sub-operations like uploads during the
          collection of restore resources.
    description: Defines the status of CollectRestoreResources action.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.GetRestoreResponse:
    type: object
    properties:
      restore:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Restore
        description: Restore returned.
    description: Response from getting a Restore.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.InitRestoreHook:
    type: object
    properties:
      initContainers:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: >-
          InitContainers is list of init containers to be added to a pod during
          its restore.
      timeout:
        type: string
        description: >-
          Timeout defines the maximum amount of time Velero should wait for the
          init containers to complete.
    description: >-
      InitRestoreHook is a hook that adds an init container to a PodSpec to run
      commands before the

      workload pod is able to start.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.ListRestoresResponse:
    type: object
    properties:
      restores:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Restore
        description: List of restores.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Restores.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Progress:
    type: object
    properties:
      totalItems:
        type: integer
        format: int32
        title: >-
          The total number of items to be restored. This number may change

          throughout the execution of the restore due to plugins that return
          additional related

          items to restore
      itemsRestored:
        type: integer
        format: int32
        title: The number of items that have actually been restored so far
    description: Progress provides additional fields to track restore completion progress.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.ResourceIncludesExcludes:
    type: object
    properties:
      includedResources:
        type: array
        items:
          type: string
        description: A list of resources to be included.
      excludedResources:
        type: array
        items:
          type: string
        description: A list of resources to be excluded.
    description: A combination of included and excluded resources.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Restore:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.FullName
        description: Full name for the Config.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the restore object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Spec
        description: Spec for the restore.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Status
        description: Status of the restore.
    description: The application of resources from a backup to a target Kubernetes cluster.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.RestoreHooks:
    type: object
    properties:
      resources:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.RestoreResourceHookSpec
        description: >-
          Resources are hooks that should be executed when restoring individual
          instances of a resource.
    description: >-
      RestoreHooks contains custom actions that should be executed during or
      post restore.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.RestoreResourceHook:
    type: object
    properties:
      exec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.ExecRestoreHook
        description: Exec defines an exec restore hook.
      init:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.InitRestoreHook
        description: Init defines an init restore hook.
    description: RestoreResourceHook defines a restore hook for a resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.RestoreResourceHookSpec:
    type: object
    properties:
      name:
        type: string
        description: Name is the name of this hook.
      includedNamespaces:
        type: array
        items:
          type: string
        description: >-
          IncludedNamespaces specifies the namespaces to which this hook spec
          applies. If empty, it applies

          to all namespaces.
      excludedNamespaces:
        type: array
        items:
          type: string
        description: >-
          ExcludedNamespaces specifies the namespaces to which this hook spec
          does not apply.
      labelSelector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: >-
          LabelSelector, if specified, filters the resources to which this hook
          spec applies.
      postHooks:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.RestoreResourceHook
        description: >-
          PostHooks is a list of RestoreResourceHooks to execute during and
          after restoring a resource.
    description: >-
      RestoreResourceHookSpec defines one or more RestoreResourceHooks that
      should be executed based on

      the rules defined for namespaces, and labels.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Spec:
    type: object
    properties:
      backupName:
        type: string
        description: |-
          The name of the backup to restore from.
          Deprecated, use backup_ref instead.
      scheduleName:
        type: string
        description: >-
          The name of the schedule to restore from. If specified, and BackupName
          is empty, the most recent successful

          backup created from this schedule will be restored.
      includedNamespaces:
        type: array
        items:
          type: string
        description: >-
          The list of namespace names to be included for restore. If empty, all
          namespaces are included.
      excludedNamespaces:
        type: array
        items:
          type: string
        description: The list of namespace names to be excluded from restore.
      includedResources:
        type: array
        items:
          type: string
        description: >-
          The list of resource names to be included in the restore. If empty,
          all resources in the backup are included.
      excludedResources:
        type: array
        items:
          type: string
        description: The list of resource names to be excluded from restore.
      namespaceMapping:
        type: object
        additionalProperties:
          type: string
        description: >-
          A map of source namespace names to target namespace names to restore
          into. Any source namespaces not

          included in the map will be restored into namespaces of the same name.
      labelSelector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: >-
          A label selector used to selectively restore individual objects from
          the backup. If empty

          or nil, all objects are included. Optional.
      restorePvs:
        type: boolean
        description: >-
          A flag which specifies whether to restore all included PVs from
          snapshot (via the cloudprovider). If set to true,

          volumes will be restored. If set to false, volumes will not be
          restored. If left unset, volume restore will be

          attempted if the backup had snapshots included and snapshot locations
          are configured for the cluster.
      includeClusterResources:
        type: boolean
        description: >-
          A flag which specifies whether cluster-scoped resources should be
          included for consideration in the restore.

          If set to true, all cluster-scoped resources will be restored. If set
          to false, all cluster-scoped resources

          will be excluded during the restore. If unset, all cluster-scoped
          resources are included if and only if all

          namespaces are included and there are no excluded namespaces.

          Otherwise, only cluster-scoped resources associated with
          namespace-scoped resources

          included in the restore spec are restored. For example, if a
          PersistentVolumeClaim for a namespace is included

          in the restore, its associated PersistentVolume (which is
          cluster-scoped) would also be restored.
      backupRef:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.BackupReference
        description: Reference of the Backup to restore from.
      orLabelSelectors:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: >-
          A list of metav1.LabelSelector to filter with when adding individual
          objects to the restore.

          If multiple provided they will be joined by the OR operator.
          LabelSelector as well as

          OrLabelSelectors cannot co-exist in backup request, only one of them
          can be used.
      restoreStatus:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.ResourceIncludesExcludes
        description: >-
          Specifies which resources we should restore the status field. If nil,
          no objects are included.
      preserveNodePorts:
        type: boolean
        description: Specifies whether to restore old nodePorts from the backup.
      existingResourcePolicy:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Spec.ExistingResourcePolicyType
        description: >-
          Specifies the restore behaviour for the kubernetes resource to be
          restored.
      hooks:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.RestoreHooks
        description: >-
          Hooks represent custom actions that should be executed during or post
          restore.
    description: The restore spec.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Spec.ExistingResourcePolicyType:
    type: string
    enum:
      - POLICY_TYPE_NONE
      - POLICY_TYPE_UPDATE
    default: POLICY_TYPE_NONE
    description: |-
      Helps specify restore behaviour for kubernetes resources.

       - POLICY_TYPE_NONE: Do not overwrite the resource in cluster with the one in backup whether changed/unchanged.
       - POLICY_TYPE_UPDATE: Attempt a patch on the changed resources.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Status.Phase
        description: The current state of the Restore.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this backup object.

          The description of the conditions is as follows:

          - "Scheduled" with status 'Unknown' indicates the restore request has
          not been applied to the cluster yet

          - "Scheduled" with status 'False' indicates the request could not be
          forwarded to the cluster (e.g. intent generation failure)

          - "Scheduled" with status 'True' and "Ready" with status 'Unknown'
          indicates the restore create / delete intent has been applied /
          deleted but not yet acted upon

          - "Ready" with status 'True' indicates the the creation of restore is
          complete

          - "Ready" with status 'False' indicates the the creation of restore is
          in error state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Status.Phase
        description: A list of available phases for restore object.
      validationErrors:
        type: array
        items:
          type: string
        description: The list all validation errors (if applicable).
      warnings:
        type: integer
        format: int32
        description: >-
          The count of all warning messages that were generated during execution
          of the restore.

          The actual warnings are stored in object storage.
      errors:
        type: integer
        format: int32
        description: >-
          The count of all error messages that were generated during execution
          of the restore.

          The actual errors are stored in object storage.
      failureReason:
        type: string
        description: An error that caused the entire restore to fail.
      completionTime:
        type: string
        format: date-time
        description: The timestamp when a restore was completed.
      progress:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Progress
        description: The restore progress so far.
      restoreLogsUrl:
        type: string
        description: The URL to download the restore logs.
      restoreResultsUrl:
        type: string
        description: The URL to download the restore results.
      gatherRestoreResourcesStatus:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.GatherRestoreResourcesStatus
        description: >-
          This holds the status of the action to collect restore resources which
          is triggered on the cluster once the restore completes.
      volumeRestores:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestore
        description: Information about volumes restored.
    description: Status of the restore resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - NEW
      - FAILEDVALIDATION
      - INPROGRESS
      - COMPLETED
      - PARTIALLY_FAILED
      - FAILED
      - PENDING_DELETE
      - DELETING
    default: PHASE_UNSPECIFIED
    description: |-
      The lifecycle phases of restore.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the restore object is being processed by the service (TMC).
       - CREATING: Creating phase is set when restore is being created on the cluster.
       - NEW: The restore has been created but not yet processed by velero.
       - FAILEDVALIDATION: The restore has failed the velero controller's validations and therefore will not run.
       - INPROGRESS: The restore is currently executing by velero.
       - COMPLETED: The restore has finished executing. Any relevant warnings or errors will be captured in the Status.
       - PARTIALLY_FAILED: PhasePartiallyFailed means the restore has run to completion
      but encountered 1+ errors restoring individual items.
       - FAILED: The restore was unable to execute. The failing error is recorded in status.FailureReason.
       - PENDING_DELETE: Pending delete is set when the restore delete is being processed by the service.
       - DELETING: The phase when restore is being deleted.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestore:
    type: object
    properties:
      pvcName:
        type: string
        description: The name of the persistent volume claim.
      pvcNamespace:
        type: string
        description: The namespace of the persistent volume claim.
      pvName:
        type: string
        description: The name of the persistent volume.
      scName:
        type: string
        description: The name of the storage class used by the persistent volume.
      size:
        type: string
        format: int64
        description: The complete size of the snapshot in bytes.
      method:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestore.VolumeRestoreMethod
        description: The method used to perform the volume restore.
      podInfo:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestorePodInfo
        description: |-
          Additional metadata about the pod where the volume was mounted.
          Only present for file system restores.
    description: VolumeRestore contains metadata about a particular volume restored.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestore.VolumeRestoreMethod:
    type: string
    enum:
      - METHOD_UNSPECIFIED
      - RESTIC
      - CSI_VOLUME_SNAPSHOT
      - KOPIA
      - DATA_MOVER
    default: METHOD_UNSPECIFIED
    description: |-
      The possible methods used to perform a volume restore.

       - METHOD_UNSPECIFIED: Unspecified method.
       - RESTIC: A file system restore using velero's restic integration.
       - CSI_VOLUME_SNAPSHOT: A volume snapshot performed by the CSI driver.
       - KOPIA: A file system restore using velero's kopia integration.
       - DATA_MOVER: A restore using a volume snapshot copied from the target location.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestorePodInfo:
    type: object
    properties:
      podName:
        type: string
        description: The name of the pod where the volume was mounted.
      podNamespace:
        type: string
        description: The namespace of the pod where the volume was mounted.
      podVolumeName:
        type: string
        description: The name of the volume as depicted in the pod manifest.
      restorePhase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestorePodInfo.PodVolumeRestorePhase
        description: The phase of the pod volume restore.
    description: >-
      VolumeRestorePodInfo contains additional metadata about the pod where a
      restored volume was mounted.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.restore.VolumeRestorePodInfo.PodVolumeRestorePhase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    default: PHASE_UNSPECIFIED
    description: |-
      The possible phases pod volume restore can be in.

       - PHASE_UNSPECIFIED: Default phase.
       - IN_PROGRESS: The pod volume restore is in progress.
       - COMPLETED: The pod volume restore has completed successfully.
       - FAILED: The pod volume restore has completed unsuccessfully.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.CreateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule
        description: Schedule to create.
    description: Request to create a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.CreateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule
        description: Schedule created.
    description: Response from creating a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.DeleteScheduleResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of this Schedule.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.GetScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule
        description: Schedule returned.
    description: Response from getting a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.ListSchedulesResponse:
    type: object
    properties:
      schedules:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule
        description: List of schedules.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Schedules.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.FullName
        description: Full name for the Schedule.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the schedule object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Spec
        description: Spec for the schedule.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Status
        description: Status of the schedule.
    description: A pre-scheduled or periodic Backup that should be run.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Spec:
    type: object
    properties:
      template:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.backup.Spec
        description: The definition of the Backup to be run on the provided schedule.
      schedule:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.schedule.Schedule'
        description: Rate at which the backup is to be run.
      paused:
        type: boolean
        description: Paused specifies whether the schedule is paused or not.
    description: The schedule spec.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Status.Phase
        description: The current phase of the Schedule.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this backup object.

          The description of the conditions is as follows:

          - "Scheduled" with status 'Unknown' indicates the schedule request has
          not been applied to the cluster yet

          - "Scheduled" with status 'False' indicates the request could not be
          forwarded to the cluster (e.g. intent generation failure)

          - "Scheduled" with status 'True' and "Ready" with status 'Unknown'
          indicates the schedule create / delete intent has been applied /
          deleted but not yet acted upon

          - "Ready" with status 'True' indicates the the creation of schedule is
          complete

          - "Ready" with status 'False' indicates the the creation of schedule
          is in error state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Status.Phase
        description: A list of available phases for schedule object.
      lastBackup:
        type: string
        format: date-time
        description: The last time a Backup was run for this schedule.
      validationErrors:
        type: array
        items:
          type: string
        description: The list of all validation errors (if applicable).
    description: Status of the schedule resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - NEW
      - ENABLED
      - FAILEDVALIDATION
      - PENDING_DELETE
      - DELETING
      - UPDATING
      - PAUSED
    default: PHASE_UNSPECIFIED
    description: |-
      The lifecycle phase of a schedule backup.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the schedule object is being processed by the service (TMC).
       - CREATING: Creating phase is set when schedule is being created on the cluster.
       - NEW: The schedule has been created but not yet processed by velero.
       - ENABLED: The schedule has been validated and will now be triggering backups according to the schedule spec.
       - FAILEDVALIDATION: The schedule has failed the velero controller's validations and therefore will not trigger backups.
       - PENDING_DELETE: Pending delete is set when the object deletion is being processed by the service.
       - DELETING: The phase when schedule is being deleted.
       - UPDATING: The phase when schedule is being updated.
       - PAUSED: The phase when schedule is being paused.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.UpdateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule
        description: Update Schedule.
    description: Request to update (overwrite) a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.UpdateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Schedule
        description: Schedule updated.
    description: Response from updating a Schedule.
  vmware.tanzu.manage.v1alpha1.common.schedule.Schedule:
    type: object
    properties:
      rate:
        type: string
        description: A Cron expression defining when to run a task.
    description: Holds the schedule options for scheduling a task.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.AWSConfiguration:
    type: object
    properties:
      region:
        type: string
        description: The region of the volume snapshot.
    description: AWS specific volume snapshot configuration details.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.AzureConfiguration:
    type: object
    properties:
      apiTimeout:
        type: string
        description: Timeout for Azure API requests from Velero.
      resourceGroup:
        type: string
        description: The resource group of the cluster resources in Azure.
      subscriptionId:
        type: string
        description: The ID of subscription in which cluster resources exist in Azure.
    description: Azure specific volume snapshot configuration details.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of this Snapshot Location.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.GetSnapshotLocationResponse:
    type: object
    properties:
      snapshotLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.SnapshotLocation
        description: SnapshotLocation returned.
    description: Response from getting a SnapshotLocation.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.ListSnapshotLocationsResponse:
    type: object
    properties:
      snapshotLocations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.SnapshotLocation
        description: List of snapshotlocations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing SnapshotLocations.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.SnapshotLocation:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.FullName
        description: Full name for the SnapshotLocation.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the snapshot location object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Spec
        description: Spec for the snapshot location.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Status
        description: Status of the snapshot location.
    description: The snapshot location assigned to a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Spec:
    type: object
    properties:
      volumeProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Spec.VolumeProvider
        description: The provider of the snapshot location.
      config:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.VolumeProviderSpecificConfig
        description: Provider-specific configuration fields.
      credentialName:
        type: string
        description: The name of secret to be used to access the bucket.
    description: The snapshot location spec.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Spec.VolumeProvider:
    type: string
    enum:
      - VOLUME_PROVIDER_UNSPECIFIED
      - AWS
      - AZURE
    default: VOLUME_PROVIDER_UNSPECIFIED
    description: |-
      Available volume provider for snapshot location.

       - VOLUME_PROVIDER_UNSPECIFIED: Unspecified volume provider.
       - AWS: AWS.
       - AZURE: Azure.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Status.Phase
        description: The current state of the snapshot location.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this snapshot location object.

          The description of the conditions is as follows:

          - "Scheduled" with status 'Unknown' indicates the snapshot location
          request has not been applied to the cluster yet

          - "Scheduled" with status 'False' indicates the request could not be
          forwarded to the cluster (e.g. intent generation failure)

          - "Scheduled" with status 'True' and "Ready" with status 'Unknown'
          indicates the create / delete intent has been applied / deleted but
          not yet acted upon

          - "Ready" with status 'True' indicates the the snapshot location is
          ready and available to use

          - "Ready" with status 'False' indicates the the snapshot location is
          in error state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Status.Phase
        description: A list of available phases for snapshot location object.
    description: Status of the snapshot location resource.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - AVAILABLE
      - UNAVAILABLE
      - PENDING_DELETE
      - DELETING
    default: PHASE_UNSPECIFIED
    description: |-
      The lifecycle phase of a snapshot location.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the snapshot location object is being processed by the service (TMC).
       - CREATING: Creating phase is set when snapshot location is being created on the cluster.
       - AVAILABLE: The location is available to read and write from.
       - UNAVAILABLE: The location is unavailable for read and write from.
       - PENDING_DELETE: Pending delete is set when the snapshot location is being deleted by the service.
       - DELETING: The phase when the snapshot location is being deleted by extension.
  vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.VolumeProviderSpecificConfig:
    type: object
    properties:
      awsConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.AWSConfiguration
        description: AWS specific snapshot config.
      azureConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.snapshotlocation.AzureConfiguration
        description: Azure specific snapshot config.
    description: >-
      Provider specific configuration for volume snapshot location
      (https://github.com/heptio/velero/blob/master/docs/api-types/volumesnapshotlocation.md).
  vmware.tanzu.manage.v1alpha1.cluster.extension.Extension:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.FullName'
        description: Full name for the Extension.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Extension object.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Status'
        description: Status of the Extension.
    description: Cluster addons for the platform.
  vmware.tanzu.manage.v1alpha1.cluster.extension.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster.
      clusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Unique identifier of this Extension.
    description: |-
      Full name of the Extension. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.extension.GetExtensionResponse:
    type: object
    properties:
      extension:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Extension'
        description: Extension returned.
    description: Response from getting an Extension.
  vmware.tanzu.manage.v1alpha1.cluster.extension.Health:
    type: string
    enum:
      - HEALTH_UNSPECIFIED
      - HEALTHY
      - UNHEALTHY
    default: HEALTH_UNSPECIFIED
    description: |-
      Health status of the deployed extension.

       - HEALTH_UNSPECIFIED: Unknown.
       - HEALTHY: Healthy.
       - UNHEALTHY: Unhealthy.
  vmware.tanzu.manage.v1alpha1.cluster.extension.ListExtensionsResponse:
    type: object
    properties:
      extensions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Extension
        description: List of extensions.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Extensions.
  vmware.tanzu.manage.v1alpha1.cluster.extension.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - ROLLING_BACK
      - ROLLED_BACK
      - PROCESSING
      - PROCESSED
      - FAILED
      - PENDING
      - OUT_OF_SYNC
    default: PHASE_UNSPECIFIED
    description: |-
      Extension lifecycle phase.

       - PHASE_UNSPECIFIED: Unspecified  phase.
       - ROLLING_BACK: Rolling back phase.
       - ROLLED_BACK: Rolled back phase.
       - PROCESSING: Processing phase.
       - PROCESSED: Processed phase.
       - FAILED: Failed phase.
       - PENDING: Pending phase.
       - OUT_OF_SYNC: Out Of Sync phase.
  vmware.tanzu.manage.v1alpha1.cluster.extension.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.extension.Status:
    type: object
    properties:
      version:
        type: string
        description: Version of the extension.
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Phase'
        description: Phase of the extension.
      health:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Health'
        description: Health of the deployed extension.
      previousVersion:
        type: string
        description: Previous version of the extension.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The Conditions attached to an extension resource.
    description: The Extension status.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.ContinuousDelivery:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.FullName
        description: Full name for the Continuous Delivery.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Continuous Delivery object.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.Status
        description: Status for the Continuous Delivery.
    description: Represents continuous delivery feature configuration for a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.CreateContinuousDeliveryRequest:
    type: object
    properties:
      continuousDelivery:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.ContinuousDelivery
        description: ContinuousDelivery to create.
    description: Request to create a ContinuousDelivery.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.CreateContinuousDeliveryResponse:
    type: object
    properties:
      continuousDelivery:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.ContinuousDelivery
        description: ContinuousDelivery created.
    description: Response from creating a ContinuousDelivery.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.DeleteContinuousDeliveryResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a ContinuousDelivery.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
    description: Full name of the Continuous Delivery.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.ListContinuousDeliveriesResponse:
    type: object
    properties:
      continuousDeliveries:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.ContinuousDelivery
        description: List of continuousdeliveries.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ContinuousDeliveries.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.continuousdelivery.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Continuous Delivery resource.
    description: Status of the Continuous Delivery.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.CreateHelmRequest:
    type: object
    properties:
      helm:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.Helm'
        description: Helm to create.
    description: Request to create a Helm.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.CreateHelmResponse:
    type: object
    properties:
      helm:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.Helm'
        description: Helm created.
    description: Response from creating a Helm.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.DeleteHelmResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Helm.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
    description: Full name of the Helm.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.Helm:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.FullName
        description: Full name for the helm.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the helm object.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.Status'
        description: Status for the helm.
    description: Represents helm feature for a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.ListHelmsResponse:
    type: object
    properties:
      helms:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.Helm'
        description: List of helms.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Helms.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.helm.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Helm feature resource.
    description: Status of the Helm.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.ApplySourceSecretRequest:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret to apply.
    description: Request to apply a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.ApplySourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret applied.
    description: Response from applying a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of Source Secret.
    description: Full name of the Source Secret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.FullName
        description: Full name for the Source Secret.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Source Secret object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.Spec
        description: Spec for the Source Secret.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.Status
        description: Status for the Source Secret.
    description: >-
      SourceSecret represents a credential used to authenticate to a fluxcd
      source such as GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecretType:
    type: string
    enum:
      - UNSPECIFIED
      - USERNAME_PASSWORD
      - SSH
      - CACert
    default: UNSPECIFIED
    description: |-
      Source Secret Type represents the type of the secret.

       - UNSPECIFIED: Unspecified type for forward compatibility.
       - USERNAME_PASSWORD: Username Password type.
       - SSH: SSH type.
       - CACert: CA Cert type
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.Spec:
    type: object
    properties:
      sourceSecretType:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecretType
        description: Type of Source Secret(username-password or SSH or CACert).
      data:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.account.credential.type.keyvalue.Spec
        description: Data is the source credential in the form of key-value.
    description: Spec of the Source Secret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.Status:
    type: object
    properties:
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.Status'
        description: Status of the service secret.
    description: Status of the Source Secret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.CreateSourceSecretRequest:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret to create.
    description: Request to create a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.CreateSourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret created.
    description: Response from creating a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.DeleteSourceSecretResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.GetSourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret returned.
    description: Response from getting a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.ListSourceSecretsResponse:
    type: object
    properties:
      sourceSecrets:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: List of sourcesecrets.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing SourceSecrets.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.UpdateSourceSecretRequest:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: Update SourceSecret.
    description: Request to update (overwrite) a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.UpdateSourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret updated.
    description: Response from updating a SourceSecret.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CISSpec:
    type: object
    properties:
      cisTargets:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CISSpec.Targets
        description: List of Targets that the CIS plugin will run against.
    description: CIS security inspection scan specification.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CISSpec.Targets:
    type: string
    enum:
      - TARGETS_UNSPECIFIED
      - LEADER_NODE
      - NODE
      - ETCD
      - CONTROL_PLANE
      - POLICIES
    default: TARGETS_UNSPECIFIED
    description: |-
      Targets is an enumeration of targets that CIS can run against.

       - TARGETS_UNSPECIFIED: Unspecified Target refers to an unspecified target.
       - LEADER_NODE: Target is the leader Node.
       - NODE: Target is all nodes apart from the control plane nodes.
       - ETCD: Target is the ETCD.
       - CONTROL_PLANE: Target is the control plane components.
       - POLICIES: Target is the policies on the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ConformanceSpec:
    type: object
    description: Conformance inspection scan specification.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CreateScanRequest:
    type: object
    properties:
      scan:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Scan
        description: Scan to create.
    description: Request to create a Scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CreateScanResponse:
    type: object
    properties:
      scan:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Scan
        description: Scan created.
    description: Response from creating a Scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.DeleteScanResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.E2ESpec:
    type: object
    description: E2E inspection scan specification.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: Org ID of the inspection scan.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of the inspection scan.
    description: FullName of the inspection scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.GetScanResponse:
    type: object
    properties:
      scan:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Scan
        description: Scan returned.
    description: Response from getting a Scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ListScansResponse:
    type: object
    properties:
      scans:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Scan
        description: List of scans.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Scans.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.LiteSpec:
    type: object
    description: Lite inspection scan specification.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ProgressInfo:
    type: object
    properties:
      totalNumTests:
        type: string
        format: int64
        description: Number of tests run as part of the inspection scan.
      numTestsCompleted:
        type: string
        format: int64
        description: Number of tests completed.
    description: Progress information about the inspection scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Report:
    type: object
    properties:
      info:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ReportInfo
        description: Meta-info of this report.
      diagnostic:
        type: object
        additionalProperties:
          type: string
        description: Map of all the diagnostic files in the report tarball.
      results:
        type: object
        additionalProperties:
          type: string
        description: Map of all the files ending in .xml.
      meta:
        type: object
        additionalProperties:
          type: string
        description: >-
          Map of files with metadata information about the scan (Config, query
          time, run).
      hosts:
        type: object
        additionalProperties:
          type: string
        description: Map of files containing host information (config, healthz).
      tarballDownloadUrl:
        type: string
        description: Download URL for the .tar.gz file with this full report.
    description: Encapsulates the data for a Inspection scan run.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ReportInfo:
    type: object
    properties:
      reportId:
        type: string
        description: Internal ID of the run.
      runDatetime:
        type: string
        format: date-time
        description: Date and time of the run.
      scanType:
        type: string
        description: The scan type.
      numInspections:
        type: string
        format: int64
        description: Total number of inspections as part of the scan.
      numFailed:
        type: string
        format: int64
        description: Number of inspections failed.
      result:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ReportInfo.Result
        description: >-
          Result is a success / failure condition based on the result of the
          scan.
      numWarning:
        type: string
        format: int64
        description: Number of inspection tests in warning state.
      progressInfo:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ProgressInfo
        description: Progress information about the inspection scan.
      kubeServerVersion:
        type: string
        description: Kubernetes Server Version.
    description: |-
      Contains the metadata for a single report
      (e.g. report id, etc).
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ReportInfo.Result:
    type: string
    enum:
      - RESULT_UNSPECIFIED
      - SUCCESS
      - FAILURE
      - WARNING
    default: RESULT_UNSPECIFIED
    description: |-
      Result describes the status of the inspection.

       - RESULT_UNSPECIFIED: Unspecified result indicates the scan result is unknown.
       - SUCCESS: Success - to be used if all the tests are part of the scan are successful.
       - FAILURE: Failure - to indicate that one or more test as part of the scan failed.
       - WARNING: Warning - to indicate that one or more test as part of the scan has a warning error.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Scan:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the inspection object.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.FullName
        description: Full name for the inspection scan.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Spec
        description: Inspection Scan spec.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Status
        description: Status of the Inspection Scan object.
    description: >-
      Running an inspection scan verifies whether the cluster is certified
      conformant or security compliant.

      It is a diagnostic tool that helps you understand the state of a cluster
      by running a set of tests and

      provides clear informative reports about the cluster.
    title: Run an on demand inspection scan on a cluster
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Spec:
    type: object
    properties:
      conformanceSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.ConformanceSpec
        description: Conformance inspection scan specification.
      e2eSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.E2ESpec
        description: E2E inspection scan specification.
      liteSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.LiteSpec
        description: Lite inspection scan specification.
      cisSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.CISSpec
        description: CIS security inspection scan specification.
    description: Spec of the inspection scan.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Status:
    type: object
    properties:
      report:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Report
        description: Report details.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          Condition 'Scheduled' with Status 'Unknown' indicates that the
          inspection is pending

          Condition 'Scheduled' with 'True' and Condition 'Ready' with 'Unknown'
          indicates that the inspection is running

          Condition 'Ready' with 'True' indicates that the inspection is
          complete

          Condition 'Ready' with 'False' indicates that the inspection is in
          error state.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Status.Phase
        description: >-
          Phase of the inspection scan based on conditions. If state is
          'PHASE_UNSPECIFIED', use conditions to

          interpret the state of the inspection.
      phaseInfo:
        type: string
        description: Additional information e.g., reason for ERROR state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Status.Phase
        description: Available phases of the inspection scan resource.
    description: Status of the scan inspection.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - RUNNING
      - PENDING
      - COMPLETE
      - UPLOAD
      - FINISH
      - STOP
      - ERROR
      - QUEUED
      - CANCEL
    default: PHASE_UNSPECIFIED
    description: |-
      Phase describes the phase] of the inspection scan.

       - PHASE_UNSPECIFIED: Unknown - to be used if status of the current inspection scan is unknown.
       - RUNNING: Running - to indicate the inspection scan is currently running.
       - PENDING: Pending - to indicate that the inspectionscan  is waiting to be started.
       - COMPLETE: Complete - to indicate that the sonobuoy open source has completed the inspection scan.
       - UPLOAD: Upload - to indicate that the inspection scan results are being uploaded to S3.
       - FINISH: Finish - to indicate that the inspection has completed inspection + uploaded results to S3 successfully.
       - STOP: Stop - to stop the sonobuoy inspection.
       - ERROR: Error - to indicate that an error had occurred during the inspection.
       - QUEUED: Queued - to indicate that the inspection is queued and waiting to be applied.
       - CANCEL: CANCEL - to indicate that the inspection is canceled.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.CreateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Schedule
        description: Schedule to create.
    description: Request to create a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.CreateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Schedule
        description: Schedule created.
    description: Response from creating a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.DeleteScheduleResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of ManagementCluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of Inspection Schedule.
    description: FullName for the inspection schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.GetScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Schedule
        description: Schedule returned.
    description: Response from getting a Schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.ListSchedulesResponse:
    type: object
    properties:
      schedules:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Schedule
        description: List of schedules.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Schedules.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Schedule:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the inspection schedule object.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.FullName
        description: Full name for the Inspection Schedule.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Spec
        description: Schedule spec.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Status
        description: Status of the Schedule object.
    description: |-
      An Schedule a creates an inspection schedule.
      This is used to provide a schedule to run scans on the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Spec:
    type: object
    properties:
      inspectionSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.scan.Spec
        description: Inspection definition to create an inspection schedule.
      rate:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.schedule.Schedule'
        description: Rate at which the inspection schedule is run.
    description: Spec for the inspection schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Status:
    type: object
    properties:
      message:
        type: string
        description: Message about the status of the inspection schedule.
      lastRunDatetime:
        type: string
        format: date-time
        description: Date and time of the last run.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          Condition 'Scheduled' with Status 'Unknown' indicates that the
          schedule is waiting to be applied

          Condition 'Scheduled' with 'True' and Condition 'Ready' with 'Unknown'
          indicates that the schedule is applied but hasn't run yet.

          Condition 'Ready' with 'True' indicates that the scheduling has been
          executing successfully

          Condition 'Ready' with 'False' indicates that the schedule is in error
          state. This would be because there are too many queued inspects or the
          extension isnt able to apply the CR.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Status.Phase
        description: >-
          Phase of the inspection schedule based on conditions. If state is
          'PHASE_UNSPECIFIED', use conditions to

          interpret the state of the schedule.
      phaseInfo:
        type: string
        description: Additional information e.g., reason for ERROR state.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Status.Phase
        description: Available phases of the inspection schedule resource.
    description: Status of the inspection schedule.
  vmware.tanzu.manage.v1alpha1.cluster.inspection.schedule.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - RUNNING
      - PENDING
      - COMPLETE
      - ERROR
      - CANCEL
    default: PHASE_UNSPECIFIED
    description: |-
      Phase describes the phase of the inspection schedule.

       - PHASE_UNSPECIFIED: Unknown - to be used if status of the current inspection schedule is unknown.
       - RUNNING: Running - to indicate the schedule is currently running.
       - PENDING: Pending - to indicate that the schedule is waiting to be started.
       - COMPLETE: Complete - to indicate that the inspection schedule has completed.
       - ERROR: Error - to indicate that an error had occurred during the schedule.
       - CANCEL: CANCEL - to indicate that the schedule is canceled.
  vmware.tanzu.manage.v1alpha1.cluster.integration.CreateIntegrationRequest:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Integration to create.
    description: Request to create an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.CreateIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Integration created.
    description: Response from creating an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.DeleteIntegrationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Name of the cluster provisioner.
      clusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of the integration.
    description: >-
      Full name of the cluster integration configuration. This includes the
      object name along

      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.integration.GetIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Integration returned.
    description: Response from getting an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.Indicator:
    type: string
    enum:
      - INDICATOR_UNSPECIFIED
      - OK
      - ATTENTION_REQUIRED
    default: INDICATOR_UNSPECIFIED
    description: |-
      Indicator is the value of the abstracted statuses.

       - INDICATOR_UNSPECIFIED: Default indicator.
       - OK: OK indicates everything is good.
       - ATTENTION_REQUIRED: ATTENTION_REQUIRED indicates something is bad / requires attention of user.
  vmware.tanzu.manage.v1alpha1.cluster.integration.Integration:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.FullName
        description: Full name for the Cluster integration.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Cluster policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Spec'
        description: Spec for the Cluster integration configuration.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Status'
        description: Status for the Integration.
    description: An integration configuration for a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.integration.ListIntegrationsResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: List of integrations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Integrations.
  vmware.tanzu.manage.v1alpha1.cluster.integration.Operator:
    type: object
    properties:
      version:
        type: string
        description: Version of the extension.
      state:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Phase'
        description: Phase of the extension.
      health:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.extension.Health'
        description: Health of the deployed extension.
      previousVersion:
        type: string
        description: Previous version of the extension.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The Conditions attached to an extension resource.
    description: Status of the Integration Partner's operator deployed by TMC.
  vmware.tanzu.manage.v1alpha1.cluster.integration.PatchIntegrationRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.FullName
        description: Integration to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.PatchIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Integration patched.
    description: Response from patching an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - UPDATING
      - READY
      - ERROR
      - DELETING
      - PENDING
    default: PHASE_UNSPECIFIED
    description: |-
      Integration Lifecycle Phase.

       - PHASE_UNSPECIFIED: Unspecified  phase.
       - CREATING: CREATING phase when process for adding integration to cluster is started.
       - UPDATING: Updating phase when need to update configuration for the added integration.
       - READY: READY phase when integration is added to cluster.
       - ERROR: Error phase when there is any issue during addition/update/deletion of the integration.
       - DELETING: DELETING phase when when process for removing integration to cluster is started.
       - PENDING: PENDING phase when the process is waiting for changes in the cluster after addition/update of the integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.integration.Spec:
    type: object
    properties:
      configurations:
        type: object
        additionalProperties:
          type: object
        description: >-
          Configurations. The expected input schema can be found in
          v1alpha1/integration API.
      secrets:
        type: object
        additionalProperties:
          type: string
        description: >-
          Secrets are for sensitive configurations. The values are write-only
          and will be masked when read.
      credentialName:
        type: string
        description: >-
          Credential name is the name of the Organization's Account Credential
          to be used instead of secrets to add an integration on this cluster.
      version:
        type: string
        description: >-
          Version of the integration which is input for upgrade or rollback
          operation.
    description: The integration configuration spec.
  vmware.tanzu.manage.v1alpha1.cluster.integration.Status:
    type: object
    properties:
      clusterViewUrl:
        type: string
        description: Deep link to integration service that shows details for this cluster.
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Phase'
        description: Phase of the integration.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions that help identify the phase.
      workload:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Workload
        description: Status of the Integration Partner's workloads.
      operator:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Operator
        description: Status of the Integration Partner's Operator deployed by TMC.
      tmcAdapter:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Indicator
        description: System indicator abstracts Phase and Operator in Status.
      integrationWorkload:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Indicator
        description: >-
          Integration Workload backed indicator abstracts workload in Status.
          This indicator indicates the state of

          the workload deployed by the Integration Partner team. In case of
          issues with this indicator, Integration Partner

          team should be able to help resolve the issues related to this
          indicator.
      version:
        type: string
        description: Existing version of the integration.
    description: Status of the integration configuration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.UpdateIntegrationRequest:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Update Integration.
    description: Request to update (overwrite) an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.UpdateIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Integration updated.
    description: Response from updating an Integration.
  vmware.tanzu.manage.v1alpha1.cluster.integration.WatchIntegrationsResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.integration.Integration
        description: Integration event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Integrations.
  vmware.tanzu.manage.v1alpha1.cluster.integration.Workload:
    type: object
    properties:
      version:
        type: string
        description: Version of the application.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the workloads that supports readiness and health.
    description: Status of the Integration Partner's workloads.
  vmware.tanzu.manage.v1alpha1.cluster.kubeconfig.CliType:
    type: string
    enum:
      - TMC_CLI
      - TANZU_CLI
      - TANZU_OPERATIONS_CLI
    default: TMC_CLI
    description: >-
      CliType will help identify the appropriate kubeconfig to be returned for
      CLI application.

       - TMC_CLI: TMC_CLI platform.
       - TANZU_CLI: TANZU_CLI platform.
       - TANZU_OPERATIONS_CLI: TANZU_OPERATIONS_CLI.
  vmware.tanzu.manage.v1alpha1.cluster.kubeconfig.GetKubeconfigResponse:
    type: object
    properties:
      kubeconfig:
        type: string
        description: Cluster Kubeconfig.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.kubeconfig.GetKubeconfigResponse.Status
        description: Kubeconfig status.
      msg:
        type: string
        description: Provides the detail message for PENDING/UNAVAILABLE status.
      endpoint:
        type: string
        description: Provides the server endpoint used in the kubeconfig.
    description: Response with cluster kubeconfig.
  vmware.tanzu.manage.v1alpha1.cluster.kubeconfig.GetKubeconfigResponse.Status:
    type: string
    enum:
      - STATUS_UNSPECIFIED
      - CREATING
      - PENDING
      - READY
      - UNAVAILABLE
    default: STATUS_UNSPECIFIED
    description: |-
      Kubeconfig status types.

       - STATUS_UNSPECIFIED: Default value for the enum.
       - CREATING: CREATING indicates either the cluster or TMC resources on the cluster are not ready yet.
       - PENDING: PENDING indicates kubeconfig data is not yet available from the cluster.
       - READY: READY indicates kubeconfig is ready to use.
       - UNAVAILABLE: UNAVAILABLE indicates kubeconfig cannot be provided for this cluster.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.ApplyGitRepositoryRequest:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository to apply.
    description: Request to apply a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.ApplyGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository applied.
    description: Response from applying a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Repository.
    description: Full name of the Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitImplementation:
    type: string
    enum:
      - GO_GIT
      - LIB_GIT2
    default: GO_GIT
    description: |-
      GitImplementation specifies which client library implementation to use.

       - GO_GIT: GO_GIT specifies go-git library to use.
       - LIB_GIT2: LIB_GIT2 specifies libgit2 library to use which supports git v2 protocol.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.FullName
        description: Full name for the Repository.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Repository object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Spec
        description: Spec for the Repository.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Status
        description: Status for the Repository.
    description: Represents a gitrepository source to sync configurations from.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Reference:
    type: object
    properties:
      branch:
        type: string
        description: Branch from git to checkout.
      tag:
        type: string
        description: Tag from git to checkout. Takes precedence over branch.
      semver:
        type: string
        description: >-
          SemVer expression to checkout from git tags. Takes precendence over
          tag.
      commit:
        type: string
        description: >-
          Commit SHA to checkout. Takes precedence over all other reference
          fields.

          When GitRepository.spec.git_implementation is `go-git`, this can be
          combined

          with branch to shallow clone branch in which the commit is expected to
          exist.
    description: Reference specifies git reference to resolve and checkout.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Spec:
    type: object
    properties:
      url:
        type: string
        description: URL of the git repository.
      secretRef:
        type: string
        description: Reference to the secret.
      interval:
        type: string
        description: Interval at which to check gitrepository for updates.
      ref:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Reference
        description: Reference specifies git reference to resolve.
      gitImplementation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitImplementation
        description: >-
          GitImplementation specifies which client library implementation to
          use.
    description: Spec of the Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The conditions attached to this Repository object.
    description: Status of the Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.CreateGitRepositoryRequest:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository to create.
    description: Request to create a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.CreateGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository created.
    description: Response from creating a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.DeleteGitRepositoryResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GetGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository returned.
    description: Response from getting a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.ListGitRepositoriesResponse:
    type: object
    properties:
      gitRepositories:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: List of gitrepositories.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing GitRepositories.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.UpdateGitRepositoryRequest:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: Update GitRepository.
    description: Request to update (overwrite) a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.UpdateGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository updated.
    description: Response from updating a GitRepository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ApplyReleaseRequest:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Release to apply.
    description: Request to apply a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ApplyReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Release applied.
    description: Response from applying a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ChartRef:
    type: object
    properties:
      repositoryType:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.RepositoryType
        description: Repository type.
      repositoryName:
        type: string
        description: Repository name.
      chart:
        type: string
        description: Name/path of the chart in the helm/git repository.
      version:
        type: string
        description: Chart version, applicable for helm repository type.
      repositoryNamespace:
        type: string
        description: Repository namespace.
    description: ChartRef of the helm release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Release.
    description: Full name of the Helm Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.GeneratedResources:
    type: object
    properties:
      clusterRoleName:
        type: string
        description: Name of the cluster role used for Helm Release.
      serviceAccountName:
        type: string
        description: Name of the service account used for Helm Release.
      roleBindingName:
        type: string
        description: Name of the role binding used for Helm Release.
    description: Generated Resources for Helm Release on the cluster by TMC.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.FullName
        description: Full name for the Release.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Release object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Spec
        description: Spec for the Release.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Status
        description: Status for the Release.
    description: Instance of Helm Chart.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.RepositoryType:
    type: string
    enum:
      - UNSPECIFIED
      - HELM
      - GIT
    default: UNSPECIFIED
    description: |-
      RepositoryType specifies the type of repository.

       - UNSPECIFIED: Repository type is unspecified.
       - HELM: Helm repository.
       - GIT: Git repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Spec:
    type: object
    properties:
      chartRef:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ChartRef
        description: Reference to the chart which will be installed.
      interval:
        type: string
        description: Interval at which to reconcile the Helm release.
      inlineConfiguration:
        type: string
        description: Inline values in yaml format.
      targetNamespace:
        type: string
        description: Name of target namespace.
    description: Spec of the Helm Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Helm Release resource.
      generatedResources:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.GeneratedResources
        description: >-
          Kuberenetes RBAC resources and service account created on the cluster
          by TMC for Helm Release.
    description: Status of the Helm Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.CreateReleaseRequest:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Release to create.
    description: Request to create a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.CreateReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Release created.
    description: Response from creating a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.DeleteReleaseResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.GetReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Release returned.
    description: Response from getting a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.ListReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: List of releases.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Releases.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.UpdateReleaseRequest:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Update Release.
    description: Request to update (overwrite) a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.UpdateReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Release
        description: Release updated.
    description: Response from updating a Release.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the helm repository.
    description: Full name of the helm repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.GetRepositoryResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Repository
        description: Repository returned.
    description: Response from getting a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.ListRepositoriesResponse:
    type: object
    properties:
      repositories:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Repository
        description: List of repositories.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Repositories.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Repository:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.FullName
        description: Full name for the artifact metadata.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the helm repository object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Spec
        description: Spec for the helm repository.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Status
        description: Status for the helm repository.
    description: Represents Helm Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Spec:
    type: object
    properties:
      url:
        type: string
        description: URL of helm repository.
    description: Spec of the helm repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.repository.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Helm Repository resource.
    description: Status of the Helm Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.ApplyKustomizationRequest:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization to apply.
    description: Request to apply a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.ApplyKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization applied.
    description: Response from applying a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Kustomization.
    description: Full name of the Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.FullName
        description: Full name for the Kustomization.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Kustomization object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Spec
        description: Spec for the Kustomization.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Status
        description: Status for the Kustomization.
    description: Represents configuration that needs to be applied to cluster.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.RepositoryReference:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace of the repository.
      name:
        type: string
        description: Name of the repository.
    description: Reference to the repository in same or different namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Spec:
    type: object
    properties:
      source:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.RepositoryReference
        description: Reference to the source from which the configurations will be applied.
      path:
        type: string
        description: Path within the source from which configurations will be applied.
      prune:
        type: boolean
        description: >-
          If true, the workloads will be deleted when the kustomization CR is
          deleted.
      interval:
        type: string
        description: Interval defines the interval at which to reconcile kustomization.
      targetNamespace:
        type: string
        description: >-
          TargetNamespace sets or overrides the namespaces of
          resources/kustomization yaml while applying on cluster.

          Namespace specified here must exist on cluster. It won't be created as
          a result of specifying here.
    description: Spec of the Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The conditions attached to this Kustomization object.
    description: Status of the Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.CreateKustomizationRequest:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization to create.
    description: Request to create a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.CreateKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization created.
    description: Response from creating a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.DeleteKustomizationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.GetKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization returned.
    description: Response from getting a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.ListKustomizationsResponse:
    type: object
    properties:
      kustomizations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: List of kustomizations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Kustomizations.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.UpdateKustomizationRequest:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Update Kustomization.
    description: Request to update (overwrite) a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.UpdateKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization updated.
    description: Response from updating a Kustomization.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.ApplyNamespaceRequest:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace to apply.
    description: Request to apply a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.ApplyNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace applied.
    description: Response from applying a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of ManagementCluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of Namespace.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.FullName'
        description: Full name for the Namespace.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Namespace object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Spec'
        description: Spec for the Namespace.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Status'
        description: Status for the Namespace.
    description: A managed Kubernetes namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.Spec:
    type: object
    properties:
      workspaceName:
        type: string
        description: Name of Workspace which this Namespace belongs to.
      attach:
        type: boolean
        description: Attach specifies whether the namespace is being created or attached.
    description: The Namespace spec.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Status.Phase
        description: Phase of the namespace.
      phaseInfo:
        type: string
        description: PhaseInfo contains additional info about the phase.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Status.Phase
        description: AvailablePhases is a list of available phases for namespace.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this namespace.


          Below are the conditions that will be set on this resource:

          - "Processing": Set to true when namespace is in the process of
          created or attached.

          - "Scheduled": Set to true when the intent to create/attach the
          namespace is complete.

          - "Ready": Set to true when the namespace is successfully
          created/attached.
    description: Status of the namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - ATTACHING
      - UPDATING
      - READY
      - ERROR
    default: PHASE_UNSPECIFIED
    description: |-
      The overall phase of the namespace.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - CREATING: Creating phase is set when the namespace is being created.
       - ATTACHING: Attaching phase is set when the namespace is being attached.
       - UPDATING: Updating phase is set when the namespace is being updated.
       - READY: Ready phase is set when the namespace is successfully created/attached/updated.
       - ERROR: Error phase is set when there was a failure while creating/attaching/updating the namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.GetNamespaceIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Namespace policy.
    description: GetNamespaceIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.PatchNamespaceIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.FullName'
        description: Namespace full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchNamespaceIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.PatchNamespaceIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchNamespaceIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.TestNamespaceIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.FullName'
        description: Namespace full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestNamespaceIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.TestNamespaceIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestNamespaceIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.UpdateNamespaceIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Namespace policy set.
    description: UpdateNamespaceIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.CreateNamespaceRequest:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace to create.
    description: Request to create a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.CreateNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace created.
    description: Response from creating a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.DeleteNamespaceResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.EnumerateNamespacesResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace object.
    description: Streamed response from enumerating Namespaces.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.GetNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace returned.
    description: Response from getting a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.ListNamespacesResponse:
    type: object
    properties:
      namespaces:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace
        description: List of namespaces.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Namespaces.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      workspaceName:
        type: string
        description: Filter by workspace name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.UpdateNamespaceRequest:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Update Namespace.
    description: Request to update (overwrite) a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.UpdateNamespaceResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace updated.
    description: Response from updating a Namespace.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.WatchNamespacesResponse:
    type: object
    properties:
      namespace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.Namespace'
        description: Namespace event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Namespaces.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.CreateSecretRequest:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret
        description: Secret to create.
    description: Request to create a Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.CreateSecretResponse:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret
        description: Secret created.
    description: Response from creating a Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.DeleteSecretResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Secret.
    description: Full name of the Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.GetSecretResponse:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret
        description: Secret returned.
    description: Response from getting a Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.ListSecretsResponse:
    type: object
    properties:
      secrets:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret
        description: List of secrets.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Secrets.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      secretType:
        type: string
        description: Filter by secret type; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.FullName
        description: Full name for the Secret.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Secret  object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Spec
        description: Spec for the Secret.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Status
        description: Status for the Secret.
    description: Represents Tanzu Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.SecretType:
    type: string
    enum:
      - SECRET_TYPE_UNSPECIFIED
      - SECRET_TYPE_DOCKERCONFIGJSON
      - SECRET_TYPE_OPAQUE
    default: SECRET_TYPE_UNSPECIFIED
    description: |-
      SecretType definition - indicates the kubernetes secret type.

       - SECRET_TYPE_UNSPECIFIED: SECRET_TYPE_UNSPECIFIED, Unspecified secret type (default).
       - SECRET_TYPE_DOCKERCONFIGJSON: SECRET_TYPE_DOCKERCONFIGJSON, Kubernetes secrets type : kubernetes.io/dockerconfigjson.
       - SECRET_TYPE_OPAQUE: SECRET_TYPE_OPAQUE, kubernetes secrets type : Opaque
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Spec:
    type: object
    properties:
      secretType:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.SecretType
        description: Type of the Secret.
      data:
        type: object
        additionalProperties:
          type: string
          format: byte
        description: Payload of the Secret.
    description: Spec of the Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Secret resource.
    description: Status of Secret resource.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.UpdateSecretRequest:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret
        description: Update Secret.
    description: Request to update (overwrite) a Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.UpdateSecretResponse:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Secret
        description: Secret updated.
    description: Response from updating a Secret.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.CreateSecretExportRequest:
    type: object
    properties:
      secretExport:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.SecretExport
        description: SecretExport to create.
    description: Request to create a SecretExport.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.CreateSecretExportResponse:
    type: object
    properties:
      secretExport:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.SecretExport
        description: SecretExport created.
    description: Response from creating a SecretExport.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.DeleteSecretExportResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a SecretExport.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: >-
          Name of the Secret Export (expected to share the same name of the
          secret).
    description: Full name of the Secret Export.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.GetSecretExportResponse:
    type: object
    properties:
      secretExport:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.SecretExport
        description: SecretExport returned.
    description: Response from getting a SecretExport.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.ListSecretExportsResponse:
    type: object
    properties:
      secretExports:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.SecretExport
        description: List of secretexports.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing SecretExports.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.SecretExport:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.FullName
        description: Full name for the Secret Export.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Secret Export object.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.Status
        description: Status for the Secret Export.
    description: Represents Tanzu Secret Export.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.secretexport.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Secret Export resource.
    description: Status of Secret Export resource.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.ApplyInstallRequest:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Install to apply.
    description: Request to apply an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.ApplyInstallResponse:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Install applied.
    description: Response from applying an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Package Install.
    description: Full name of the Package Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.GeneratedResources:
    type: object
    properties:
      clusterRoleName:
        type: string
        description: Name of the cluster role used for Package Install.
      serviceAccountName:
        type: string
        description: Name of the service account used for Package Install.
      roleBindingName:
        type: string
        description: Name of the role binding used for Package Install.
    description: Generated Resources for Package Install on the cluster by TMC.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.FullName
        description: Full name for the Package Install.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Package Install object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Spec
        description: Spec for the Package Install.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Status
        description: Status for the Package Install.
    description: Represents an instance of Package in the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.RoleBindingScope:
    type: string
    enum:
      - UNSPECIFIED
      - CLUSTER
      - NAMESPACE
    default: UNSPECIFIED
    description: |-
      Enumeration defining possible scope of role binding.

       - UNSPECIFIED: Default Role Binding scope. Behaviour is undefined and clients shouldn't use it.
       - CLUSTER: Role Binding is cluster scoped on the cluster.
       - NAMESPACE: Role Binding is namespace scoped on the cluster.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Spec:
    type: object
    properties:
      packageRef:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.PackageRef
        description: Reference to the Package which will be installed.
      inlineValues:
        type: object
        description: Inline values to configure the Package Install.
      roleBindingScope:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.RoleBindingScope
        description: >-
          Role binding scope for service account which will be used by Package
          Install.
    description: Spec of Package Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Package Install resource.
      resolvedVersion:
        type: string
        description: Resolved version of the Package Install.
      generatedResources:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.GeneratedResources
        description: >-
          Kuberenetes RBAC resources and service account created on the cluster
          by TMC for Package Install.
      managed:
        type: boolean
        description: If true, the Package Install is managed by TMC.
      referredBy:
        type: array
        items:
          type: string
        description: TMC services/features referencing the package install.
    description: Status of Package Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.PackageRef:
    type: object
    properties:
      packageMetadataName:
        type: string
        description: Name of the Package Metadata.
      versionSelection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.VersionSelection
        description: Version Selection of the Package.
    description: Reference to Package.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.VersionSelection:
    type: object
    properties:
      constraints:
        type: string
        description: >-
          Constraints to select Package. Example: constraints: "v1.2.3",
          constraints: "<v1.4.0" etc.
    description: Version Selection criteria to deploy Package.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.CreateInstallRequest:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Install to create.
    description: Request to create an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.CreateInstallResponse:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Install created.
    description: Response from creating an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.DeleteInstallResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.GetInstallResponse:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Install returned.
    description: Response from getting an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.ListInstallsResponse:
    type: object
    properties:
      installs:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: List of installs.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Installs.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.UpdateInstallRequest:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Update Install.
    description: Request to update (overwrite) an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.UpdateInstallResponse:
    type: object
    properties:
      install:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.install.Install
        description: Install updated.
    description: Response from updating an Install.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Package Metadata.
    description: Full name of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.GetMetadataResponse:
    type: object
    properties:
      metadata:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Metadata
        description: Metadata returned.
    description: Response from getting a Metadata.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.ListMetadatasResponse:
    type: object
    properties:
      metadatas:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Metadata
        description: List of metadatas.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Metadatas.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Maintainer:
    type: object
    properties:
      name:
        type: string
        description: Name of the maintainer.
    description: Information about the maintainer of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Metadata:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.FullName
        description: Full name for the Package Metadata.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Package Metadata object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Spec
        description: Spec for the Package Metadata.
    description: >-
      Represents Tanzu Carvel Package Metadata that's available for
      installation.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Spec:
    type: object
    properties:
      displayName:
        type: string
        description: Display name of the Package Metadata.
      shortDescription:
        type: string
        description: Short description of the Package Metadata.
      longDescription:
        type: string
        description: >-
          Long description of Package Metadata containing key features, common
          use cases etc.
      icon:
        type: string
        description: >-
          Icon or logo of the Package Metadata in base64 encoded format. Image
          should be in .svg format.
      providerName:
        type: string
        description: Name of the Package Metadata author.
      maintainers:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.Maintainer
        description: Personally identifiable details of Package Metadata maintainers.
      categories:
        type: array
        items:
          type: string
        description: Categories of the Package Metadata.
      supportDescription:
        type: string
        description: >-
          Includes information about how consumer can get support. ex: email,
          slack etc.
      repositoryName:
        type: string
        description: Name of package repository to which this package metadata belongs.
    description: Spec of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      metadataName:
        type: string
        description: Name of the Package metadata.
      name:
        type: string
        description: Name of the Package. It represents version of the Package metadata.
    description: Full name of the Package.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.GetPackageResponse:
    type: object
    properties:
      package:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.Package
        description: Package returned.
    description: Response from getting a Package.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.ListPackagesResponse:
    type: object
    properties:
      packages:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.Package
        description: List of packages.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Packages.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.Package:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.FullName
        description: Full name for the Package.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Package object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.Spec
        description: Spec for the Package.
    description: Represents Tanzu Carvel Package that's available for installation.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      metadataName:
        type: string
        description: >-
          Scope search to the specified metadata_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.Spec:
    type: object
    properties:
      licenses:
        type: array
        items:
          type: string
        description: Licenses under which Package is released.
      releasedAt:
        type: string
        format: date-time
        description: Date on which Package is released.
      capacityRequirementsDescription:
        type: string
        description: Minimum capacity requirements to install Package on a cluster.
      releaseNotes:
        type: string
        description: Release notes of Package.
      valuesSchema:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.ValuesSchema
        description: >-
          Values schema is used to show template values that can be configured
          by users.
      repositoryName:
        type: string
        description: Name of package repository to which this package belongs.
    description: Spec of the Package.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.metadata.package.ValuesSchema:
    type: object
    properties:
      template:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Template values in OpenAPI V3 schema format.
    description: >-
      ValuesSchema is used to show template values that can be configured by
      users while installing Package.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ApplyRepositoryRequest:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Repository to apply.
    description: Request to apply a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ApplyRepositoryResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Repository applied.
    description: Response from applying a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Package Repository.
    description: Full name of the Package Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ImgPkgBundleSpec:
    type: object
    properties:
      image:
        type: string
        description: Docker image url; unqualified, tagged, or digest references supported.
    description: >-
      Package Repository bundle is an image package bundle that holds Package
      CRs.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.FullName
        description: Full name for the Package Repository.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Package Repository object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Spec
        description: Spec for the Package Repository.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Status
        description: Status for the Package Repository.
    description: Represents Tanzu Carvel Package repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Spec:
    type: object
    properties:
      imgpkgBundle:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ImgPkgBundleSpec
        description: Pulls imgpkg bundle from Docker/OCI registry.
    description: Spec of the Package Package Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the Package Repository resource.
      disabled:
        type: boolean
        description: If true, the Package Repository is disabled.
      subscribed:
        type: boolean
        description: >-
          If true, the Package Repository has been subscribed by user
          organization.
      managed:
        type: boolean
        description: If true, the Package Repository is managed by TMC.
    description: Status of Package Repository resource.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.SetRepositoryAvailabilityRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.FullName
        description: Package Repository full_name.
      disabled:
        type: boolean
        description: If true, Package Repository is disabled for cluster.
    description: >-
      The request type for enabling/disabling a Package Repository for a
      cluster.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.SetRepositoryAvailabilityResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Enabled Package Repository resource.
    description: >-
      The response type for enabling/disabling a Package Repository for a
      cluster.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.CreateRepositoryRequest:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Repository to create.
    description: Request to create a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.CreateRepositoryResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Repository created.
    description: Response from creating a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.DeleteRepositoryResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.GetRepositoryResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Repository returned.
    description: Response from getting a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.ListRepositoriesResponse:
    type: object
    properties:
      repositories:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: List of repositories.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Repositories.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.UpdateRepositoryRequest:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Update Repository.
    description: Request to update (overwrite) a Repository.
  vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.UpdateRepositoryResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.tanzupackage.repository.Repository
        description: Repository updated.
    description: Response from updating a Repository.
  antrea_io.antrea.pkg.apis.crd.v1beta1.AgentCondition:
    type: object
    properties:
      type:
        type: string
      status:
        type: string
        title: One of the AgentConditionType listed above
      lastHeartbeatTime:
        type: string
        format: date-time
        title: Mark certain type status, one of True, False, Unknown
      reason:
        type: string
        title: >-
          The timestamp when AntreaAgentInfo is created/updated, ideally
          heartbeat interval is 60s
      message:
        type: string
        title: Brief reason
  antrea_io.antrea.pkg.apis.crd.v1beta1.AntreaAgentInfo:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      version:
        type: string
      podRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectReference'
        title: Antrea binary version
      nodeRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectReference'
        title: The Pod that Antrea Agent is running in
      nodeSubnets:
        type: array
        items:
          type: string
        title: The Node that Antrea Agent is running in
      ovsInfo:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.OVSInfo'
        title: Node subnets
      networkPolicyControllerInfo:
        $ref: >-
          #/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.NetworkPolicyControllerInfo
        title: OVS Information
      localPodNum:
        type: integer
        format: int32
        title: Antrea Agent NetworkPolicy information
      agentConditions:
        type: array
        items:
          $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.AgentCondition'
        title: The number of Pods which the agent is in charge of
      apiPort:
        type: string
        format: int64
        title: Agent condition contains types like AgentHealthy
  antrea_io.antrea.pkg.apis.crd.v1beta1.NetworkPolicyControllerInfo:
    type: object
    properties:
      networkPolicyNum:
        type: integer
        format: int32
      addressGroupNum:
        type: integer
        format: int32
      appliedToGroupNum:
        type: integer
        format: int32
  antrea_io.antrea.pkg.apis.crd.v1beta1.OVSInfo:
    type: object
    properties:
      version:
        type: string
      bridgeName:
        type: string
      flowTable:
        type: object
        additionalProperties:
          type: integer
          format: int32
  k8s.io.api.core.v1.ObjectReference:
    type: object
    properties:
      kind:
        type: string
        title: >-
          Kind of the referent.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds

          +optional
      namespace:
        type: string
        title: >-
          Namespace of the referent.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/

          +optional
      name:
        type: string
        title: >-
          Name of the referent.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names

          +optional
      uid:
        type: string
        title: >-
          UID of the referent.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids

          +optional
      apiVersion:
        type: string
        title: |-
          API version of the referent.
          +optional
      resourceVersion:
        type: string
        title: >-
          Specific resourceVersion to which this reference is made, if any.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency

          +optional
      fieldPath:
        type: string
        title: >-
          If referring to a piece of an object instead of an entire object, this
          string

          should contain a valid JSON/Go field access statement, such as
          desiredState.manifest.containers[2].

          For example, if the object reference is to a container within a pod,
          this would take on a value like:

          "spec.containers{name}" (where "name" refers to the name of the
          container that triggered

          the event) or if no container name is specified "spec.containers[2]"
          (container with

          index 2 in this pod). This syntax is chosen only to have some
          well-defined way of

          referencing a part of an object.

          TODO: this design is not final and this field is subject to change in
          the future.

          +optional
    title: >-
      ObjectReference contains enough information to let you inspect or modify
      the referred object.

      +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
  k8s.io.apimachinery.pkg.apis.meta.v1.Fields:
    type: object
    properties:
      map:
        type: object
        additionalProperties:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Fields'
        description: >-
          Map stores a set of fields in a data structure like a Trie.


          Each key is either a '.' representing the field itself, and will
          always map to an empty set,

          or a string representing a sub-field or item. The string will follow
          one of these four formats:

          'f:<name>', where <name> is the name of a field in a struct, or key in
          a map

          'v:<value>', where <value> is the exact json formatted value of a list
          item

          'i:<index>', where <index> is position of a item in a list

          'k:<keys>', where <keys> is a map of  a list item's key fields to
          their unique values

          If a key maps to an empty Fields value, the field that key represents
          is part of the set.


          The exact format is defined in
          k8s.io/apiserver/pkg/endpoints/handlers/fieldmanager/internal
    title: >-
      Fields stores a set of fields in a data structure like a Trie.

      To understand how this is used, see:
      https://github.com/kubernetes-sigs/structured-merge-diff
  k8s.io.apimachinery.pkg.apis.meta.v1.Initializer:
    type: object
    properties:
      name:
        type: string
        description: name of the process that is responsible for initializing this object.
    description: >-
      Initializer is information about an initializer that has not yet
      completed.
  k8s.io.apimachinery.pkg.apis.meta.v1.Initializers:
    type: object
    properties:
      pending:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Initializer'
        title: >-
          Pending is a list of initializers that must execute in order before
          this object is visible.

          When the last pending initializer is removed, and no failing result is
          set, the initializers

          struct will be set to nil and the object is considered as initialized
          and visible to all

          clients.

          +patchMergeKey=name

          +patchStrategy=merge
      result:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status'
        description: >-
          If result is set with the Failure field, the object will be persisted
          to storage and then deleted,

          ensuring that other clients can observe the deletion.
    description: Initializers tracks the progress of initialization.
  k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta:
    type: object
    properties:
      selfLink:
        type: string
        title: |-
          selfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
      resourceVersion:
        type: string
        title: >-
          String that identifies the server's internal version of this object
          that

          can be used by clients to determine when objects have changed.

          Value must be treated as opaque by clients and passed unmodified back
          to the server.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency

          +optional
      continue:
        type: string
        description: >-
          continue may be set if the user set a limit on the number of items
          returned, and indicates that

          the server has more data available. The value is opaque and may be
          used to issue another request

          to the endpoint that served this list to retrieve the next set of
          available objects. Continuing a

          consistent list may not be possible if the server configuration has
          changed or more than a few

          minutes have passed. The resourceVersion field returned when using
          this continue value will be

          identical to the value in the first response, unless you have received
          this token from an error

          message.
    description: >-
      ListMeta describes metadata that synthetic resources must have, including
      lists and

      various status objects. A resource may have only one of {ObjectMeta,
      ListMeta}.
  k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
    type: object
    properties:
      manager:
        type: string
        description: Manager is an identifier of the workflow managing these fields.
      operation:
        type: string
        description: >-
          Operation is the type of operation which lead to this
          ManagedFieldsEntry being created.

          The only valid values for this field are 'Apply' and 'Update'.
      apiVersion:
        type: string
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
      time:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: >-
          Time is timestamp of when these fields were set. It should always be
          empty if Operation is 'Apply'

          +optional
      fields:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Fields'
        title: |-
          Fields identifies a set of fields.
          +optional
    description: >-
      ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of
      the resource

      that the fieldset applies to.
  k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta:
    type: object
    properties:
      name:
        type: string
        title: >-
          Name must be unique within a namespace. Is required when creating
          resources, although

          some resources may allow a client to request the generation of an
          appropriate name

          automatically. Name is primarily intended for creation idempotence and
          configuration

          definition.

          Cannot be updated.

          More info: http://kubernetes.io/docs/user-guide/identifiers#names

          +optional
      generateName:
        type: string
        description: >-
          GenerateName is an optional prefix, used by the server, to generate a
          unique

          name ONLY IF the Name field has not been provided.

          If this field is used, the name returned to the client will be
          different

          than the name passed. This value will also be combined with a unique
          suffix.

          The provided value has the same validation rules as the Name field,

          and may be truncated by the length of the suffix required to make the
          value

          unique on the server.


          If this field is specified and the generated name exists, the server
          will

          NOT return a 409 - instead, it will either return 201 Created or 500
          with Reason

          ServerTimeout indicating a unique name could not be found in the time
          allotted, and the client

          should retry (optionally after the time indicated in the Retry-After
          header).


          Applied only if Name is not specified.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency

          +optional
      namespace:
        type: string
        description: >-
          Namespace defines the space within each name must be unique. An empty
          namespace is

          equivalent to the "default" namespace, but "default" is the canonical
          representation.

          Not all objects are required to be scoped to a namespace - the value
          of this field for

          those objects will be empty.


          Must be a DNS_LABEL.

          Cannot be updated.

          More info: http://kubernetes.io/docs/user-guide/namespaces

          +optional
      selfLink:
        type: string
        title: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.
          +optional
      uid:
        type: string
        description: >-
          UID is the unique in time and space value for this object. It is
          typically generated by

          the server on successful creation of a resource and is not allowed to
          change on PUT

          operations.


          Populated by the system.

          Read-only.

          More info: http://kubernetes.io/docs/user-guide/identifiers#uids

          +optional
      resourceVersion:
        type: string
        description: >-
          An opaque value that represents the internal version of this object
          that can

          be used by clients to determine when objects have changed. May be used
          for optimistic

          concurrency, change detection, and the watch operation on a resource
          or set of resources.

          Clients must treat these values as opaque and passed unmodified back
          to the server.

          They may only be valid for a particular resource or set of resources.


          Populated by the system.

          Read-only.

          Value must be treated as opaque by clients and .

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency

          +optional
      generation:
        type: string
        format: int64
        title: >-
          A sequence number representing a specific generation of the desired
          state.

          Populated by the system. Read-only.

          +optional
      creationTimestamp:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        description: >-
          CreationTimestamp is a timestamp representing the server time when
          this object was

          created. It is not guaranteed to be set in happens-before order across
          separate operations.

          Clients may not set this value. It is represented in RFC3339 form and
          is in UTC.


          Populated by the system.

          Read-only.

          Null for lists.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      deletionTimestamp:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        description: >-
          DeletionTimestamp is RFC 3339 date and time at which this resource
          will be deleted. This

          field is set by the server when a graceful deletion is requested by
          the user, and is not

          directly settable by a client. The resource is expected to be deleted
          (no longer visible

          from resource lists, and not reachable by name) after the time in this
          field, once the

          finalizers list is empty. As long as the finalizers list contains
          items, deletion is blocked.

          Once the deletionTimestamp is set, this value may not be unset or be
          set further into the

          future, although it may be shortened or the resource may be deleted
          prior to this time.

          For example, a user may request that a pod is deleted in 30 seconds.
          The Kubelet will react

          by sending a graceful termination signal to the containers in the pod.
          After that 30 seconds,

          the Kubelet will send a hard termination signal (SIGKILL) to the
          container and after cleanup,

          remove the pod from the API. In the presence of network partitions,
          this object may still

          exist after this timestamp, until an administrator or automated
          process can determine the

          resource is fully terminated.

          If not set, graceful deletion of the object has not been requested.


          Populated by the system when a graceful deletion is requested.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      deletionGracePeriodSeconds:
        type: string
        format: int64
        title: >-
          Number of seconds allowed for this object to gracefully terminate
          before

          it will be removed from the system. Only set when deletionTimestamp is
          also set.

          May only be shortened.

          Read-only.

          +optional
      labels:
        type: object
        additionalProperties:
          type: string
        title: >-
          Map of string keys and values that can be used to organize and
          categorize

          (scope and select) objects. May match selectors of replication
          controllers

          and services.

          More info: http://kubernetes.io/docs/user-guide/labels

          +optional
      annotations:
        type: object
        additionalProperties:
          type: string
        title: >-
          Annotations is an unstructured key value map stored with a resource
          that may be

          set by external tools to store and retrieve arbitrary metadata. They
          are not

          queryable and should be preserved when modifying objects.

          More info: http://kubernetes.io/docs/user-guide/annotations

          +optional
      ownerReferences:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference'
        title: >-
          List of objects depended by this object. If ALL objects in the list
          have

          been deleted, this object will be garbage collected. If this object is
          managed by a controller,

          then an entry in this list will point to this controller, with the
          controller field set to true.

          There cannot be more than one managing controller.

          +optional

          +patchMergeKey=uid

          +patchStrategy=merge
      initializers:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Initializers'
        description: >-
          An initializer is a controller which enforces some system invariant at
          object creation time.

          This field is a list of initializers that have not yet acted on this
          object. If nil or empty,

          this object has been completely initialized. Otherwise, the object is
          considered uninitialized

          and is hidden (in list/watch and get calls) from clients that haven't
          explicitly asked to

          observe uninitialized objects.


          When an object is created, the system will populate this list with the
          current set of initializers.

          Only privileged users may set or modify this list. Once it is empty,
          it may not be modified further

          by any user.


          DEPRECATED - initializers are an alpha field and will be removed in
          v1.15.
      finalizers:
        type: array
        items:
          type: string
        title: >-
          Must be empty before the object is deleted from the registry. Each
          entry

          is an identifier for the responsible component that will remove the
          entry

          from the list. If the deletionTimestamp of the object is non-nil,
          entries

          in this list can only be removed.

          +optional

          +patchStrategy=merge
      clusterName:
        type: string
        title: >-
          The name of the cluster which the object belongs to.

          This is used to distinguish resources with same name and namespace in
          different clusters.

          This field is not set anywhere right now and apiserver is going to
          ignore it if set in create or update request.

          +optional
      managedFields:
        type: array
        items:
          $ref: >-
            #/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          This field is alpha and can be changed or removed without notice.

          +optional
    description: >-
      ObjectMeta is metadata that all persisted resources must have, which
      includes all objects

      users must create.
  k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference:
    type: object
    properties:
      apiVersion:
        type: string
        description: API version of the referent.
      kind:
        type: string
        title: >-
          Kind of the referent.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
      name:
        type: string
        title: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
      uid:
        type: string
        title: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
      controller:
        type: boolean
        title: |-
          If true, this reference points to the managing controller.
          +optional
      blockOwnerDeletion:
        type: boolean
        title: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
    description: >-
      OwnerReference contains enough information to let you identify an owning

      object. An owning object must be in the same namespace as the dependent,
      or

      be cluster-scoped, so there is no namespace field.
  k8s.io.apimachinery.pkg.apis.meta.v1.Status:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta'
        title: >-
          Standard list metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds

          +optional
      status:
        type: string
        title: >-
          Status of the operation.

          One of: "Success" or "Failure".

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      message:
        type: string
        title: |-
          A human-readable description of the status of this operation.
          +optional
      reason:
        type: string
        title: |-
          A machine-readable description of why this operation is in the
          "Failure" status. If this value is empty there
          is no information available. A Reason clarifies an HTTP status
          code but does not override it.
          +optional
      details:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails'
        title: |-
          Extended data associated with the reason.  Each reason may define its
          own extended details. This field is optional and the data returned
          is not guaranteed to conform to any schema except that defined by
          the reason type.
          +optional
      code:
        type: integer
        format: int32
        title: |-
          Suggested HTTP return code for this status, 0 if not set.
          +optional
    description: Status is a return value for calls that don't return other objects.
  k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause:
    type: object
    properties:
      reason:
        type: string
        title: >-
          A machine-readable description of the cause of the error. If this
          value is

          empty there is no information available.

          +optional
      message:
        type: string
        title: >-
          A human-readable description of the cause of the error.  This field
          may be

          presented as-is to a reader.

          +optional
      field:
        type: string
        description: >-
          The field of the resource that has caused this error, as named by its
          JSON

          serialization. May include dot and postfix notation for nested
          attributes.

          Arrays are zero-indexed.  Fields may appear more than once in an array
          of

          causes due to fields having multiple errors.

          Optional.


          Examples:
            "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in "items"
          +optional
    description: >-
      StatusCause provides more information about an api.Status failure,
      including

      cases when multiple errors are encountered.
  k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails:
    type: object
    properties:
      name:
        type: string
        title: >-
          The name attribute of the resource associated with the status
          StatusReason

          (when there is a single name which can be described).

          +optional
      group:
        type: string
        title: >-
          The group attribute of the resource associated with the status
          StatusReason.

          +optional
      kind:
        type: string
        title: >-
          The kind attribute of the resource associated with the status
          StatusReason.

          On some operations may differ from the requested resource Kind.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds

          +optional
      uid:
        type: string
        title: |-
          UID of the resource.
          (when there is a single resource which can be described).
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
      causes:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause'
        title: >-
          The Causes array includes more details associated with the
          StatusReason

          failure. Not all StatusReasons may provide detailed causes.

          +optional
      retryAfterSeconds:
        type: integer
        format: int32
        title: >-
          If specified, the time in seconds before the operation should be
          retried. Some errors may indicate

          the client must take an alternate action - for those errors this field
          may indicate how long to wait

          before taking the alternate action.

          +optional
    description: |-
      StatusDetails is a set of additional properties that MAY be set by the
      server to provide additional information about a response. The Reason
      field of a Status object defines what attributes will be set. Clients
      must ignore fields that do not match the defined type of each attribute,
      and should assume that any attribute may be empty, invalid, or under
      defined.
  k8s.io.apimachinery.pkg.apis.meta.v1.Time:
    type: object
    properties:
      seconds:
        type: string
        format: int64
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
      nanos:
        type: integer
        format: int32
        description: >-
          Non-negative fractions of a second at nanosecond resolution. Negative

          second values with fractions must still have non-negative nanos values

          that count forward in time. Must be from 0 to 999,999,999

          inclusive. This field may be limited in precision depending on
          context.
    description: |-
      Time is a wrapper around time.Time which supports correct
      marshaling to YAML and JSON.  Wrappers are provided for many
      of the factory methods that the time package offers.

      +protobuf.options.marshal=false
      +protobuf.as=Timestamp
      +protobuf.options.(gogoproto.goproto_stringer)=false
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.AntreaAgentInfo:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.FullName
        description: Full name for the AntreaAgentInfo.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the resource object.
      status:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.AntreaAgentInfo'
        description: Status contains the detailed information of the Antrea Agent.
    description: Representation of the AntreaAgentInfo object.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of the traceflow.
    description: |-
      Full name of the traceflow. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.GetAntreaAgentInfoResponse:
    type: object
    properties:
      antreaAgentInfo:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.AntreaAgentInfo
        description: AntreaAgentInfo returned.
    description: Response from getting an AntreaAgentInfo.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.ListAntreaAgentInfosResponse:
    type: object
    properties:
      antreaAgentInfos:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.AntreaAgentInfo
        description: List of antreaagentinfos.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing AntreaAgentInfos.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreaagentinfo.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  antrea_io.antrea.pkg.apis.crd.v1beta1.AntreaControllerInfo:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
      version:
        type: string
      podRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectReference'
        title: Antrea binary version
      nodeRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectReference'
        title: The Pod that Antrea Controller is running in
      serviceRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectReference'
        title: The Node that Antrea Controller is running in
      networkPolicyControllerInfo:
        $ref: >-
          #/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.NetworkPolicyControllerInfo
        title: Antrea Controller Service
      connectedAgentNum:
        type: integer
        format: int32
        title: Antrea Controller NetworkPolicy information
      controllerConditions:
        type: array
        items:
          $ref: >-
            #/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.ControllerCondition
        title: Number of agents which are connected to this controller
      apiPort:
        type: string
        format: int64
        title: Controller condition contains types like ControllerHealthy
  antrea_io.antrea.pkg.apis.crd.v1beta1.ControllerCondition:
    type: object
    properties:
      type:
        type: string
      status:
        type: string
        title: One of the ControllerConditionType listed above, controllerHealthy
      lastHeartbeatTime:
        type: string
        format: date-time
        title: Mark certain type status, one of True, False, Unknown
      reason:
        type: string
        title: >-
          The timestamp when AntreaControllerInfo is created/updated, ideally
          heartbeat interval is 60s
      message:
        type: string
        title: Brief reason
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.AntreaControllerInfo:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.FullName
        description: Full name for the AntreaControllerInfo.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the resource object.
      status:
        $ref: >-
          #/definitions/antrea_io.antrea.pkg.apis.crd.v1beta1.AntreaControllerInfo
        description: >-
          AntreaControllerInfo contains the detailed information of the Antrea
          Controller.
    description: Representation of the AntreaControllerInfo object.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of the traceflow.
    description: |-
      Full name of the traceflow. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.GetAntreaControllerInfoResponse:
    type: object
    properties:
      antreaControllerInfo:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.AntreaControllerInfo
        description: AntreaControllerInfo returned.
    description: Response from getting an AntreaControllerInfo.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.ListAntreaControllerInfosResponse:
    type: object
    properties:
      antreaControllerInfos:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.AntreaControllerInfo
        description: List of antreacontrollerinfos.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing AntreaControllerInfos.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.antreacontrollerinfo.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  antrea_io.antrea.pkg.apis.crd.v1alpha1.Destination:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace is the destination namespace.
      pod:
        type: string
        description: Pod is the destination pod, exclusive with destination service.
      service:
        type: string
        description: Service is the destination service, exclusive with destination pod.
      ip:
        type: string
        description: IP is the destination IPv4 or IPv6 address.
    description: Destination describes the destination spec of the traceflow.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.ICMPEchoRequestHeader:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: ID is the ICMPEchoRequestHeader ID.
      sequence:
        type: integer
        format: int32
        description: Sequence is the ICMPEchoRequestHeader sequence.
    description: ICMPEchoRequestHeader describes spec of an ICMP echo request header.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.IPHeader:
    type: object
    properties:
      srcIP:
        type: string
        description: SrcIP is the source IP.
      protocol:
        type: integer
        format: int32
        description: Protocol is the IP protocol.
      ttl:
        type: integer
        format: int32
        description: TTL is the IP TTL.
      flags:
        type: integer
        format: int32
        description: Flags is the flags for IP.
    description: IPHeader describes spec of an IPv4 header.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.IPv6Header:
    type: object
    properties:
      srcIP:
        type: string
        description: SrcIP is the source IPv6.
      nextHeader:
        type: integer
        format: int32
        description: NextHeader is the IPv6 protocol.
      hopLimit:
        type: integer
        format: int32
        description: HopLimit is the IPv6 Hop Limit.
    description: IPv6Header describes spec of an IPv6 header.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.NodeResult:
    type: object
    properties:
      node:
        type: string
        description: Node is the node of the observation.
      role:
        type: string
        description: Role of the node like sender, receiver, etc.
      timestamp:
        type: string
        format: int64
        description: Timestamp is the timestamp of the observations on the node.
      observations:
        type: array
        items:
          $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.Observation'
        description: >-
          Observations includes all observations from sender nodes, receiver
          ones, etc.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.Observation:
    type: object
    properties:
      component:
        type: string
        description: Component is the observation component.
      componentInfo:
        type: string
        description: ComponentInfo is the extension of Component field.
      action:
        type: string
        description: Action is the action to the observation.
      pod:
        type: string
        description: Pod is the combination of Pod name and Pod Namespace.
      dstMAC:
        type: string
        description: DstMAC is the destination MAC.
      networkPolicy:
        type: string
        description: NetworkPolicy is the combination of Namespace and NetworkPolicyName.
      ttl:
        type: integer
        format: int32
        description: TTL is the observation TTL.
      translatedSrcIP:
        type: string
        description: TranslatedSrcIP is the translated source IP.
      translatedDstIP:
        type: string
        description: TranslatedDstIP is the translated destination IP.
      tunnelDstIP:
        type: string
        description: TunnelDstIP is the tunnel destination IP.
    description: Observation describes those from sender nodes or receiver nodes.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.Packet:
    type: object
    properties:
      srcIP:
        type: string
      dstIP:
        type: string
      length:
        type: integer
        format: int64
        description: >-
          Length is the IP packet length (includes the IPv4 or IPv6 header
          length).
      ipHeader:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.IPHeader'
        title: >-
          TODO: change type IPHeader to *IPHeader and correct all internal
          references
      ipv6Header:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.IPv6Header'
      transportHeader:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.TransportHeader'
    description: Packet includes header info.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.Source:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace is the source namespace.
      pod:
        type: string
        description: Pod is the source pod.
      ip:
        type: string
        description: |-
          IP is the source IPv4 or IPv6 address. IP as the source is supported
          only for live-traffic Traceflow.
    description: Source describes the source spec of the traceflow.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.TCPHeader:
    type: object
    properties:
      srcPort:
        type: integer
        format: int32
        description: SrcPort is the source port.
      dstPort:
        type: integer
        format: int32
        description: DstPort is the destination port.
      flags:
        type: integer
        format: int32
        description: Flags are flags in the header.
    description: TCPHeader describes spec of a TCP header.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.TraceflowSpec:
    type: object
    properties:
      source:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.Source'
      destination:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.Destination'
      packet:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.Packet'
      liveTraffic:
        type: boolean
        description: |-
          LiveTraffic indicates the Traceflow is to trace the live traffic
          rather than an injected packet, when set to true. The first packet of
          the first connection that matches the packet spec will be traced.
      droppedOnly:
        type: boolean
        description: |-
          DroppedOnly indicates only the dropped packet should be captured in a
          live-traffic Traceflow.
      timeout:
        type: integer
        format: int64
        description: |-
          Timeout specifies the timeout of the Traceflow in seconds. Defaults
          to 20 seconds if not set.
    description: TraceflowSpec describes the spec of the traceflow.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.TraceflowStatus:
    type: object
    properties:
      phase:
        type: string
        description: Phase is the Traceflow phase.
      reason:
        type: string
        description: >-
          Reason is a message indicating the reason of the traceflow's current
          phase.
      startTime:
        type: string
        format: date-time
        title: >-
          StartTime is the time at which the Traceflow as started by the Antrea
          Controller.

          Before K8s v1.20, null values (field not set) are not pruned, and a CR
          where a

          metav1.Time field is not set would fail OpenAPI validation (type
          string). The

          recommendation seems to be to use a pointer instead, and the field
          will be omitted when

          serializing.

          See https://github.com/kubernetes/kubernetes/issues/86811
      dataplaneTag:
        type: integer
        format: int64
        description: DataplaneTag is a tag to identify a traceflow session across Nodes.
      results:
        type: array
        items:
          $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.NodeResult'
        description: Results is the collection of all observations on different nodes.
      capturedPacket:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.Packet'
        description: CapturedPacket is the captured packet in live-traffic Traceflow.
    description: TraceflowStatus describes current status of the traceflow.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.TransportHeader:
    type: object
    properties:
      icmp:
        $ref: >-
          #/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.ICMPEchoRequestHeader
      udp:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.UDPHeader'
      tcp:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.TCPHeader'
    description: TransportHeader describes spec of a TransportHeader.
  antrea_io.antrea.pkg.apis.crd.v1alpha1.UDPHeader:
    type: object
    properties:
      srcPort:
        type: integer
        format: int32
        description: SrcPort is the source port.
      dstPort:
        type: integer
        format: int32
        description: DstPort is the destination port.
    description: UDPHeader describes spec of a UDP header.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.CreateTraceflowRequest:
    type: object
    properties:
      traceflow:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.Traceflow
        description: Traceflow to create.
    description: Request to create a Traceflow.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.CreateTraceflowResponse:
    type: object
    properties:
      traceflow:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.Traceflow
        description: Traceflow created.
    description: Response from creating a Traceflow.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.DeleteTraceflowResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Traceflow.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of the traceflow.
    description: |-
      Full name of the traceflow. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.GetTraceflowResponse:
    type: object
    properties:
      traceflow:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.Traceflow
        description: Traceflow returned.
    description: Response from getting a Traceflow.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.ListTraceflowsResponse:
    type: object
    properties:
      traceflows:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.Traceflow
        description: List of traceflows.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Traceflows.
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.Traceflow:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.network.antrea.traceflow.FullName
        description: Full name for the traceflow.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the resource object.
      spec:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.TraceflowSpec'
        description: Spec for the traceflow.
      status:
        $ref: '#/definitions/antrea_io.antrea.pkg.apis.crd.v1alpha1.TraceflowStatus'
        description: Status for the traceflow.
    description: Representation of the antrea traceflow object.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster.
      clusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of this nodepool.
    description: |-
      Full name of the nodepool. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.GetNodepoolIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Nodepool policy.
    description: GetNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.FullName'
        description: Nodepool full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchNodepoolIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TestNodepoolIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.FullName'
        description: Nodepool full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestNodepoolIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.TestNodepoolIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestNodepoolIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.UpdateNodepoolIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Nodepool policy set.
    description: UpdateNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.CreateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool to create.
    description: Request to create a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.CreateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool created.
    description: Response from creating a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.DeleteNodepoolResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.EnumerateNodepoolsResponse:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool object.
    description: Streamed response from enumerating Nodepools.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.GetNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool returned.
    description: Response from getting a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.ListNodepoolsResponse:
    type: object
    properties:
      nodepools:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: List of nodepools.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Nodepools.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.FullName'
        description: Full name for the Nodepool.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Nodepool object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Spec'
        description: Spec for the Nodepool.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Status'
        description: Status of the Nodepool.
    description: A group of Kubernetes clusters.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.FullName'
        description: Nodepool to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.PatchNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool patched.
    description: Response from patching a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Status.Phase
        description: Phase of the nodepool resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions for the nodepool resource.
    description: Status of node pool resource.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - READY
      - ERROR
      - DELETING
      - RESIZING
      - UPGRADING
      - UPGRADE_FAILED
      - WAITING
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the nodepool resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - CREATING: Resource is pending processing.
       - READY: Resource is in ready state.
       - ERROR: Error in processing.
       - DELETING: Resource is being deleted.
       - RESIZING: Resizing state.
       - UPGRADING: An upgrade is in progress.
       - UPGRADE_FAILED: An upgrade has failed.
       - WAITING: The cluster is not created yet. so wait till then.
       - UPDATING: A generic phase used for TKGS nodepool as actual individual phase cannot be determined.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.UpdateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Update Nodepool.
    description: Request to update (overwrite) a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.UpdateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool updated.
    description: Response from updating a Nodepool.
  vmware.tanzu.manage.v1alpha1.cluster.nodepool.WatchNodepoolsResponse:
    type: object
    properties:
      nodepool:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.nodepool.Nodepool'
        description: Nodepool event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Nodepools.
  k8s.io.api.apps.v1.DaemonSet:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.apps.v1.DaemonSetSpec'
        title: >-
          The desired behavior of this daemon set.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.apps.v1.DaemonSetStatus'
        title: >-
          The current status of this daemon set. This data may be

          out of date by some window of time.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: DaemonSet represents the configuration of a daemon set.
  k8s.io.api.apps.v1.DaemonSetCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of DaemonSet condition.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition transitioned from one status to another.
          +optional
      reason:
        type: string
        title: |-
          The reason for the condition's last transition.
          +optional
      message:
        type: string
        title: |-
          A human readable message indicating details about the transition.
          +optional
    description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
  k8s.io.api.apps.v1.DaemonSetSpec:
    type: object
    properties:
      selector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        title: >-
          A label query over pods that are managed by the daemon set.

          Must match in order to be controlled.

          It must match the pod template's labels.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      template:
        $ref: '#/definitions/k8s.io.api.core.v1.PodTemplateSpec'
        title: >-
          An object that describes the pod that will be created.

          The DaemonSet will create exactly one copy of this pod on every node

          that matches the template's node selector (or on every node if no node

          selector is specified).

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
      updateStrategy:
        $ref: '#/definitions/k8s.io.api.apps.v1.DaemonSetUpdateStrategy'
        title: |-
          An update strategy to replace existing DaemonSet pods with new pods.
          +optional
      minReadySeconds:
        type: integer
        format: int32
        title: >-
          The minimum number of seconds for which a newly created DaemonSet pod
          should

          be ready without any of its container crashing, for it to be
          considered

          available. Defaults to 0 (pod will be considered available as soon as
          it

          is ready).

          +optional
      revisionHistoryLimit:
        type: integer
        format: int32
        title: >-
          The number of old history to retain to allow rollback.

          This is a pointer to distinguish between explicit zero and not
          specified.

          Defaults to 10.

          +optional
    description: DaemonSetSpec is the specification of a daemon set.
  k8s.io.api.apps.v1.DaemonSetStatus:
    type: object
    properties:
      currentNumberScheduled:
        type: integer
        format: int32
        title: >-
          The number of nodes that are running at least 1

          daemon pod and are supposed to run the daemon pod.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
      numberMisscheduled:
        type: integer
        format: int32
        title: >-
          The number of nodes that are running the daemon pod, but are

          not supposed to run the daemon pod.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
      desiredNumberScheduled:
        type: integer
        format: int32
        title: >-
          The total number of nodes that should be running the daemon

          pod (including nodes correctly running the daemon pod).

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
      numberReady:
        type: integer
        format: int32
        description: |-
          The number of nodes that should be running the daemon pod and have one
          or more of the daemon pod running and ready.
      observedGeneration:
        type: string
        format: int64
        title: |-
          The most recent generation observed by the daemon set controller.
          +optional
      updatedNumberScheduled:
        type: integer
        format: int32
        title: |-
          The total number of nodes that are running updated daemon pod
          +optional
      numberAvailable:
        type: integer
        format: int32
        title: |-
          The number of nodes that should be running the
          daemon pod and have one or more of the daemon pod running and
          available (ready for at least spec.minReadySeconds)
          +optional
      numberUnavailable:
        type: integer
        format: int32
        title: |-
          The number of nodes that should be running the
          daemon pod and have none of the daemon pod running and available
          (ready for at least spec.minReadySeconds)
          +optional
      collisionCount:
        type: integer
        format: int32
        title: |-
          Count of hash collisions for the DaemonSet. The DaemonSet controller
          uses this field as a collision avoidance mechanism when it needs to
          create the name for the newest ControllerRevision.
          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.apps.v1.DaemonSetCondition'
        title: >-
          Represents the latest available observations of a DaemonSet's current
          state.

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
    description: DaemonSetStatus represents the current status of a daemon set.
  k8s.io.api.apps.v1.DaemonSetUpdateStrategy:
    type: object
    properties:
      type:
        type: string
        title: >-
          Type of daemon set update. Can be "RollingUpdate" or "OnDelete".
          Default is RollingUpdate.

          +optional
      rollingUpdate:
        $ref: '#/definitions/k8s.io.api.apps.v1.RollingUpdateDaemonSet'
        title: >-
          Rolling update config params. Present only if type = "RollingUpdate".

          ---

          TODO: Update this to follow our convention for oneOf, whatever we
          decide it

          to be. Same as Deployment `strategy.rollingUpdate`.

          See https://github.com/kubernetes/kubernetes/issues/35345

          +optional
    description: >-
      DaemonSetUpdateStrategy is a struct used to control the update strategy
      for a DaemonSet.
  k8s.io.api.apps.v1.Deployment:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: |-
          Standard object metadata.
          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.apps.v1.DeploymentSpec'
        title: |-
          Specification of the desired behavior of the Deployment.
          +optional
      status:
        $ref: '#/definitions/k8s.io.api.apps.v1.DeploymentStatus'
        title: |-
          Most recently observed status of the Deployment.
          +optional
    description: Deployment enables declarative updates for Pods and ReplicaSets.
  k8s.io.api.apps.v1.DeploymentCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of deployment condition.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastUpdateTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        description: The last time this condition was updated.
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        description: Last time the condition transitioned from one status to another.
      reason:
        type: string
        description: The reason for the condition's last transition.
      message:
        type: string
        description: A human readable message indicating details about the transition.
    description: >-
      DeploymentCondition describes the state of a deployment at a certain
      point.
  k8s.io.api.apps.v1.DeploymentSpec:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        title: >-
          Number of desired pods. This is a pointer to distinguish between
          explicit

          zero and not specified. Defaults to 1.

          +optional
      selector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: |-
          Label selector for pods. Existing ReplicaSets whose pods are
          selected by this will be the ones affected by this deployment.
          It must match the pod template's labels.
      template:
        $ref: '#/definitions/k8s.io.api.core.v1.PodTemplateSpec'
        description: Template describes the pods that will be created.
      strategy:
        $ref: '#/definitions/k8s.io.api.apps.v1.DeploymentStrategy'
        title: |-
          The deployment strategy to use to replace existing pods with new ones.
          +optional
          +patchStrategy=retainKeys
      minReadySeconds:
        type: integer
        format: int32
        title: >-
          Minimum number of seconds for which a newly created pod should be
          ready

          without any of its container crashing, for it to be considered
          available.

          Defaults to 0 (pod will be considered available as soon as it is
          ready)

          +optional
      revisionHistoryLimit:
        type: integer
        format: int32
        title: >-
          The number of old ReplicaSets to retain to allow rollback.

          This is a pointer to distinguish between explicit zero and not
          specified.

          Defaults to 10.

          +optional
      paused:
        type: boolean
        title: |-
          Indicates that the deployment is paused.
          +optional
      progressDeadlineSeconds:
        type: integer
        format: int32
        description: >-
          The maximum time in seconds for a deployment to make progress before
          it

          is considered to be failed. The deployment controller will continue to

          process failed deployments and a condition with a
          ProgressDeadlineExceeded

          reason will be surfaced in the deployment status. Note that progress
          will

          not be estimated during the time a deployment is paused. Defaults to
          600s.
    description: >-
      DeploymentSpec is the specification of the desired behavior of the
      Deployment.
  k8s.io.api.apps.v1.DeploymentStatus:
    type: object
    properties:
      observedGeneration:
        type: string
        format: int64
        title: |-
          The generation observed by the deployment controller.
          +optional
      replicas:
        type: integer
        format: int32
        title: >-
          Total number of non-terminated pods targeted by this deployment (their
          labels match the selector).

          +optional
      updatedReplicas:
        type: integer
        format: int32
        title: >-
          Total number of non-terminated pods targeted by this deployment that
          have the desired template spec.

          +optional
      readyReplicas:
        type: integer
        format: int32
        title: |-
          Total number of ready pods targeted by this deployment.
          +optional
      availableReplicas:
        type: integer
        format: int32
        title: >-
          Total number of available pods (ready for at least minReadySeconds)
          targeted by this deployment.

          +optional
      unavailableReplicas:
        type: integer
        format: int32
        title: >-
          Total number of unavailable pods targeted by this deployment. This is
          the total number of

          pods that are still required for the deployment to have 100% available
          capacity. They may

          either be pods that are running but not yet available or pods that
          still have not been created.

          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.apps.v1.DeploymentCondition'
        title: >-
          Represents the latest available observations of a deployment's current
          state.

          +patchMergeKey=type

          +patchStrategy=merge
      collisionCount:
        type: integer
        format: int32
        title: >-
          Count of hash collisions for the Deployment. The Deployment controller
          uses this

          field as a collision avoidance mechanism when it needs to create the
          name for the

          newest ReplicaSet.

          +optional
    description: DeploymentStatus is the most recently observed status of the Deployment.
  k8s.io.api.apps.v1.DeploymentStrategy:
    type: object
    properties:
      type:
        type: string
        title: >-
          Type of deployment. Can be "Recreate" or "RollingUpdate". Default is
          RollingUpdate.

          +optional
      rollingUpdate:
        $ref: '#/definitions/k8s.io.api.apps.v1.RollingUpdateDeployment'
        title: >-
          Rolling update config params. Present only if DeploymentStrategyType =

          RollingUpdate.

          ---

          TODO: Update this to follow our convention for oneOf, whatever we
          decide it

          to be.

          +optional
    description: DeploymentStrategy describes how to replace existing pods with new ones.
  k8s.io.api.apps.v1.ReplicaSet:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          If the Labels of a ReplicaSet are empty, they are defaulted to

          be the same as the Pod(s) that the ReplicaSet manages.

          Standard object's metadata. More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.apps.v1.ReplicaSetSpec'
        title: >-
          Spec defines the specification of the desired behavior of the
          ReplicaSet.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.apps.v1.ReplicaSetStatus'
        title: >-
          Status is the most recently observed status of the ReplicaSet.

          This data may be out of date by some window of time.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: >-
      ReplicaSet ensures that a specified number of pod replicas are running at
      any given time.
  k8s.io.api.apps.v1.ReplicaSetCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of replica set condition.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          The last time the condition transitioned from one status to another.
          +optional
      reason:
        type: string
        title: |-
          The reason for the condition's last transition.
          +optional
      message:
        type: string
        title: |-
          A human readable message indicating details about the transition.
          +optional
    description: >-
      ReplicaSetCondition describes the state of a replica set at a certain
      point.
  k8s.io.api.apps.v1.ReplicaSetSpec:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        title: >-
          Replicas is the number of desired replicas.

          This is a pointer to distinguish between explicit zero and
          unspecified.

          Defaults to 1.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller

          +optional
      minReadySeconds:
        type: integer
        format: int32
        title: >-
          Minimum number of seconds for which a newly created pod should be
          ready

          without any of its container crashing, for it to be considered
          available.

          Defaults to 0 (pod will be considered available as soon as it is
          ready)

          +optional
      selector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        title: >-
          Selector is a label query over pods that should match the replica
          count.

          Label keys and values that must match in order to be controlled by
          this replica set.

          It must match the pod template's labels.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      template:
        $ref: '#/definitions/k8s.io.api.core.v1.PodTemplateSpec'
        title: >-
          Template is the object that describes the pod that will be created if

          insufficient replicas are detected.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template

          +optional
    description: ReplicaSetSpec is the specification of a ReplicaSet.
  k8s.io.api.apps.v1.ReplicaSetStatus:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        title: >-
          Replicas is the most recently oberved number of replicas.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
      fullyLabeledReplicas:
        type: integer
        format: int32
        title: >-
          The number of pods that have labels matching the labels of the pod
          template of the replicaset.

          +optional
      readyReplicas:
        type: integer
        format: int32
        title: |-
          The number of ready replicas for this replica set.
          +optional
      availableReplicas:
        type: integer
        format: int32
        title: >-
          The number of available replicas (ready for at least minReadySeconds)
          for this replica set.

          +optional
      observedGeneration:
        type: string
        format: int64
        title: >-
          ObservedGeneration reflects the generation of the most recently
          observed ReplicaSet.

          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.apps.v1.ReplicaSetCondition'
        title: >-
          Represents the latest available observations of a replica set's
          current state.

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
    description: ReplicaSetStatus represents the current status of a ReplicaSet.
  k8s.io.api.apps.v1.RollingUpdateDaemonSet:
    type: object
    properties:
      maxUnavailable:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        title: >-
          The maximum number of DaemonSet pods that can be unavailable during
          the

          update. Value can be an absolute number (ex: 5) or a percentage of
          total

          number of DaemonSet pods at the start of the update (ex: 10%).
          Absolute

          number is calculated from percentage by rounding up.

          This cannot be 0.

          Default value is 1.

          Example: when this is set to 30%, at most 30% of the total number of
          nodes

          that should be running the daemon pod (i.e.
          status.desiredNumberScheduled)

          can have their pods stopped for an update at any given

          time. The update starts by stopping at most 30% of those DaemonSet
          pods

          and then brings up new DaemonSet pods in their place. Once the new
          pods

          are available, it then proceeds onto other DaemonSet pods, thus
          ensuring

          that at least 70% of original number of DaemonSet pods are available
          at

          all times during the update.

          +optional
    description: Spec to control the desired behavior of daemon set rolling update.
  k8s.io.api.apps.v1.RollingUpdateDeployment:
    type: object
    properties:
      maxUnavailable:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        title: >-
          The maximum number of pods that can be unavailable during the update.

          Value can be an absolute number (ex: 5) or a percentage of desired
          pods (ex: 10%).

          Absolute number is calculated from percentage by rounding down.

          This can not be 0 if MaxSurge is 0.

          Defaults to 25%.

          Example: when this is set to 30%, the old ReplicaSet can be scaled
          down to 70% of desired pods

          immediately when the rolling update starts. Once new pods are ready,
          old ReplicaSet

          can be scaled down further, followed by scaling up the new ReplicaSet,
          ensuring

          that the total number of pods available at all times during the update
          is at

          least 70% of desired pods.

          +optional
      maxSurge:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        title: >-
          The maximum number of pods that can be scheduled above the desired
          number of

          pods.

          Value can be an absolute number (ex: 5) or a percentage of desired
          pods (ex: 10%).

          This can not be 0 if MaxUnavailable is 0.

          Absolute number is calculated from percentage by rounding up.

          Defaults to 25%.

          Example: when this is set to 30%, the new ReplicaSet can be scaled up
          immediately when

          the rolling update starts, such that the total number of old and new
          pods do not exceed

          130% of desired pods. Once old pods have been killed,

          new ReplicaSet can be scaled up further, ensuring that total number of
          pods running

          at any time during the update is at most 130% of desired pods.

          +optional
    description: Spec to control the desired behavior of rolling update.
  k8s.io.api.apps.v1.RollingUpdateStatefulSetStrategy:
    type: object
    properties:
      partition:
        type: integer
        format: int32
        title: |-
          Partition indicates the ordinal at which the StatefulSet should be
          partitioned.
          Default value is 0.
          +optional
    description: >-
      RollingUpdateStatefulSetStrategy is used to communicate parameter for
      RollingUpdateStatefulSetStrategyType.
  k8s.io.api.apps.v1.StatefulSet:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: +optional
      spec:
        $ref: '#/definitions/k8s.io.api.apps.v1.StatefulSetSpec'
        title: |-
          Spec defines the desired identities of pods in this set.
          +optional
      status:
        $ref: '#/definitions/k8s.io.api.apps.v1.StatefulSetStatus'
        title: |-
          Status is the current status of Pods in this StatefulSet. This data
          may be out of date by some window of time.
          +optional
    description: |-
      StatefulSet represents a set of pods with consistent identities.
      Identities are defined as:
       - Network: A single stable DNS and hostname.
       - Storage: As many VolumeClaims as requested.
      The StatefulSet guarantees that a given network identity will always
      map to the same storage identity.
  k8s.io.api.apps.v1.StatefulSetCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of statefulset condition.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition transitioned from one status to another.
          +optional
      reason:
        type: string
        title: |-
          The reason for the condition's last transition.
          +optional
      message:
        type: string
        title: |-
          A human readable message indicating details about the transition.
          +optional
    description: >-
      StatefulSetCondition describes the state of a statefulset at a certain
      point.
  k8s.io.api.apps.v1.StatefulSetSpec:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        title: >-
          replicas is the desired number of replicas of the given Template.

          These are replicas in the sense that they are instantiations of the

          same Template, but individual replicas also have a consistent
          identity.

          If unspecified, defaults to 1.

          TODO: Consider a rename of this field.

          +optional
      selector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        title: >-
          selector is a label query over pods that should match the replica
          count.

          It must match the pod template's labels.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      template:
        $ref: '#/definitions/k8s.io.api.core.v1.PodTemplateSpec'
        description: >-
          template is the object that describes the pod that will be created if

          insufficient replicas are detected. Each pod stamped out by the
          StatefulSet

          will fulfill this Template, but have a unique identity from the rest

          of the StatefulSet.
      volumeClaimTemplates:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PersistentVolumeClaim'
        title: >-
          volumeClaimTemplates is a list of claims that pods are allowed to
          reference.

          The StatefulSet controller is responsible for mapping network
          identities to

          claims in a way that maintains the identity of a pod. Every claim in

          this list must have at least one matching (by name) volumeMount in one

          container in the template. A claim in this list takes precedence over

          any volumes in the template, with the same name.

          TODO: Define the behavior if a claim already exists with the same
          name.

          +optional
      serviceName:
        type: string
        description: >-
          serviceName is the name of the service that governs this StatefulSet.

          This service must exist before the StatefulSet, and is responsible for

          the network identity of the set. Pods get DNS/hostnames that follow
          the

          pattern: pod-specific-string.serviceName.default.svc.cluster.local

          where "pod-specific-string" is managed by the StatefulSet controller.
      podManagementPolicy:
        type: string
        title: >-
          podManagementPolicy controls how pods are created during initial scale
          up,

          when replacing pods on nodes, or when scaling down. The default policy
          is

          `OrderedReady`, where pods are created in increasing order (pod-0,
          then

          pod-1, etc) and the controller will wait until each pod is ready
          before

          continuing. When scaling down, the pods are removed in the opposite
          order.

          The alternative policy is `Parallel` which will create pods in
          parallel

          to match the desired scale without waiting, and on scale down will
          delete

          all pods at once.

          +optional
      updateStrategy:
        $ref: '#/definitions/k8s.io.api.apps.v1.StatefulSetUpdateStrategy'
        description: |-
          updateStrategy indicates the StatefulSetUpdateStrategy that will be
          employed to update Pods in the StatefulSet when a revision is made to
          Template.
      revisionHistoryLimit:
        type: integer
        format: int32
        description: >-
          revisionHistoryLimit is the maximum number of revisions that will

          be maintained in the StatefulSet's revision history. The revision
          history

          consists of all revisions not represented by a currently applied

          StatefulSetSpec version. The default value is 10.
    description: A StatefulSetSpec is the specification of a StatefulSet.
  k8s.io.api.apps.v1.StatefulSetStatus:
    type: object
    properties:
      observedGeneration:
        type: string
        format: int64
        title: >-
          observedGeneration is the most recent generation observed for this
          StatefulSet. It corresponds to the

          StatefulSet's generation, which is updated on mutation by the API
          Server.

          +optional
      replicas:
        type: integer
        format: int32
        description: replicas is the number of Pods created by the StatefulSet controller.
      readyReplicas:
        type: integer
        format: int32
        description: >-
          readyReplicas is the number of Pods created by the StatefulSet
          controller that have a Ready Condition.
      currentReplicas:
        type: integer
        format: int32
        description: >-
          currentReplicas is the number of Pods created by the StatefulSet
          controller from the StatefulSet version

          indicated by currentRevision.
      updatedReplicas:
        type: integer
        format: int32
        description: >-
          updatedReplicas is the number of Pods created by the StatefulSet
          controller from the StatefulSet version

          indicated by updateRevision.
      currentRevision:
        type: string
        description: >-
          currentRevision, if not empty, indicates the version of the
          StatefulSet used to generate Pods in the

          sequence [0,currentReplicas).
      updateRevision:
        type: string
        title: >-
          updateRevision, if not empty, indicates the version of the StatefulSet
          used to generate Pods in the sequence

          [replicas-updatedReplicas,replicas)
      collisionCount:
        type: integer
        format: int32
        title: >-
          collisionCount is the count of hash collisions for the StatefulSet.
          The StatefulSet controller

          uses this field as a collision avoidance mechanism when it needs to
          create the name for the

          newest ControllerRevision.

          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.apps.v1.StatefulSetCondition'
        title: >-
          Represents the latest available observations of a statefulset's
          current state.

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
    description: StatefulSetStatus represents the current state of a StatefulSet.
  k8s.io.api.apps.v1.StatefulSetUpdateStrategy:
    type: object
    properties:
      type:
        type: string
        title: |-
          Type indicates the type of the StatefulSetUpdateStrategy.
          Default is RollingUpdate.
          +optional
      rollingUpdate:
        $ref: '#/definitions/k8s.io.api.apps.v1.RollingUpdateStatefulSetStrategy'
        title: >-
          RollingUpdate is used to communicate parameters when Type is
          RollingUpdateStatefulSetStrategyType.

          +optional
    description: >-
      StatefulSetUpdateStrategy indicates the strategy that the StatefulSet

      controller will use to perform updates. It includes any additional
      parameters

      necessary to perform the update for the indicated strategy.
  k8s.io.api.batch.v1.Job:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.batch.v1.JobSpec'
        title: >-
          Specification of the desired behavior of a job.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.batch.v1.JobStatus'
        title: >-
          Current status of a job.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: Job represents the configuration of a single job.
  k8s.io.api.batch.v1.JobCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of job condition, Complete or Failed.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastProbeTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition was checked.
          +optional
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition transit from one status to another.
          +optional
      reason:
        type: string
        title: |-
          (brief) reason for the condition's last transition.
          +optional
      message:
        type: string
        title: |-
          Human readable message indicating details about last transition.
          +optional
    description: JobCondition describes current state of a job.
  k8s.io.api.batch.v1.JobSpec:
    type: object
    properties:
      parallelism:
        type: integer
        format: int32
        title: >-
          Specifies the maximum desired number of pods the job should

          run at any given time. The actual number of pods running in steady
          state will

          be less than this number when ((.spec.completions -
          .status.successful) < .spec.parallelism),

          i.e. when the work left to do is less than max parallelism.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/

          +optional
      completions:
        type: integer
        format: int32
        title: >-
          Specifies the desired number of successfully finished pods the

          job should be run with.  Setting to nil means that the success of any

          pod signals the success of all pods, and allows parallelism to have
          any positive

          value.  Setting to 1 means that parallelism is limited to 1 and the
          success of that

          pod signals the success of the job.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/

          +optional
      activeDeadlineSeconds:
        type: string
        format: int64
        title: >-
          Specifies the duration in seconds relative to the startTime that the
          job may be active

          before the system tries to terminate it; value must be positive
          integer

          +optional
      backoffLimit:
        type: integer
        format: int32
        title: |-
          Specifies the number of retries before marking this job failed.
          Defaults to 6
          +optional
      selector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        title: >-
          A label query over pods that should match the pod count.

          Normally, the system sets this field for you.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors

          +optional
      manualSelector:
        type: boolean
        title: >-
          manualSelector controls generation of pod labels and pod selectors.

          Leave `manualSelector` unset unless you are certain what you are
          doing.

          When false or unset, the system pick labels unique to this job

          and appends those labels to the pod template.  When true,

          the user is responsible for picking unique labels and specifying

          the selector.  Failure to pick a unique label may cause this

          and other jobs to not function correctly.  However, You may see

          `manualSelector=true` in jobs that were created with the old
          `extensions/v1beta1`

          API.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector

          +optional
      template:
        $ref: '#/definitions/k8s.io.api.core.v1.PodTemplateSpec'
        title: >-
          Describes the pod that will be created when executing a job.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
      ttlSecondsAfterFinished:
        type: integer
        format: int32
        title: >-
          ttlSecondsAfterFinished limits the lifetime of a Job that has finished

          execution (either Complete or Failed). If this field is set,

          ttlSecondsAfterFinished after the Job finishes, it is eligible to be

          automatically deleted. When the Job is being deleted, its lifecycle

          guarantees (e.g. finalizers) will be honored. If this field is unset,

          the Job won't be automatically deleted. If this field is set to zero,

          the Job becomes eligible to be deleted immediately after it finishes.

          This field is alpha-level and is only honored by servers that enable
          the

          TTLAfterFinished feature.

          +optional
    description: JobSpec describes how the job execution will look like.
  k8s.io.api.batch.v1.JobStatus:
    type: object
    properties:
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.batch.v1.JobCondition'
        title: >-
          The latest available observations of an object's current state.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
      startTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: >-
          Represents time when the job was acknowledged by the job controller.

          It is not guaranteed to be set in happens-before order across separate
          operations.

          It is represented in RFC3339 form and is in UTC.

          +optional
      completionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Represents time when the job was completed. It is not guaranteed to
          be set in happens-before order across separate operations.
          It is represented in RFC3339 form and is in UTC.
          +optional
      active:
        type: integer
        format: int32
        title: |-
          The number of actively running pods.
          +optional
      succeeded:
        type: integer
        format: int32
        title: |-
          The number of pods which reached phase Succeeded.
          +optional
      failed:
        type: integer
        format: int32
        title: |-
          The number of pods which reached phase Failed.
          +optional
    description: JobStatus represents the current state of a Job.
  k8s.io.api.batch.v1beta1.CronJob:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.batch.v1beta1.CronJobSpec'
        title: >-
          Specification of the desired behavior of a cron job, including the
          schedule.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.batch.v1beta1.CronJobStatus'
        title: >-
          Current status of a cron job.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: CronJob represents the configuration of a single cron job.
  k8s.io.api.batch.v1beta1.CronJobSpec:
    type: object
    properties:
      schedule:
        type: string
        description: The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
      startingDeadlineSeconds:
        type: string
        format: int64
        title: >-
          Optional deadline in seconds for starting the job if it misses
          scheduled

          time for any reason.  Missed jobs executions will be counted as failed
          ones.

          +optional
      concurrencyPolicy:
        type: string
        title: >-
          Specifies how to treat concurrent executions of a Job.

          Valid values are:

          - "Allow" (default): allows CronJobs to run concurrently;

          - "Forbid": forbids concurrent runs, skipping next run if previous run
          hasn't finished yet;

          - "Replace": cancels currently running job and replaces it with a new
          one

          +optional
      suspend:
        type: boolean
        title: >-
          This flag tells the controller to suspend subsequent executions, it
          does

          not apply to already started executions.  Defaults to false.

          +optional
      jobTemplate:
        $ref: '#/definitions/k8s.io.api.batch.v1beta1.JobTemplateSpec'
        description: Specifies the job that will be created when executing a CronJob.
      successfulJobsHistoryLimit:
        type: integer
        format: int32
        title: >-
          The number of successful finished jobs to retain.

          This is a pointer to distinguish between explicit zero and not
          specified.

          Defaults to 3.

          +optional
      failedJobsHistoryLimit:
        type: integer
        format: int32
        title: >-
          The number of failed finished jobs to retain.

          This is a pointer to distinguish between explicit zero and not
          specified.

          Defaults to 1.

          +optional
    description: >-
      CronJobSpec describes how the job execution will look like and when it
      will actually run.
  k8s.io.api.batch.v1beta1.CronJobStatus:
    type: object
    properties:
      active:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ObjectReference'
        title: |-
          A list of pointers to currently running jobs.
          +optional
      lastScheduleTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Information when was the last time the job was successfully scheduled.
          +optional
    description: CronJobStatus represents the current state of a cron job.
  k8s.io.api.batch.v1beta1.JobTemplateSpec:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata of the jobs created from this template.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.batch.v1.JobSpec'
        title: >-
          Specification of the desired behavior of the job.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    title: >-
      JobTemplateSpec describes the data a Job should have when created from a
      template
  k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource:
    type: object
    properties:
      volumeID:
        type: string
        title: >-
          Unique ID of the persistent disk resource in AWS (Amazon EBS volume).

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
      fsType:
        type: string
        title: >-
          Filesystem type of the volume that you want to mount.

          Tip: Ensure that the filesystem type is supported by the host
          operating system.

          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

          TODO: how do we prevent errors in the filesystem from compromising the
          machine

          +optional
      partition:
        type: integer
        format: int32
        title: >-
          The partition in the volume that you want to mount.

          If omitted, the default is to mount by volume name.

          Examples: For volume /dev/sda1, you specify the partition as "1".

          Similarly, the volume partition for /dev/sda is "0" (or you can leave
          the property empty).

          +optional
      readOnly:
        type: boolean
        title: >-
          Specify "true" to force and set the ReadOnly property in VolumeMounts
          to "true".

          If omitted, the default is "false".

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

          +optional
    description: |-
      Represents a Persistent Disk resource in AWS.

      An AWS EBS disk must exist before mounting to a container. The disk
      must also be in the same AWS zone as the kubelet. An AWS EBS disk
      can only be mounted as read/write once. AWS EBS volumes support
      ownership management and SELinux relabeling.
  k8s.io.api.core.v1.Affinity:
    type: object
    properties:
      nodeAffinity:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeAffinity'
        title: |-
          Describes node affinity scheduling rules for the pod.
          +optional
      podAffinity:
        $ref: '#/definitions/k8s.io.api.core.v1.PodAffinity'
        title: >-
          Describes pod affinity scheduling rules (e.g. co-locate this pod in
          the same node, zone, etc. as some other pod(s)).

          +optional
      podAntiAffinity:
        $ref: '#/definitions/k8s.io.api.core.v1.PodAntiAffinity'
        title: >-
          Describes pod anti-affinity scheduling rules (e.g. avoid putting this
          pod in the same node, zone, etc. as some other pod(s)).

          +optional
    description: Affinity is a group of affinity scheduling rules.
  k8s.io.api.core.v1.AttachedVolume:
    type: object
    properties:
      name:
        type: string
        title: Name of the attached volume
      devicePath:
        type: string
        title: >-
          DevicePath represents the device path where the volume should be
          available
    title: AttachedVolume describes a volume attached to a node
  k8s.io.api.core.v1.AzureDiskVolumeSource:
    type: object
    properties:
      diskName:
        type: string
        title: The Name of the data disk in the blob storage
      diskURI:
        type: string
        title: The URI the data disk in the blob storage
      cachingMode:
        type: string
        title: |-
          Host Caching mode: None, Read Only, Read Write.
          +optional
      fsType:
        type: string
        title: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          +optional
      readOnly:
        type: boolean
        title: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
      kind:
        type: string
        title: >-
          Expected values Shared: multiple blob disks per storage account 
          Dedicated: single blob disk per storage account  Managed: azure
          managed data disk (only in managed availability set). defaults to
          shared
    description: >-
      AzureDisk represents an Azure Data Disk mount on the host and bind mount
      to the pod.
  k8s.io.api.core.v1.AzureFileVolumeSource:
    type: object
    properties:
      secretName:
        type: string
        title: the name of secret that contains Azure Storage Account Name and Key
      shareName:
        type: string
        title: Share Name
      readOnly:
        type: boolean
        title: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
    description: >-
      AzureFile represents an Azure File Service mount on the host and bind
      mount to the pod.
  k8s.io.api.core.v1.CSIVolumeSource:
    type: object
    properties:
      driver:
        type: string
        description: >-
          Driver is the name of the CSI driver that handles this volume.

          Consult with your admin for the correct name as registered in the
          cluster.
      readOnly:
        type: boolean
        title: |-
          Specifies a read-only configuration for the volume.
          Defaults to false (read/write).
          +optional
      fsType:
        type: string
        title: >-
          Filesystem type to mount. Ex. "ext4", "xfs", "ntfs".

          If not provided, the empty value is passed to the associated CSI
          driver

          which will determine the default filesystem to apply.

          +optional
      volumeAttributes:
        type: object
        additionalProperties:
          type: string
        title: >-
          VolumeAttributes stores driver-specific properties that are passed to
          the CSI

          driver. Consult your driver's documentation for supported values.

          +optional
      nodePublishSecretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: >-
          NodePublishSecretRef is a reference to the secret object containing

          sensitive information to pass to the CSI driver to complete the CSI

          NodePublishVolume and NodeUnpublishVolume calls.

          This field is optional, and  may be empty if no secret is required. If
          the

          secret object contains more than one secret, all secret references are
          passed.

          +optional
    title: >-
      Represents a source location of a volume to mount, managed by an external
      CSI driver
  k8s.io.api.core.v1.Capabilities:
    type: object
    properties:
      add:
        type: array
        items:
          type: string
        title: |-
          Added capabilities
          +optional
      drop:
        type: array
        items:
          type: string
        title: |-
          Removed capabilities
          +optional
    description: Adds and removes POSIX capabilities from running containers.
  k8s.io.api.core.v1.CephFSVolumeSource:
    type: object
    properties:
      monitors:
        type: array
        items:
          type: string
        title: >-
          Required: Monitors is a collection of Ceph monitors

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it
      path:
        type: string
        title: >-
          Optional: Used as the mounted root, rather than the full Ceph tree,
          default is /

          +optional
      user:
        type: string
        title: >-
          Optional: User is the rados user name, default is admin

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it

          +optional
      secretFile:
        type: string
        title: >-
          Optional: SecretFile is the path to key ring for User, default is
          /etc/ceph/user.secret

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it

          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: >-
          Optional: SecretRef is reference to the authentication secret for
          User, default is empty.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it

          +optional
      readOnly:
        type: boolean
        title: >-
          Optional: Defaults to false (read/write). ReadOnly here will force

          the ReadOnly setting in VolumeMounts.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it

          +optional
    description: |-
      Represents a Ceph Filesystem mount that lasts the lifetime of a pod
      Cephfs volumes do not support ownership management or SELinux relabeling.
  k8s.io.api.core.v1.CinderVolumeSource:
    type: object
    properties:
      volumeID:
        type: string
        title: >-
          volume id used to identify the volume in cinder

          More info:
          https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md
      fsType:
        type: string
        title: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          More info:
          https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md

          +optional
      readOnly:
        type: boolean
        title: >-
          Optional: Defaults to false (read/write). ReadOnly here will force

          the ReadOnly setting in VolumeMounts.

          More info:
          https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md

          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: >-
          Optional: points to a secret object containing parameters used to
          connect

          to OpenStack.

          +optional
    description: |-
      Represents a cinder volume resource in Openstack.
      A Cinder volume must exist before mounting to a container.
      The volume must also be in the same region as the kubelet.
      Cinder volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.ClientIPConfig:
    type: object
    properties:
      timeoutSeconds:
        type: integer
        format: int32
        title: >-
          timeoutSeconds specifies the seconds of ClientIP type session sticky
          time.

          The value must be >0 && <=86400(for 1 day) if ServiceAffinity ==
          "ClientIP".

          Default value is 10800(for 3 hours).

          +optional
    description: >-
      ClientIPConfig represents the configurations of Client IP based session
      affinity.
  k8s.io.api.core.v1.ConfigMapEnvSource:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        description: The ConfigMap to select from.
      optional:
        type: boolean
        title: |-
          Specify whether the ConfigMap must be defined
          +optional
    description: |-
      ConfigMapEnvSource selects a ConfigMap to populate the environment
      variables with.

      The contents of the target ConfigMap's Data field will represent the
      key-value pairs as environment variables.
  k8s.io.api.core.v1.ConfigMapKeySelector:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        description: The ConfigMap to select from.
      key:
        type: string
        description: The key to select.
      optional:
        type: boolean
        title: |-
          Specify whether the ConfigMap or it's key must be defined
          +optional
    description: Selects a key from a ConfigMap.
  k8s.io.api.core.v1.ConfigMapNodeConfigSource:
    type: object
    properties:
      namespace:
        type: string
        description: |-
          Namespace is the metadata.namespace of the referenced ConfigMap.
          This field is required in all cases.
      name:
        type: string
        description: |-
          Name is the metadata.name of the referenced ConfigMap.
          This field is required in all cases.
      uid:
        type: string
        title: |-
          UID is the metadata.UID of the referenced ConfigMap.
          This field is forbidden in Node.Spec, and required in Node.Status.
          +optional
      resourceVersion:
        type: string
        title: >-
          ResourceVersion is the metadata.ResourceVersion of the referenced
          ConfigMap.

          This field is forbidden in Node.Spec, and required in Node.Status.

          +optional
      kubeletConfigKey:
        type: string
        description: >-
          KubeletConfigKey declares which key of the referenced ConfigMap
          corresponds to the KubeletConfiguration structure

          This field is required in all cases.
    description: >-
      ConfigMapNodeConfigSource contains the information to reference a
      ConfigMap as a config source for the Node.
  k8s.io.api.core.v1.ConfigMapProjection:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
      items:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.KeyToPath'
        title: >-
          If unspecified, each key-value pair in the Data field of the
          referenced

          ConfigMap will be projected into the volume as a file whose name is
          the

          key and content is the value. If specified, the listed keys will be

          projected into the specified paths, and unlisted keys will not be

          present. If a key is specified which is not present in the ConfigMap,

          the volume setup will error unless it is marked optional. Paths must
          be

          relative and may not contain the '..' path or start with '..'.

          +optional
      optional:
        type: boolean
        title: |-
          Specify whether the ConfigMap or it's keys must be defined
          +optional
    description: >-
      Adapts a ConfigMap into a projected volume.


      The contents of the target ConfigMap's Data field will be presented in a

      projected volume as files using the keys in the Data field as the file
      names,

      unless the items element is populated with specific mappings of keys to
      paths.

      Note that this is identical to a configmap volume source without the
      default

      mode.
  k8s.io.api.core.v1.ConfigMapVolumeSource:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
      items:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.KeyToPath'
        title: >-
          If unspecified, each key-value pair in the Data field of the
          referenced

          ConfigMap will be projected into the volume as a file whose name is
          the

          key and content is the value. If specified, the listed keys will be

          projected into the specified paths, and unlisted keys will not be

          present. If a key is specified which is not present in the ConfigMap,

          the volume setup will error unless it is marked optional. Paths must
          be

          relative and may not contain the '..' path or start with '..'.

          +optional
      defaultMode:
        type: integer
        format: int32
        title: |-
          Optional: mode bits to use on created files by default. Must be a
          value between 0 and 0777. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
      optional:
        type: boolean
        title: |-
          Specify whether the ConfigMap or it's keys must be defined
          +optional
    description: |-
      Adapts a ConfigMap into a volume.

      The contents of the target ConfigMap's Data field will be presented in a
      volume as files using the keys in the Data field as the file names, unless
      the items element is populated with specific mappings of keys to paths.
      ConfigMap volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.Container:
    type: object
    properties:
      name:
        type: string
        description: |-
          Name of the container specified as a DNS_LABEL.
          Each container in a pod must have a unique name (DNS_LABEL).
          Cannot be updated.
      image:
        type: string
        title: >-
          Docker image name.

          More info: https://kubernetes.io/docs/concepts/containers/images

          This field is optional to allow higher level config management to
          default or override

          container images in workload controllers like Deployments and
          StatefulSets.

          +optional
      command:
        type: array
        items:
          type: string
        title: >-
          Entrypoint array. Not executed within a shell.

          The docker image's ENTRYPOINT is used if this is not provided.

          Variable references $(VAR_NAME) are expanded using the container's
          environment. If a variable

          cannot be resolved, the reference in the input string will be
          unchanged. The $(VAR_NAME) syntax

          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
          will never be expanded,

          regardless of whether the variable exists or not.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell

          +optional
      args:
        type: array
        items:
          type: string
        title: >-
          Arguments to the entrypoint.

          The docker image's CMD is used if this is not provided.

          Variable references $(VAR_NAME) are expanded using the container's
          environment. If a variable

          cannot be resolved, the reference in the input string will be
          unchanged. The $(VAR_NAME) syntax

          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
          will never be expanded,

          regardless of whether the variable exists or not.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell

          +optional
      workingDir:
        type: string
        title: |-
          Container's working directory.
          If not specified, the container runtime's default will be used, which
          might be configured in the container image.
          Cannot be updated.
          +optional
      ports:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ContainerPort'
        title: >-
          List of ports to expose from the container. Exposing a port here gives

          the system additional information about the network connections a

          container uses, but is primarily informational. Not specifying a port
          here

          DOES NOT prevent that port from being exposed. Any port which is

          listening on the default "0.0.0.0" address inside a container will be

          accessible from the network.

          Cannot be updated.

          +optional

          +patchMergeKey=containerPort

          +patchStrategy=merge

          +listType=map

          +listMapKey=containerPort

          +listMapKey=protocol
      envFrom:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.EnvFromSource'
        title: >-
          List of sources to populate environment variables in the container.

          The keys defined within a source must be a C_IDENTIFIER. All invalid
          keys

          will be reported as an event when the container is starting. When a
          key exists in multiple

          sources, the value associated with the last source will take
          precedence.

          Values defined by an Env with a duplicate key will take precedence.

          Cannot be updated.

          +optional
      env:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.EnvVar'
        title: |-
          List of environment variables to set in the container.
          Cannot be updated.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
      resources:
        $ref: '#/definitions/k8s.io.api.core.v1.ResourceRequirements'
        title: >-
          Compute Resources required by this container.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

          +optional
      volumeMounts:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.VolumeMount'
        title: |-
          Pod volumes to mount into the container's filesystem.
          Cannot be updated.
          +optional
          +patchMergeKey=mountPath
          +patchStrategy=merge
      volumeDevices:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.VolumeDevice'
        title: >-
          volumeDevices is the list of block devices to be used by the
          container.

          This is a beta feature.

          +patchMergeKey=devicePath

          +patchStrategy=merge

          +optional
      livenessProbe:
        $ref: '#/definitions/k8s.io.api.core.v1.Probe'
        title: >-
          Periodic probe of container liveness.

          Container will be restarted if the probe fails.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

          +optional
      readinessProbe:
        $ref: '#/definitions/k8s.io.api.core.v1.Probe'
        title: >-
          Periodic probe of container service readiness.

          Container will be removed from service endpoints if the probe fails.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

          +optional
      lifecycle:
        $ref: '#/definitions/k8s.io.api.core.v1.Lifecycle'
        title: >-
          Actions that the management system should take in response to
          container lifecycle events.

          Cannot be updated.

          +optional
      terminationMessagePath:
        type: string
        title: >-
          Optional: Path at which the file to which the container's termination
          message

          will be written is mounted into the container's filesystem.

          Message written is intended to be brief final status, such as an
          assertion failure message.

          Will be truncated by the node if greater than 4096 bytes. The total
          message length across

          all containers will be limited to 12kb.

          Defaults to /dev/termination-log.

          Cannot be updated.

          +optional
      terminationMessagePolicy:
        type: string
        title: >-
          Indicate how the termination message should be populated. File will
          use the contents of

          terminationMessagePath to populate the container status message on
          both success and failure.

          FallbackToLogsOnError will use the last chunk of container log output
          if the termination

          message file is empty and the container exited with an error.

          The log output is limited to 2048 bytes or 80 lines, whichever is
          smaller.

          Defaults to File.

          Cannot be updated.

          +optional
      imagePullPolicy:
        type: string
        title: >-
          Image pull policy.

          One of Always, Never, IfNotPresent.

          Defaults to Always if :latest tag is specified, or IfNotPresent
          otherwise.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/concepts/containers/images#updating-images

          +optional
      securityContext:
        $ref: '#/definitions/k8s.io.api.core.v1.SecurityContext'
        title: >-
          Security options the pod should run with.

          More info:
          https://kubernetes.io/docs/concepts/policy/security-context/

          More info:
          https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

          +optional
      stdin:
        type: boolean
        title: >-
          Whether this container should allocate a buffer for stdin in the
          container runtime. If this

          is not set, reads from stdin in the container will always result in
          EOF.

          Default is false.

          +optional
      stdinOnce:
        type: boolean
        title: >-
          Whether the container runtime should close the stdin channel after it
          has been opened by

          a single attach. When stdin is true the stdin stream will remain open
          across multiple attach

          sessions. If stdinOnce is set to true, stdin is opened on container
          start, is empty until the

          first client attaches to stdin, and then remains open and accepts data
          until the client disconnects,

          at which time stdin is closed and remains closed until the container
          is restarted. If this

          flag is false, a container processes that reads from stdin will never
          receive an EOF.

          Default is false

          +optional
      tty:
        type: boolean
        title: >-
          Whether this container should allocate a TTY for itself, also requires
          'stdin' to be true.

          Default is false.

          +optional
    description: A single application container that you want to run within a pod.
  k8s.io.api.core.v1.ContainerImage:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
        title: >-
          Names by which this image is known.

          e.g. ["k8s.gcr.io/hyperkube:v1.0.7",
          "dockerhub.io/google_containers/hyperkube:v1.0.7"]
      sizeBytes:
        type: string
        format: int64
        title: |-
          The size of the image in bytes.
          +optional
    title: Describe a container image
  k8s.io.api.core.v1.ContainerPort:
    type: object
    properties:
      name:
        type: string
        title: >-
          If specified, this must be an IANA_SVC_NAME and unique within the pod.
          Each

          named port in a pod must have a unique name. Name for the port that
          can be

          referred to by services.

          +optional
      hostPort:
        type: integer
        format: int32
        title: |-
          Number of port to expose on the host.
          If specified, this must be a valid port number, 0 < x < 65536.
          If HostNetwork is specified, this must match ContainerPort.
          Most containers do not need this.
          +optional
      containerPort:
        type: integer
        format: int32
        description: |-
          Number of port to expose on the pod's IP address.
          This must be a valid port number, 0 < x < 65536.
      protocol:
        type: string
        title: |-
          Protocol for port. Must be UDP, TCP, or SCTP.
          Defaults to "TCP".
          +optional
      hostIP:
        type: string
        title: |-
          What host IP to bind the external port to.
          +optional
    description: ContainerPort represents a network port in a single container.
  k8s.io.api.core.v1.ContainerState:
    type: object
    properties:
      waiting:
        $ref: '#/definitions/k8s.io.api.core.v1.ContainerStateWaiting'
        title: |-
          Details about a waiting container
          +optional
      running:
        $ref: '#/definitions/k8s.io.api.core.v1.ContainerStateRunning'
        title: |-
          Details about a running container
          +optional
      terminated:
        $ref: '#/definitions/k8s.io.api.core.v1.ContainerStateTerminated'
        title: |-
          Details about a terminated container
          +optional
    description: |-
      ContainerState holds a possible state of container.
      Only one of its members may be specified.
      If none of them is specified, the default one is ContainerStateWaiting.
  k8s.io.api.core.v1.ContainerStateRunning:
    type: object
    properties:
      startedAt:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Time at which the container was last (re-)started
          +optional
    description: ContainerStateRunning is a running state of a container.
  k8s.io.api.core.v1.ContainerStateTerminated:
    type: object
    properties:
      exitCode:
        type: integer
        format: int32
        title: Exit status from the last termination of the container
      signal:
        type: integer
        format: int32
        title: |-
          Signal from the last termination of the container
          +optional
      reason:
        type: string
        title: |-
          (brief) reason from the last termination of the container
          +optional
      message:
        type: string
        title: |-
          Message regarding the last termination of the container
          +optional
      startedAt:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Time at which previous execution of the container started
          +optional
      finishedAt:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Time at which the container last terminated
          +optional
      containerID:
        type: string
        title: |-
          Container's ID in the format 'docker://<container_id>'
          +optional
    description: ContainerStateTerminated is a terminated state of a container.
  k8s.io.api.core.v1.ContainerStateWaiting:
    type: object
    properties:
      reason:
        type: string
        title: |-
          (brief) reason the container is not yet running.
          +optional
      message:
        type: string
        title: |-
          Message regarding why the container is not yet running.
          +optional
    description: ContainerStateWaiting is a waiting state of a container.
  k8s.io.api.core.v1.ContainerStatus:
    type: object
    properties:
      name:
        type: string
        description: >-
          This must be a DNS_LABEL. Each container in a pod must have a unique
          name.

          Cannot be updated.
      state:
        $ref: '#/definitions/k8s.io.api.core.v1.ContainerState'
        title: |-
          Details about the container's current condition.
          +optional
      lastState:
        $ref: '#/definitions/k8s.io.api.core.v1.ContainerState'
        title: |-
          Details about the container's last termination condition.
          +optional
      ready:
        type: boolean
        description: Specifies whether the container has passed its readiness probe.
      restartCount:
        type: integer
        format: int32
        description: >-
          The number of times the container has been restarted, currently based
          on

          the number of dead containers that have not yet been removed.

          Note that this is calculated from dead containers. But those
          containers are subject to

          garbage collection. This value will get capped at 5 by GC.
      image:
        type: string
        title: |-
          The image the container is running.
          More info: https://kubernetes.io/docs/concepts/containers/images
          TODO(dchen1107): Which image the container is running with?
      imageID:
        type: string
        description: ImageID of the container's image.
      containerID:
        type: string
        title: |-
          Container's ID in the format 'docker://<container_id>'.
          +optional
    description: ContainerStatus contains details for the current status of this container.
  k8s.io.api.core.v1.DaemonEndpoint:
    type: object
    properties:
      Port:
        type: integer
        format: int32
        description: Port number of the given endpoint.
    description: DaemonEndpoint contains information about a single Daemon endpoint.
  k8s.io.api.core.v1.DownwardAPIProjection:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.DownwardAPIVolumeFile'
        title: |-
          Items is a list of DownwardAPIVolume file
          +optional
    description: >-
      Represents downward API info for projecting into a projected volume.

      Note that this is identical to a downwardAPI volume source without the
      default

      mode.
  k8s.io.api.core.v1.DownwardAPIVolumeFile:
    type: object
    properties:
      path:
        type: string
        title: >-
          Required: Path is  the relative path name of the file to be created.
          Must not be absolute or contain the '..' path. Must be utf-8 encoded.
          The first item of the relative path must not start with '..'
      fieldRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectFieldSelector'
        title: >-
          Required: Selects a field of the pod: only annotations, labels, name
          and namespace are supported.

          +optional
      resourceFieldRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ResourceFieldSelector'
        title: >-
          Selects a resource of the container: only resources limits and
          requests

          (limits.cpu, limits.memory, requests.cpu and requests.memory) are
          currently supported.

          +optional
      mode:
        type: integer
        format: int32
        title: |-
          Optional: mode bits to use on this file, must be a value between 0
          and 0777. If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
    title: >-
      DownwardAPIVolumeFile represents information to create the file containing
      the pod field
  k8s.io.api.core.v1.DownwardAPIVolumeSource:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.DownwardAPIVolumeFile'
        title: |-
          Items is a list of downward API volume file
          +optional
      defaultMode:
        type: integer
        format: int32
        title: |-
          Optional: mode bits to use on created files by default. Must be a
          value between 0 and 0777. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
    description: |-
      DownwardAPIVolumeSource represents a volume containing downward API info.
      Downward API volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.EmptyDirVolumeSource:
    type: object
    properties:
      medium:
        type: string
        title: >-
          What type of storage medium should back this directory.

          The default is "" which means to use the node's default medium.

          Must be an empty string (default) or Memory.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#emptydir

          +optional
      sizeLimit:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: >-
          Total amount of local storage required for this EmptyDir volume.

          The size limit is also applicable for memory medium.

          The maximum usage on memory medium EmptyDir would be the minimum value
          between

          the SizeLimit specified here and the sum of memory limits of all
          containers in a pod.

          The default is nil which means that the limit is undefined.

          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir

          +optional
    description: >-
      Represents an empty directory for a pod.

      Empty directory volumes support ownership management and SELinux
      relabeling.
  k8s.io.api.core.v1.EnvFromSource:
    type: object
    properties:
      prefix:
        type: string
        title: >-
          An optional identifier to prepend to each key in the ConfigMap. Must
          be a C_IDENTIFIER.

          +optional
      configMapRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ConfigMapEnvSource'
        title: |-
          The ConfigMap to select from
          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.SecretEnvSource'
        title: |-
          The Secret to select from
          +optional
    title: EnvFromSource represents the source of a set of ConfigMaps
  k8s.io.api.core.v1.EnvVar:
    type: object
    properties:
      name:
        type: string
        description: Name of the environment variable. Must be a C_IDENTIFIER.
      value:
        type: string
        title: |-
          Variable references $(VAR_NAME) are expanded
          using the previous defined environment variables in the container and
          any service environment variables. If a variable cannot be resolved,
          the reference in the input string will be unchanged. The $(VAR_NAME)
          syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
          references will never be expanded, regardless of whether the variable
          exists or not.
          Defaults to "".
          +optional
      valueFrom:
        $ref: '#/definitions/k8s.io.api.core.v1.EnvVarSource'
        title: >-
          Source for the environment variable's value. Cannot be used if value
          is not empty.

          +optional
    description: EnvVar represents an environment variable present in a Container.
  k8s.io.api.core.v1.EnvVarSource:
    type: object
    properties:
      fieldRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ObjectFieldSelector'
        title: >-
          Selects a field of the pod: supports metadata.name,
          metadata.namespace, metadata.labels, metadata.annotations,

          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.

          +optional
      resourceFieldRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ResourceFieldSelector'
        title: >-
          Selects a resource of the container: only resources limits and
          requests

          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu,
          requests.memory and requests.ephemeral-storage) are currently
          supported.

          +optional
      configMapKeyRef:
        $ref: '#/definitions/k8s.io.api.core.v1.ConfigMapKeySelector'
        title: |-
          Selects a key of a ConfigMap.
          +optional
      secretKeyRef:
        $ref: '#/definitions/k8s.io.api.core.v1.SecretKeySelector'
        title: |-
          Selects a key of a secret in the pod's namespace
          +optional
    description: EnvVarSource represents a source for the value of an EnvVar.
  k8s.io.api.core.v1.ExecAction:
    type: object
    properties:
      command:
        type: array
        items:
          type: string
        title: >-
          Command is the command line to execute inside the container, the
          working directory for the

          command  is root ('/') in the container's filesystem. The command is
          simply exec'd, it is

          not run inside a shell, so traditional shell instructions ('|', etc)
          won't work. To use

          a shell, you need to explicitly call out to that shell.

          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.

          +optional
    description: ExecAction describes a "run in container" action.
  k8s.io.api.core.v1.FCVolumeSource:
    type: object
    properties:
      targetWWNs:
        type: array
        items:
          type: string
        title: |-
          Optional: FC target worldwide names (WWNs)
          +optional
      lun:
        type: integer
        format: int32
        title: |-
          Optional: FC target lun number
          +optional
      fsType:
        type: string
        title: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          TODO: how do we prevent errors in the filesystem from compromising the
          machine

          +optional
      readOnly:
        type: boolean
        title: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
      wwids:
        type: array
        items:
          type: string
        title: >-
          Optional: FC volume world wide identifiers (wwids)

          Either wwids or combination of targetWWNs and lun must be set, but not
          both simultaneously.

          +optional
    description: |-
      Represents a Fibre Channel volume.
      Fibre Channel volumes can only be mounted as read/write once.
      Fibre Channel volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.FlexVolumeSource:
    type: object
    properties:
      driver:
        type: string
        description: Driver is the name of the driver to use for this volume.
      fsType:
        type: string
        title: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Ex. "ext4", "xfs", "ntfs". The default filesystem depends on
          FlexVolume script.

          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: |-
          Optional: SecretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be
          empty if no secret object is specified. If the secret object
          contains more than one secret, all secrets are passed to the plugin
          scripts.
          +optional
      readOnly:
        type: boolean
        title: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
      options:
        type: object
        additionalProperties:
          type: string
        title: |-
          Optional: Extra command options if any.
          +optional
    description: |-
      FlexVolume represents a generic volume resource that is
      provisioned/attached using an exec based plugin.
  k8s.io.api.core.v1.FlockerVolumeSource:
    type: object
    properties:
      datasetName:
        type: string
        title: >-
          Name of the dataset stored as metadata -> name on the dataset for
          Flocker

          should be considered as deprecated

          +optional
      datasetUUID:
        type: string
        title: |-
          UUID of the dataset. This is unique identifier of a Flocker dataset
          +optional
    description: |-
      Represents a Flocker volume mounted by the Flocker agent.
      One and only one of datasetName and datasetUUID should be set.
      Flocker volumes do not support ownership management or SELinux relabeling.
  k8s.io.api.core.v1.GCEPersistentDiskVolumeSource:
    type: object
    properties:
      pdName:
        type: string
        title: >-
          Unique name of the PD resource in GCE. Used to identify the disk in
          GCE.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
      fsType:
        type: string
        title: >-
          Filesystem type of the volume that you want to mount.

          Tip: Ensure that the filesystem type is supported by the host
          operating system.

          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

          TODO: how do we prevent errors in the filesystem from compromising the
          machine

          +optional
      partition:
        type: integer
        format: int32
        title: >-
          The partition in the volume that you want to mount.

          If omitted, the default is to mount by volume name.

          Examples: For volume /dev/sda1, you specify the partition as "1".

          Similarly, the volume partition for /dev/sda is "0" (or you can leave
          the property empty).

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

          +optional
      readOnly:
        type: boolean
        title: >-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.

          Defaults to false.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

          +optional
    description: |-
      Represents a Persistent Disk resource in Google Compute Engine.

      A GCE PD must exist before mounting to a container. The disk must
      also be in the same GCE project and zone as the kubelet. A GCE PD
      can only be mounted as read/write once or read-only many times. GCE
      PDs support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.GitRepoVolumeSource:
    type: object
    properties:
      repository:
        type: string
        title: Repository URL
      revision:
        type: string
        title: |-
          Commit hash for the specified revision.
          +optional
      directory:
        type: string
        title: >-
          Target directory name.

          Must not contain or start with '..'.  If '.' is supplied, the volume
          directory will be the

          git repository.  Otherwise, if specified, the volume will contain the
          git repository in

          the subdirectory with the given name.

          +optional
    description: >-
      Represents a volume that is populated with the contents of a git
      repository.

      Git repo volumes do not support ownership management.

      Git repo volumes support SELinux relabeling.


      DEPRECATED: GitRepo is deprecated. To provision a container with a git
      repo, mount an

      EmptyDir into an InitContainer that clones the repo using git, then mount
      the EmptyDir

      into the Pod's container.
  k8s.io.api.core.v1.GlusterfsVolumeSource:
    type: object
    properties:
      endpoints:
        type: string
        title: >-
          EndpointsName is the endpoint name that details Glusterfs topology.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
      path:
        type: string
        title: >-
          Path is the Glusterfs volume path.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod
      readOnly:
        type: boolean
        title: >-
          ReadOnly here will force the Glusterfs volume to be mounted with
          read-only permissions.

          Defaults to false.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod

          +optional
    description: >-
      Represents a Glusterfs mount that lasts the lifetime of a pod.

      Glusterfs volumes do not support ownership management or SELinux
      relabeling.
  k8s.io.api.core.v1.HTTPGetAction:
    type: object
    properties:
      path:
        type: string
        title: |-
          Path to access on the HTTP server.
          +optional
      port:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        description: |-
          Name or number of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
      host:
        type: string
        title: >-
          Host name to connect to, defaults to the pod IP. You probably want to
          set

          "Host" in httpHeaders instead.

          +optional
      scheme:
        type: string
        title: |-
          Scheme to use for connecting to the host.
          Defaults to HTTP.
          +optional
      httpHeaders:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.HTTPHeader'
        title: |-
          Custom headers to set in the request. HTTP allows repeated headers.
          +optional
    description: HTTPGetAction describes an action based on HTTP Get requests.
  k8s.io.api.core.v1.HTTPHeader:
    type: object
    properties:
      name:
        type: string
        title: The header field name
      value:
        type: string
        title: The header field value
    title: HTTPHeader describes a custom header to be used in HTTP probes
  k8s.io.api.core.v1.Handler:
    type: object
    properties:
      exec:
        $ref: '#/definitions/k8s.io.api.core.v1.ExecAction'
        title: |-
          One and only one of the following should be specified.
          Exec specifies the action to take.
          +optional
      httpGet:
        $ref: '#/definitions/k8s.io.api.core.v1.HTTPGetAction'
        title: |-
          HTTPGet specifies the http request to perform.
          +optional
      tcpSocket:
        $ref: '#/definitions/k8s.io.api.core.v1.TCPSocketAction'
        title: |-
          TCPSocket specifies an action involving a TCP port.
          TCP hooks not yet supported
          TODO: implement a realistic TCP lifecycle hook
          +optional
    description: |-
      Handler defines a specific action that should be taken
      TODO: pass structured data to these actions, and document that data here.
  k8s.io.api.core.v1.HostAlias:
    type: object
    properties:
      ip:
        type: string
        description: IP address of the host file entry.
      hostnames:
        type: array
        items:
          type: string
        description: Hostnames for the above IP address.
    description: >-
      HostAlias holds the mapping between IP and hostnames that will be injected
      as an entry in the

      pod's hosts file.
  k8s.io.api.core.v1.HostPathVolumeSource:
    type: object
    properties:
      path:
        type: string
        title: >-
          Path of the directory on the host.

          If the path is a symlink, it will follow the link to the real path.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#hostpath
      type:
        type: string
        title: >-
          Type for HostPath Volume

          Defaults to ""

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#hostpath

          +optional
    description: >-
      Represents a host path mapped into a pod.

      Host path volumes do not support ownership management or SELinux
      relabeling.
  k8s.io.api.core.v1.ISCSIVolumeSource:
    type: object
    properties:
      targetPortal:
        type: string
        description: >-
          iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the
          port

          is other than default (typically TCP ports 860 and 3260).
      iqn:
        type: string
        description: Target iSCSI Qualified Name.
      lun:
        type: integer
        format: int32
        description: iSCSI Target Lun number.
      iscsiInterface:
        type: string
        title: |-
          iSCSI Interface Name that uses an iSCSI transport.
          Defaults to 'default' (tcp).
          +optional
      fsType:
        type: string
        title: >-
          Filesystem type of the volume that you want to mount.

          Tip: Ensure that the filesystem type is supported by the host
          operating system.

          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi

          TODO: how do we prevent errors in the filesystem from compromising the
          machine

          +optional
      readOnly:
        type: boolean
        title: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          +optional
      portals:
        type: array
        items:
          type: string
        title: >-
          iSCSI Target Portal List. The portal is either an IP or ip_addr:port
          if the port

          is other than default (typically TCP ports 860 and 3260).

          +optional
      chapAuthDiscovery:
        type: boolean
        title: |-
          whether support iSCSI Discovery CHAP authentication
          +optional
      chapAuthSession:
        type: boolean
        title: |-
          whether support iSCSI Session CHAP authentication
          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: |-
          CHAP Secret for iSCSI target and initiator authentication
          +optional
      initiatorName:
        type: string
        title: >-
          Custom iSCSI Initiator Name.

          If initiatorName is specified with iscsiInterface simultaneously, new
          iSCSI interface

          <target portal>:<volume name> will be created for the connection.

          +optional
    description: |-
      Represents an ISCSI disk.
      ISCSI volumes can only be mounted as read/write once.
      ISCSI volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.KeyToPath:
    type: object
    properties:
      key:
        type: string
        description: The key to project.
      path:
        type: string
        description: |-
          The relative path of the file to map the key to.
          May not be an absolute path.
          May not contain the path element '..'.
          May not start with the string '..'.
      mode:
        type: integer
        format: int32
        title: |-
          Optional: mode bits to use on this file, must be a value between 0
          and 0777. If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
    description: Maps a string key to a path within a volume.
  k8s.io.api.core.v1.Lifecycle:
    type: object
    properties:
      postStart:
        $ref: '#/definitions/k8s.io.api.core.v1.Handler'
        title: >-
          PostStart is called immediately after a container is created. If the
          handler fails,

          the container is terminated and restarted according to its restart
          policy.

          Other management of the container blocks until the hook completes.

          More info:
          https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

          +optional
      preStop:
        $ref: '#/definitions/k8s.io.api.core.v1.Handler'
        title: >-
          PreStop is called immediately before a container is terminated due to
          an

          API request or management event such as liveness probe failure,

          preemption, resource contention, etc. The handler is not called if the

          container crashes or exits. The reason for termination is passed to
          the

          handler. The Pod's termination grace period countdown begins before
          the

          PreStop hooked is executed. Regardless of the outcome of the handler,
          the

          container will eventually terminate within the Pod's termination grace

          period. Other management of the container blocks until the hook
          completes

          or until the termination grace period is reached.

          More info:
          https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

          +optional
    description: >-
      Lifecycle describes actions that the management system should take in
      response to container lifecycle

      events. For the PostStart and PreStop lifecycle handlers, management of
      the container blocks

      until the action is complete, unless the container process fails, in which
      case the handler is aborted.
  k8s.io.api.core.v1.LoadBalancerIngress:
    type: object
    properties:
      ip:
        type: string
        title: |-
          IP is set for load-balancer ingress points that are IP based
          (typically GCE or OpenStack load-balancers)
          +optional
      hostname:
        type: string
        title: |-
          Hostname is set for load-balancer ingress points that are DNS based
          (typically AWS load-balancers)
          +optional
    description: >-
      LoadBalancerIngress represents the status of a load-balancer ingress
      point:

      traffic intended for the service should be sent to an ingress point.
  k8s.io.api.core.v1.LoadBalancerStatus:
    type: object
    properties:
      ingress:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.LoadBalancerIngress'
        title: >-
          Ingress is a list containing ingress points for the load-balancer.

          Traffic intended for the service should be sent to these ingress
          points.

          +optional
    description: LoadBalancerStatus represents the status of a load-balancer.
  k8s.io.api.core.v1.LocalObjectReference:
    type: object
    properties:
      name:
        type: string
        title: >-
          Name of the referent.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names

          TODO: Add other useful fields. apiVersion, kind, uid?

          +optional
    description: |-
      LocalObjectReference contains enough information to let you locate the
      referenced object inside the same namespace.
  k8s.io.api.core.v1.NFSVolumeSource:
    type: object
    properties:
      server:
        type: string
        title: |-
          Server is the hostname or IP address of the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
      path:
        type: string
        title: |-
          Path that is exported by the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
      readOnly:
        type: boolean
        title: |-
          ReadOnly here will force
          the NFS export to be mounted with read-only permissions.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
    description: |-
      Represents an NFS mount that lasts the lifetime of a pod.
      NFS volumes do not support ownership management or SELinux relabeling.
  k8s.io.api.core.v1.Namespace:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.NamespaceSpec'
        title: >-
          Spec defines the behavior of the Namespace.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.core.v1.NamespaceStatus'
        title: >-
          Status describes the current status of a Namespace.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: |-
      Namespace provides a scope for Names.
      Use of multiple namespaces is optional.
  k8s.io.api.core.v1.NamespaceSpec:
    type: object
    properties:
      finalizers:
        type: array
        items:
          type: string
        title: >-
          Finalizers is an opaque list of values that must be empty to
          permanently remove object from storage.

          More info:
          https://kubernetes.io/docs/tasks/administer-cluster/namespaces/

          +optional
    description: NamespaceSpec describes the attributes on a Namespace.
  k8s.io.api.core.v1.NamespaceStatus:
    type: object
    properties:
      phase:
        type: string
        title: >-
          Phase is the current lifecycle phase of the namespace.

          More info:
          https://kubernetes.io/docs/tasks/administer-cluster/namespaces/

          +optional
    description: NamespaceStatus is information about the current status of a Namespace.
  k8s.io.api.core.v1.Node:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeSpec'
        title: >-
          Spec defines the behavior of a node.

          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeStatus'
        title: >-
          Most recently observed status of the node.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: |-
      Node is a worker node in Kubernetes.
      Each node will have a unique identifier in the cache (i.e. in etcd).
  k8s.io.api.core.v1.NodeAddress:
    type: object
    properties:
      type:
        type: string
        description: Node address type, one of Hostname, ExternalIP or InternalIP.
      address:
        type: string
        description: The node address.
    description: NodeAddress contains information for the node's address.
  k8s.io.api.core.v1.NodeAffinity:
    type: object
    properties:
      requiredDuringSchedulingIgnoredDuringExecution:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeSelector'
        title: |-
          If the affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to an update), the system
          may or may not try to eventually evict the pod from its node.
          +optional
      preferredDuringSchedulingIgnoredDuringExecution:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PreferredSchedulingTerm'
        title: >-
          The scheduler will prefer to schedule pods to nodes that satisfy

          the affinity expressions specified by this field, but it may choose

          a node that violates one or more of the expressions. The node that is

          most preferred is the one with the greatest sum of weights, i.e.

          for each node that meets all of the scheduling requirements (resource

          request, requiredDuringScheduling affinity expressions, etc.),

          compute a sum by iterating through the elements of this field and
          adding

          "weight" to the sum if the node matches the corresponding
          matchExpressions; the

          node(s) with the highest sum are the most preferred.

          +optional
    description: Node affinity is a group of node affinity scheduling rules.
  k8s.io.api.core.v1.NodeCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of node condition.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastHeartbeatTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time we got an update on a given condition.
          +optional
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition transit from one status to another.
          +optional
      reason:
        type: string
        title: |-
          (brief) reason for the condition's last transition.
          +optional
      message:
        type: string
        title: |-
          Human readable message indicating details about last transition.
          +optional
    description: NodeCondition contains condition information for a node.
  k8s.io.api.core.v1.NodeConfigSource:
    type: object
    properties:
      configMap:
        $ref: '#/definitions/k8s.io.api.core.v1.ConfigMapNodeConfigSource'
        title: ConfigMap is a reference to a Node's ConfigMap
    description: >-
      NodeConfigSource specifies a source of node configuration. Exactly one
      subfield (excluding metadata) must be non-nil.
  k8s.io.api.core.v1.NodeConfigStatus:
    type: object
    properties:
      assigned:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeConfigSource'
        title: >-
          Assigned reports the checkpointed config the node will try to use.

          When Node.Spec.ConfigSource is updated, the node checkpoints the
          associated

          config payload to local disk, along with a record indicating intended

          config. The node refers to this record to choose its config
          checkpoint, and

          reports this record in Assigned. Assigned only updates in the status
          after

          the record has been checkpointed to disk. When the Kubelet is
          restarted,

          it tries to make the Assigned config the Active config by loading and

          validating the checkpointed payload identified by Assigned.

          +optional
      active:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeConfigSource'
        title: >-
          Active reports the checkpointed config the node is actively using.

          Active will represent either the current version of the Assigned
          config,

          or the current LastKnownGood config, depending on whether attempting
          to use the

          Assigned config results in an error.

          +optional
      lastKnownGood:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeConfigSource'
        title: >-
          LastKnownGood reports the checkpointed config the node will fall back
          to

          when it encounters an error attempting to use the Assigned config.

          The Assigned config becomes the LastKnownGood config when the node
          determines

          that the Assigned config is stable and correct.

          This is currently implemented as a 10-minute soak period starting when
          the local

          record of Assigned config is updated. If the Assigned config is Active
          at the end

          of this period, it becomes the LastKnownGood. Note that if
          Spec.ConfigSource is

          reset to nil (use local defaults), the LastKnownGood is also
          immediately reset to nil,

          because the local default config is always assumed good.

          You should not make assumptions about the node's method of determining
          config stability

          and correctness, as this may change or become configurable in the
          future.

          +optional
      error:
        type: string
        title: >-
          Error describes any problems reconciling the Spec.ConfigSource to the
          Active config.

          Errors may occur, for example, attempting to checkpoint
          Spec.ConfigSource to the local Assigned

          record, attempting to checkpoint the payload associated with
          Spec.ConfigSource, attempting

          to load or validate the Assigned config, etc.

          Errors may occur at different points while syncing config. Earlier
          errors (e.g. download or

          checkpointing errors) will not result in a rollback to LastKnownGood,
          and may resolve across

          Kubelet retries. Later errors (e.g. loading or validating a
          checkpointed config) will result in

          a rollback to LastKnownGood. In the latter case, it is usually
          possible to resolve the error

          by fixing the config assigned in Spec.ConfigSource.

          You can find additional information for debugging by searching the
          error message in the Kubelet log.

          Error is a human-readable description of the error state; machines can
          check whether or not Error

          is empty, but should not rely on the stability of the Error text
          across Kubelet versions.

          +optional
    description: >-
      NodeConfigStatus describes the status of the config assigned by
      Node.Spec.ConfigSource.
  k8s.io.api.core.v1.NodeDaemonEndpoints:
    type: object
    properties:
      kubeletEndpoint:
        $ref: '#/definitions/k8s.io.api.core.v1.DaemonEndpoint'
        title: |-
          Endpoint on which Kubelet is listening.
          +optional
    description: NodeDaemonEndpoints lists ports opened by daemons running on the Node.
  k8s.io.api.core.v1.NodeSelector:
    type: object
    properties:
      nodeSelectorTerms:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.NodeSelectorTerm'
        description: Required. A list of node selector terms. The terms are ORed.
    description: >-
      A node selector represents the union of the results of one or more label
      queries

      over a set of nodes; that is, it represents the OR of the selectors
      represented

      by the node selector terms.
  k8s.io.api.core.v1.NodeSelectorRequirement:
    type: object
    properties:
      key:
        type: string
        description: The label key that the selector applies to.
      operator:
        type: string
        description: |-
          Represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
      values:
        type: array
        items:
          type: string
        title: >-
          An array of string values. If the operator is In or NotIn,

          the values array must be non-empty. If the operator is Exists or
          DoesNotExist,

          the values array must be empty. If the operator is Gt or Lt, the
          values

          array must have a single element, which will be interpreted as an
          integer.

          This array is replaced during a strategic merge patch.

          +optional
    description: >-
      A node selector requirement is a selector that contains values, a key, and
      an operator

      that relates the key and values.
  k8s.io.api.core.v1.NodeSelectorTerm:
    type: object
    properties:
      matchExpressions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.NodeSelectorRequirement'
        title: |-
          A list of node selector requirements by node's labels.
          +optional
      matchFields:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.NodeSelectorRequirement'
        title: |-
          A list of node selector requirements by node's fields.
          +optional
    description: |-
      A null or empty node selector term matches no objects. The requirements of
      them are ANDed.
      The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
  k8s.io.api.core.v1.NodeSpec:
    type: object
    properties:
      podCIDR:
        type: string
        title: |-
          PodCIDR represents the pod IP range assigned to the node.
          +optional
      providerID:
        type: string
        title: >-
          ID of the node assigned by the cloud provider in the format:
          <ProviderName>://<ProviderSpecificNodeID>

          +optional
      unschedulable:
        type: boolean
        title: >-
          Unschedulable controls node schedulability of new pods. By default,
          node is schedulable.

          More info:
          https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration

          +optional
      taints:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.Taint'
        title: |-
          If specified, the node's taints.
          +optional
      configSource:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeConfigSource'
        title: >-
          If specified, the source to get node configuration from

          The DynamicKubeletConfig feature gate must be enabled for the Kubelet
          to use this field

          +optional
      externalID:
        type: string
        title: >-
          Deprecated. Not all kubelets will set this field. Remove field after
          1.13.

          see: https://issues.k8s.io/61966

          +optional
    description: NodeSpec describes the attributes that a node is created with.
  k8s.io.api.core.v1.NodeStatus:
    type: object
    properties:
      capacity:
        type: object
        additionalProperties:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: >-
          Capacity represents the total resources of a node.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity

          +optional
      allocatable:
        type: object
        additionalProperties:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: >-
          Allocatable represents the resources of a node that are available for
          scheduling.

          Defaults to Capacity.

          +optional
      phase:
        type: string
        title: |-
          NodePhase is the recently observed lifecycle phase of the node.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#phase
          The field is never populated, and now is deprecated.
          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.NodeCondition'
        title: |-
          Conditions is an array of current observed node conditions.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
      addresses:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.NodeAddress'
        title: |-
          List of addresses reachable to the node.
          Queried from cloud provider, if available.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
      daemonEndpoints:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeDaemonEndpoints'
        title: |-
          Endpoints of daemons running on the Node.
          +optional
      nodeInfo:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeSystemInfo'
        title: |-
          Set of ids/uuids to uniquely identify the node.
          More info: https://kubernetes.io/docs/concepts/nodes/node/#info
          +optional
      images:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ContainerImage'
        title: |-
          List of container images on this node
          +optional
      volumesInUse:
        type: array
        items:
          type: string
        title: |-
          List of attachable volumes in use (mounted) by the node.
          +optional
      volumesAttached:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.AttachedVolume'
        title: |-
          List of volumes that are attached to the node.
          +optional
      config:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeConfigStatus'
        title: >-
          Status of the config assigned to the node via the dynamic Kubelet
          config feature.

          +optional
    description: NodeStatus is information about the current status of a node.
  k8s.io.api.core.v1.NodeSystemInfo:
    type: object
    properties:
      machineID:
        type: string
        title: |-
          MachineID reported by the node. For unique machine identification
          in the cluster this field is preferred. Learn more from man(5)
          machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
      systemUUID:
        type: string
        title: >-
          SystemUUID reported by the node. For unique machine identification

          MachineID is preferred. This field is specific to Red Hat hosts

          https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html
      bootID:
        type: string
        description: Boot ID reported by the node.
      kernelVersion:
        type: string
        description: >-
          Kernel Version reported by the node from 'uname -r' (e.g.
          3.16.0-0.bpo.4-amd64).
      osImage:
        type: string
        description: >-
          OS Image reported by the node from /etc/os-release (e.g. Debian
          GNU/Linux 7 (wheezy)).
      containerRuntimeVersion:
        type: string
        description: >-
          ContainerRuntime Version reported by the node through runtime remote
          API (e.g. docker://1.5.0).
      kubeletVersion:
        type: string
        description: Kubelet Version reported by the node.
      kubeProxyVersion:
        type: string
        description: KubeProxy Version reported by the node.
      operatingSystem:
        type: string
        title: The Operating System reported by the node
      architecture:
        type: string
        title: The Architecture reported by the node
    description: NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
  k8s.io.api.core.v1.ObjectFieldSelector:
    type: object
    properties:
      apiVersion:
        type: string
        title: >-
          Version of the schema the FieldPath is written in terms of, defaults
          to "v1".

          +optional
      fieldPath:
        type: string
        description: Path of the field to select in the specified API version.
    description: ObjectFieldSelector selects an APIVersioned field of an object.
  k8s.io.api.core.v1.PersistentVolumeClaim:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimSpec'
        title: >-
          Spec defines the desired characteristics of a volume requested by a
          pod author.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimStatus'
        title: >-
          Status represents the current information/status of a persistent
          volume claim.

          Read-only.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

          +optional
    title: >-
      PersistentVolumeClaim is a user's request for and claim to a persistent
      volume
  k8s.io.api.core.v1.PersistentVolumeClaimCondition:
    type: object
    properties:
      type:
        type: string
      status:
        type: string
      lastProbeTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time we probed the condition.
          +optional
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition transitioned from one status to another.
          +optional
      reason:
        type: string
        title: >-
          Unique, this should be a short, machine understandable string that
          gives the reason

          for condition's last transition. If it reports "ResizeStarted" that
          means the underlying

          persistent volume is being resized.

          +optional
      message:
        type: string
        title: |-
          Human-readable message indicating details about last transition.
          +optional
    title: PersistentVolumeClaimCondition contails details about state of pvc
  k8s.io.api.core.v1.PersistentVolumeClaimSpec:
    type: object
    properties:
      accessModes:
        type: array
        items:
          type: string
        title: >-
          AccessModes contains the desired access modes the volume should have.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1

          +optional
      selector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        title: |-
          A label query over volumes to consider for binding.
          +optional
      resources:
        $ref: '#/definitions/k8s.io.api.core.v1.ResourceRequirements'
        title: >-
          Resources represents the minimum resources the volume should have.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

          +optional
      volumeName:
        type: string
        title: >-
          VolumeName is the binding reference to the PersistentVolume backing
          this claim.

          +optional
      storageClassName:
        type: string
        title: >-
          Name of the StorageClass required by the claim.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1

          +optional
      volumeMode:
        type: string
        title: |-
          volumeMode defines what type of volume is required by the claim.
          Value of Filesystem is implied when not included in claim spec.
          This is a beta feature.
          +optional
      dataSource:
        $ref: '#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference'
        title: >-
          This field requires the VolumeSnapshotDataSource alpha feature gate to
          be

          enabled and currently VolumeSnapshot is the only supported data
          source.

          If the provisioner can support VolumeSnapshot data source, it will
          create

          a new volume and data will be restored to the volume at the same time.

          If the provisioner does not support VolumeSnapshot data source, volume
          will

          not be created and the failure will be reported as an event.

          In the future, we plan to support more data source types and the
          behavior

          of the provisioner may change.

          +optional
    title: >-
      PersistentVolumeClaimSpec describes the common attributes of storage
      devices

      and allows a Source for provider-specific attributes
  k8s.io.api.core.v1.PersistentVolumeClaimStatus:
    type: object
    properties:
      phase:
        type: string
        title: |-
          Phase represents the current phase of PersistentVolumeClaim.
          +optional
      accessModes:
        type: array
        items:
          type: string
        title: >-
          AccessModes contains the actual access modes the volume backing the
          PVC has.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1

          +optional
      capacity:
        type: object
        additionalProperties:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: |-
          Represents the actual resources of the underlying volume.
          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimCondition'
        title: >-
          Current Condition of persistent volume claim. If underlying persistent
          volume is being

          resized then the Condition will be set to 'ResizeStarted'.

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
    description: >-
      PersistentVolumeClaimStatus is the current status of a persistent volume
      claim.
  k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource:
    type: object
    properties:
      claimName:
        type: string
        title: >-
          ClaimName is the name of a PersistentVolumeClaim in the same namespace
          as the pod using this volume.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
      readOnly:
        type: boolean
        title: |-
          Will force the ReadOnly setting in VolumeMounts.
          Default false.
          +optional
    description: >-
      PersistentVolumeClaimVolumeSource references the user's PVC in the same
      namespace.

      This volume finds the bound PV and mounts that volume for the pod. A

      PersistentVolumeClaimVolumeSource is, essentially, a wrapper around
      another

      type of volume that is owned by someone else (the system).
  k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource:
    type: object
    properties:
      pdID:
        type: string
        title: ID that identifies Photon Controller persistent disk
      fsType:
        type: string
        description: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.
    description: Represents a Photon Controller persistent disk resource.
  k8s.io.api.core.v1.Pod:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.PodSpec'
        title: >-
          Specification of the desired behavior of the pod.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.core.v1.PodStatus'
        title: >-
          Most recently observed status of the pod.

          This data may not be up to date.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: >-
      Pod is a collection of containers that can run on a host. This resource is
      created

      by clients and scheduled onto hosts.
  k8s.io.api.core.v1.PodAffinity:
    type: object
    properties:
      requiredDuringSchedulingIgnoredDuringExecution:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PodAffinityTerm'
        title: >-
          If the affinity requirements specified by this field are not met at

          scheduling time, the pod will not be scheduled onto the node.

          If the affinity requirements specified by this field cease to be met

          at some point during pod execution (e.g. due to a pod label update),
          the

          system may or may not try to eventually evict the pod from its node.

          When there are multiple elements, the lists of nodes corresponding to
          each

          podAffinityTerm are intersected, i.e. all terms must be satisfied.

          +optional
      preferredDuringSchedulingIgnoredDuringExecution:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.WeightedPodAffinityTerm'
        title: >-
          The scheduler will prefer to schedule pods to nodes that satisfy

          the affinity expressions specified by this field, but it may choose

          a node that violates one or more of the expressions. The node that is

          most preferred is the one with the greatest sum of weights, i.e.

          for each node that meets all of the scheduling requirements (resource

          request, requiredDuringScheduling affinity expressions, etc.),

          compute a sum by iterating through the elements of this field and
          adding

          "weight" to the sum if the node has pods which matches the
          corresponding podAffinityTerm; the

          node(s) with the highest sum are the most preferred.

          +optional
    description: Pod affinity is a group of inter pod affinity scheduling rules.
  k8s.io.api.core.v1.PodAffinityTerm:
    type: object
    properties:
      labelSelector:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        title: |-
          A label query over a set of resources, in this case pods.
          +optional
      namespaces:
        type: array
        items:
          type: string
        title: >-
          namespaces specifies which namespaces the labelSelector applies to
          (matches against);

          null or empty list means "this pod's namespace"

          +optional
      topologyKey:
        type: string
        description: >-
          This pod should be co-located (affinity) or not co-located
          (anti-affinity) with the pods matching

          the labelSelector in the specified namespaces, where co-located is
          defined as running on a node

          whose value of the label with key topologyKey matches that of any node
          on which any of the

          selected pods is running.

          Empty topologyKey is not allowed.
    title: |-
      Defines a set of pods (namely those matching the labelSelector
      relative to the given namespace(s)) that this pod should be
      co-located (affinity) or not co-located (anti-affinity) with,
      where co-located is defined as running on a node whose value of
      the label with key <topologyKey> matches that of any node on which
      a pod of the set of pods is running
  k8s.io.api.core.v1.PodAntiAffinity:
    type: object
    properties:
      requiredDuringSchedulingIgnoredDuringExecution:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PodAffinityTerm'
        title: >-
          If the anti-affinity requirements specified by this field are not met
          at

          scheduling time, the pod will not be scheduled onto the node.

          If the anti-affinity requirements specified by this field cease to be
          met

          at some point during pod execution (e.g. due to a pod label update),
          the

          system may or may not try to eventually evict the pod from its node.

          When there are multiple elements, the lists of nodes corresponding to
          each

          podAffinityTerm are intersected, i.e. all terms must be satisfied.

          +optional
      preferredDuringSchedulingIgnoredDuringExecution:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.WeightedPodAffinityTerm'
        title: >-
          The scheduler will prefer to schedule pods to nodes that satisfy

          the anti-affinity expressions specified by this field, but it may
          choose

          a node that violates one or more of the expressions. The node that is

          most preferred is the one with the greatest sum of weights, i.e.

          for each node that meets all of the scheduling requirements (resource

          request, requiredDuringScheduling anti-affinity expressions, etc.),

          compute a sum by iterating through the elements of this field and
          adding

          "weight" to the sum if the node has pods which matches the
          corresponding podAffinityTerm; the

          node(s) with the highest sum are the most preferred.

          +optional
    description: Pod anti affinity is a group of inter pod anti affinity scheduling rules.
  k8s.io.api.core.v1.PodCondition:
    type: object
    properties:
      type:
        type: string
        title: >-
          Type is the type of the condition.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
      status:
        type: string
        title: >-
          Status is the status of the condition.

          Can be True, False, Unknown.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
      lastProbeTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time we probed the condition.
          +optional
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          Last time the condition transitioned from one status to another.
          +optional
      reason:
        type: string
        title: >-
          Unique, one-word, CamelCase reason for the condition's last
          transition.

          +optional
      message:
        type: string
        title: |-
          Human-readable message indicating details about last transition.
          +optional
    description: PodCondition contains details for the current condition of this pod.
  k8s.io.api.core.v1.PodDNSConfig:
    type: object
    properties:
      nameservers:
        type: array
        items:
          type: string
        title: >-
          A list of DNS name server IP addresses.

          This will be appended to the base nameservers generated from
          DNSPolicy.

          Duplicated nameservers will be removed.

          +optional
      searches:
        type: array
        items:
          type: string
        title: >-
          A list of DNS search domains for host-name lookup.

          This will be appended to the base search paths generated from
          DNSPolicy.

          Duplicated search paths will be removed.

          +optional
      options:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PodDNSConfigOption'
        title: >-
          A list of DNS resolver options.

          This will be merged with the base options generated from DNSPolicy.

          Duplicated entries will be removed. Resolution options given in
          Options

          will override those that appear in the base DNSPolicy.

          +optional
    description: |-
      PodDNSConfig defines the DNS parameters of a pod in addition to
      those generated from DNSPolicy.
  k8s.io.api.core.v1.PodDNSConfigOption:
    type: object
    properties:
      name:
        type: string
        description: Required.
      value:
        type: string
        title: +optional
    description: PodDNSConfigOption defines DNS resolver options of a pod.
  k8s.io.api.core.v1.PodReadinessGate:
    type: object
    properties:
      conditionType:
        type: string
        description: >-
          ConditionType refers to a condition in the pod's condition list with
          matching type.
    title: PodReadinessGate contains the reference to a pod condition
  k8s.io.api.core.v1.PodSecurityContext:
    type: object
    properties:
      seLinuxOptions:
        $ref: '#/definitions/k8s.io.api.core.v1.SELinuxOptions'
        title: >-
          The SELinux context to be applied to all containers.

          If unspecified, the container runtime will allocate a random SELinux
          context for each

          container.  May also be set in SecurityContext.  If set in

          both SecurityContext and PodSecurityContext, the value specified in
          SecurityContext

          takes precedence for that container.

          +optional
      runAsUser:
        type: string
        format: int64
        title: >-
          The UID to run the entrypoint of the container process.

          Defaults to user specified in image metadata if unspecified.

          May also be set in SecurityContext.  If set in both SecurityContext
          and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence

          for that container.

          +optional
      runAsGroup:
        type: string
        format: int64
        title: >-
          The GID to run the entrypoint of the container process.

          Uses runtime default if unset.

          May also be set in SecurityContext.  If set in both SecurityContext
          and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence

          for that container.

          +optional
      runAsNonRoot:
        type: boolean
        title: >-
          Indicates that the container must run as a non-root user.

          If true, the Kubelet will validate the image at runtime to ensure that
          it

          does not run as UID 0 (root) and fail to start the container if it
          does.

          If unset or false, no such validation will be performed.

          May also be set in SecurityContext.  If set in both SecurityContext
          and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence.

          +optional
      supplementalGroups:
        type: array
        items:
          type: string
          format: int64
        title: >-
          A list of groups applied to the first process run in each container,
          in addition

          to the container's primary GID.  If unspecified, no groups will be
          added to

          any container.

          +optional
      fsGroup:
        type: string
        format: int64
        description: >-
          1. The owning GID will be the FSGroup

          2. The setgid bit is set (new files created in the volume will be
          owned by FSGroup)

          3. The permission bits are OR'd with rw-rw----


          If unset, the Kubelet will not modify the ownership and permissions of
          any volume.

          +optional
        title: >-
          A special supplemental group that applies to all containers in a pod.

          Some volume types allow the Kubelet to change the ownership of that
          volume

          to be owned by the pod:
      sysctls:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.Sysctl'
        title: >-
          Sysctls hold a list of namespaced sysctls used for the pod. Pods with
          unsupported

          sysctls (by the container runtime) might fail to launch.

          +optional
    description: >-
      PodSecurityContext holds pod-level security attributes and common
      container settings.

      Some fields are also present in container.securityContext.  Field values
      of

      container.securityContext take precedence over field values of
      PodSecurityContext.
  k8s.io.api.core.v1.PodSpec:
    type: object
    properties:
      volumes:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.Volume'
        title: >-
          List of volumes that can be mounted by containers belonging to the
          pod.

          More info: https://kubernetes.io/docs/concepts/storage/volumes

          +optional

          +patchMergeKey=name

          +patchStrategy=merge,retainKeys
      initContainers:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.Container'
        title: >-
          List of initialization containers belonging to the pod.

          Init containers are executed in order prior to containers being
          started. If any

          init container fails, the pod is considered to have failed and is
          handled according

          to its restartPolicy. The name for an init container or normal
          container must be

          unique among all containers.

          Init containers may not have Lifecycle actions, Readiness probes, or
          Liveness probes.

          The resourceRequirements of an init container are taken into account
          during scheduling

          by finding the highest request/limit for each resource type, and then
          using the max of

          of that value or the sum of the normal containers. Limits are applied
          to init containers

          in a similar fashion.

          Init containers cannot currently be added or removed.

          Cannot be updated.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/init-containers/

          +patchMergeKey=name

          +patchStrategy=merge
      containers:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.Container'
        title: |-
          List of containers belonging to the pod.
          Containers cannot currently be added or removed.
          There must be at least one container in a Pod.
          Cannot be updated.
          +patchMergeKey=name
          +patchStrategy=merge
      restartPolicy:
        type: string
        title: >-
          Restart policy for all containers within the pod.

          One of Always, OnFailure, Never.

          Default to Always.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy

          +optional
      terminationGracePeriodSeconds:
        type: string
        format: int64
        title: >-
          Optional duration in seconds the pod needs to terminate gracefully.
          May be decreased in delete request.

          Value must be non-negative integer. The value zero indicates delete
          immediately.

          If this value is nil, the default grace period will be used instead.

          The grace period is the duration in seconds after the processes
          running in the pod are sent

          a termination signal and the time when the processes are forcibly
          halted with a kill signal.

          Set this value longer than the expected cleanup time for your process.

          Defaults to 30 seconds.

          +optional
      activeDeadlineSeconds:
        type: string
        format: int64
        title: >-
          Optional duration in seconds the pod may be active on the node
          relative to

          StartTime before the system will actively try to mark it failed and
          kill associated containers.

          Value must be a positive integer.

          +optional
      dnsPolicy:
        type: string
        title: >-
          Set DNS policy for the pod.

          Defaults to "ClusterFirst".

          Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default'
          or 'None'.

          DNS parameters given in DNSConfig will be merged with the policy
          selected with DNSPolicy.

          To have DNS options set along with hostNetwork, you have to specify
          DNS policy

          explicitly to 'ClusterFirstWithHostNet'.

          +optional
      nodeSelector:
        type: object
        additionalProperties:
          type: string
        title: >-
          NodeSelector is a selector which must be true for the pod to fit on a
          node.

          Selector which must match a node's labels for the pod to be scheduled
          on that node.

          More info:
          https://kubernetes.io/docs/concepts/configuration/assign-pod-node/

          +optional
      serviceAccountName:
        type: string
        title: >-
          ServiceAccountName is the name of the ServiceAccount to use to run
          this pod.

          More info:
          https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/

          +optional
      serviceAccount:
        type: string
        title: >-
          DeprecatedServiceAccount is a depreciated alias for
          ServiceAccountName.

          Deprecated: Use serviceAccountName instead.

          +k8s:conversion-gen=false

          +optional
      automountServiceAccountToken:
        type: boolean
        title: >-
          AutomountServiceAccountToken indicates whether a service account token
          should be automatically mounted.

          +optional
      nodeName:
        type: string
        title: >-
          NodeName is a request to schedule this pod onto a specific node. If it
          is non-empty,

          the scheduler simply schedules this pod onto that node, assuming that
          it fits resource

          requirements.

          +optional
      hostNetwork:
        type: boolean
        title: >-
          Host networking requested for this pod. Use the host's network
          namespace.

          If this option is set, the ports that will be used must be specified.

          Default to false.

          +k8s:conversion-gen=false

          +optional
      hostPID:
        type: boolean
        title: |-
          Use the host's pid namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
      hostIPC:
        type: boolean
        title: |-
          Use the host's ipc namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
      shareProcessNamespace:
        type: boolean
        title: >-
          Share a single process namespace between all of the containers in a
          pod.

          When this is set containers will be able to view and signal processes
          from other containers

          in the same pod, and the first process in each container will not be
          assigned PID 1.

          HostPID and ShareProcessNamespace cannot both be set.

          Optional: Default to false.

          This field is beta-level and may be disabled with the
          PodShareProcessNamespace feature.

          +k8s:conversion-gen=false

          +optional
      securityContext:
        $ref: '#/definitions/k8s.io.api.core.v1.PodSecurityContext'
        title: >-
          SecurityContext holds pod-level security attributes and common
          container settings.

          Optional: Defaults to empty.  See type description for default values
          of each field.

          +optional
      imagePullSecrets:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: >-
          ImagePullSecrets is an optional list of references to secrets in the
          same namespace to use for pulling any of the images used by this
          PodSpec.

          If specified, these secrets will be passed to individual puller
          implementations for them to use. For example,

          in the case of docker, only DockerConfig type secrets are honored.

          More info:
          https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod

          +optional

          +patchMergeKey=name

          +patchStrategy=merge
      hostname:
        type: string
        title: >-
          Specifies the hostname of the Pod

          If not specified, the pod's hostname will be set to a system-defined
          value.

          +optional
      subdomain:
        type: string
        title: >-
          If specified, the fully qualified Pod hostname will be
          "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".

          If not specified, the pod will not have a domainname at all.

          +optional
      affinity:
        $ref: '#/definitions/k8s.io.api.core.v1.Affinity'
        title: |-
          If specified, the pod's scheduling constraints
          +optional
      schedulerName:
        type: string
        title: |-
          If specified, the pod will be dispatched by specified scheduler.
          If not specified, the pod will be dispatched by default scheduler.
          +optional
      tolerations:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.Toleration'
        title: |-
          If specified, the pod's tolerations.
          +optional
      hostAliases:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.HostAlias'
        title: >-
          HostAliases is an optional list of hosts and IPs that will be injected
          into the pod's hosts

          file if specified. This is only valid for non-hostNetwork pods.

          +optional

          +patchMergeKey=ip

          +patchStrategy=merge
      priorityClassName:
        type: string
        title: >-
          If specified, indicates the pod's priority. "system-node-critical" and

          "system-cluster-critical" are two special keywords which indicate the

          highest priorities with the former being the highest priority. Any
          other

          name must be defined by creating a PriorityClass object with that
          name.

          If not specified, the pod priority will be default or zero if there is
          no

          default.

          +optional
      priority:
        type: integer
        format: int32
        title: >-
          The priority value. Various system components use this field to find
          the

          priority of the pod. When Priority Admission Controller is enabled, it

          prevents users from setting this field. The admission controller
          populates

          this field from PriorityClassName.

          The higher the value, the higher the priority.

          +optional
      dnsConfig:
        $ref: '#/definitions/k8s.io.api.core.v1.PodDNSConfig'
        title: |-
          Specifies the DNS parameters of a pod.
          Parameters specified here will be merged to the generated DNS
          configuration based on DNSPolicy.
          +optional
      readinessGates:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PodReadinessGate'
        title: >-
          If specified, all readiness gates will be evaluated for pod readiness.

          A pod is ready when all its containers are ready AND

          all conditions specified in the readiness gates have status equal to
          "True"

          More info:
          https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md

          +optional
      runtimeClassName:
        type: string
        title: >-
          RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
          group, which should be used

          to run this pod.  If no RuntimeClass resource matches the named class,
          the pod will not be run.

          If unset or empty, the "legacy" RuntimeClass will be used, which is an
          implicit class with an

          empty definition that uses the default runtime handler.

          More info:
          https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md

          This is an alpha feature and may change in the future.

          +optional
      enableServiceLinks:
        type: boolean
        title: >-
          EnableServiceLinks indicates whether information about services should
          be injected into pod's

          environment variables, matching the syntax of Docker links.

          Optional: Defaults to true.

          +optional
    description: PodSpec is a description of a pod.
  k8s.io.api.core.v1.PodStatus:
    type: object
    properties:
      phase:
        type: string
        description: >-
          Pending: The pod has been accepted by the Kubernetes system, but one
          or more of the

          container images has not been created. This includes time before being
          scheduled as

          well as time spent downloading images over the network, which could
          take a while.

          Running: The pod has been bound to a node, and all of the containers
          have been created.

          At least one container is still running, or is in the process of
          starting or restarting.

          Succeeded: All containers in the pod have terminated in success, and
          will not be restarted.

          Failed: All containers in the pod have terminated, and at least one
          container has

          terminated in failure. The container either exited with non-zero
          status or was terminated

          by the system.

          Unknown: For some reason the state of the pod could not be obtained,
          typically due to an

          error in communicating with the host of the pod.


          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase

          +optional
        title: >-
          The phase of a Pod is a simple, high-level summary of where the Pod is
          in its lifecycle.

          The conditions array, the reason and message fields, and the
          individual container status

          arrays contain more detail about the pod's status.

          There are five possible phase values:
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.PodCondition'
        title: >-
          Current service state of pod.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
      message:
        type: string
        title: >-
          A human readable message indicating details about why the pod is in
          this condition.

          +optional
      reason:
        type: string
        title: >-
          A brief CamelCase message indicating details about why the pod is in
          this state.

          e.g. 'Evicted'

          +optional
      nominatedNodeName:
        type: string
        title: >-
          nominatedNodeName is set only when this pod preempts other pods on the
          node, but it cannot be

          scheduled right away as preemption victims receive their graceful
          termination periods.

          This field does not guarantee that the pod will be scheduled on this
          node. Scheduler may decide

          to place the pod elsewhere if other nodes become available sooner.
          Scheduler may also decide to

          give the resources on this node to a higher priority pod that is
          created after preemption.

          As a result, this field may be different than PodSpec.nodeName when
          the pod is

          scheduled.

          +optional
      hostIP:
        type: string
        title: >-
          IP address of the host to which the pod is assigned. Empty if not yet
          scheduled.

          +optional
      podIP:
        type: string
        title: |-
          IP address allocated to the pod. Routable at least within the cluster.
          Empty if not yet allocated.
          +optional
      startTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: >-
          RFC 3339 date and time at which the object was acknowledged by the
          Kubelet.

          This is before the Kubelet pulled the container image(s) for the pod.

          +optional
      initContainerStatuses:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ContainerStatus'
        title: >-
          The list has one entry per init container in the manifest. The most
          recent successful

          init container will have ready = true, the most recently started
          container will have

          startTime set.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
      containerStatuses:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ContainerStatus'
        title: >-
          The list has one entry per container in the manifest. Each entry is
          currently the output

          of `docker inspect`.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status

          +optional
      qosClass:
        type: string
        title: >-
          The Quality of Service (QOS) classification assigned to the pod based
          on resource requirements

          See PodQOSClass type for available QOS classes

          More info:
          https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md

          +optional
    description: >-
      PodStatus represents information about the status of a pod. Status may
      trail the actual

      state of a system, especially if the node that hosts the pod cannot
      contact the control

      plane.
  k8s.io.api.core.v1.PodTemplateSpec:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.PodSpec'
        title: >-
          Specification of the desired behavior of the pod.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    title: >-
      PodTemplateSpec describes the data a pod should have when created from a
      template
  k8s.io.api.core.v1.PortworxVolumeSource:
    type: object
    properties:
      volumeID:
        type: string
        title: VolumeID uniquely identifies a Portworx volume
      fsType:
        type: string
        description: |-
          FSType represents the filesystem type to mount
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
      readOnly:
        type: boolean
        title: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
    description: PortworxVolumeSource represents a Portworx volume resource.
  k8s.io.api.core.v1.PreferredSchedulingTerm:
    type: object
    properties:
      weight:
        type: integer
        format: int32
        description: >-
          Weight associated with matching the corresponding nodeSelectorTerm, in
          the range 1-100.
      preference:
        $ref: '#/definitions/k8s.io.api.core.v1.NodeSelectorTerm'
        description: A node selector term, associated with the corresponding weight.
    description: >-
      An empty preferred scheduling term matches all objects with implicit
      weight 0

      (i.e. it's a no-op). A null preferred scheduling term matches no objects
      (i.e. is also a no-op).
  k8s.io.api.core.v1.Probe:
    type: object
    properties:
      handler:
        $ref: '#/definitions/k8s.io.api.core.v1.Handler'
        title: The action taken to determine the health of a container
      initialDelaySeconds:
        type: integer
        format: int32
        title: >-
          Number of seconds after the container has started before liveness
          probes are initiated.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

          +optional
      timeoutSeconds:
        type: integer
        format: int32
        title: >-
          Number of seconds after which the probe times out.

          Defaults to 1 second. Minimum value is 1.

          More info:
          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

          +optional
      periodSeconds:
        type: integer
        format: int32
        title: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
      successThreshold:
        type: integer
        format: int32
        title: >-
          Minimum consecutive successes for the probe to be considered
          successful after having failed.

          Defaults to 1. Must be 1 for liveness. Minimum value is 1.

          +optional
      failureThreshold:
        type: integer
        format: int32
        title: >-
          Minimum consecutive failures for the probe to be considered failed
          after having succeeded.

          Defaults to 3. Minimum value is 1.

          +optional
    description: >-
      Probe describes a health check to be performed against a container to
      determine whether it is

      alive or ready to receive traffic.
  k8s.io.api.core.v1.ProjectedVolumeSource:
    type: object
    properties:
      sources:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.VolumeProjection'
        title: list of volume projections
      defaultMode:
        type: integer
        format: int32
        title: |-
          Mode bits to use on created files by default. Must be a value between
          0 and 0777.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
    title: Represents a projected volume source
  k8s.io.api.core.v1.QuobyteVolumeSource:
    type: object
    properties:
      registry:
        type: string
        title: >-
          Registry represents a single or multiple Quobyte Registry services

          specified as a string as host:port pair (multiple entries are
          separated with commas)

          which acts as the central registry for volumes
      volume:
        type: string
        description: >-
          Volume is a string that references an already created Quobyte volume
          by name.
      readOnly:
        type: boolean
        title: >-
          ReadOnly here will force the Quobyte volume to be mounted with
          read-only permissions.

          Defaults to false.

          +optional
      user:
        type: string
        title: |-
          User to map volume access to
          Defaults to serivceaccount user
          +optional
      group:
        type: string
        title: |-
          Group to map volume access to
          Default is no group
          +optional
      tenant:
        type: string
        title: >-
          Tenant owning the given Quobyte volume in the Backend

          Used with dynamically provisioned Quobyte volumes, value is set by the
          plugin

          +optional
    description: |-
      Represents a Quobyte mount that lasts the lifetime of a pod.
      Quobyte volumes do not support ownership management or SELinux relabeling.
  k8s.io.api.core.v1.RBDVolumeSource:
    type: object
    properties:
      monitors:
        type: array
        items:
          type: string
        title: >-
          A collection of Ceph monitors.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
      image:
        type: string
        title: >-
          The rados image name.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it
      fsType:
        type: string
        title: >-
          Filesystem type of the volume that you want to mount.

          Tip: Ensure that the filesystem type is supported by the host
          operating system.

          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd

          TODO: how do we prevent errors in the filesystem from compromising the
          machine

          +optional
      pool:
        type: string
        title: >-
          The rados pool name.

          Default is rbd.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it

          +optional
      user:
        type: string
        title: >-
          The rados user name.

          Default is admin.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it

          +optional
      keyring:
        type: string
        title: >-
          Keyring is the path to key ring for RBDUser.

          Default is /etc/ceph/keyring.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it

          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: >-
          SecretRef is name of the authentication secret for RBDUser. If
          provided

          overrides keyring.

          Default is nil.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it

          +optional
      readOnly:
        type: boolean
        title: >-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.

          Defaults to false.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it

          +optional
    description: |-
      Represents a Rados Block Device mount that lasts the lifetime of a pod.
      RBD volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.ReplicationController:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          If the Labels of a ReplicationController are empty, they are defaulted
          to

          be the same as the Pod(s) that the replication controller manages.

          Standard object's metadata. More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.ReplicationControllerSpec'
        title: >-
          Spec defines the specification of the desired behavior of the
          replication controller.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.core.v1.ReplicationControllerStatus'
        title: >-
          Status is the most recently observed status of the replication
          controller.

          This data may be out of date by some window of time.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: >-
      ReplicationController represents the configuration of a replication
      controller.
  k8s.io.api.core.v1.ReplicationControllerCondition:
    type: object
    properties:
      type:
        type: string
        description: Type of replication controller condition.
      status:
        type: string
        description: Status of the condition, one of True, False, Unknown.
      lastTransitionTime:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          The last time the condition transitioned from one status to another.
          +optional
      reason:
        type: string
        title: |-
          The reason for the condition's last transition.
          +optional
      message:
        type: string
        title: |-
          A human readable message indicating details about the transition.
          +optional
    description: >-
      ReplicationControllerCondition describes the state of a replication
      controller at a certain point.
  k8s.io.api.core.v1.ReplicationControllerSpec:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        title: >-
          Replicas is the number of desired replicas.

          This is a pointer to distinguish between explicit zero and
          unspecified.

          Defaults to 1.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller

          +optional
      minReadySeconds:
        type: integer
        format: int32
        title: >-
          Minimum number of seconds for which a newly created pod should be
          ready

          without any of its container crashing, for it to be considered
          available.

          Defaults to 0 (pod will be considered available as soon as it is
          ready)

          +optional
      selector:
        type: object
        additionalProperties:
          type: string
        title: >-
          Selector is a label query over pods that should match the Replicas
          count.

          If Selector is empty, it is defaulted to the labels present on the Pod
          template.

          Label keys and values that must match in order to be controlled by
          this replication

          controller, if empty defaulted to labels on Pod template.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors

          +optional
      template:
        $ref: '#/definitions/k8s.io.api.core.v1.PodTemplateSpec'
        title: >-
          Template is the object that describes the pod that will be created if

          insufficient replicas are detected. This takes precedence over a
          TemplateRef.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template

          +optional
    description: >-
      ReplicationControllerSpec is the specification of a replication
      controller.
  k8s.io.api.core.v1.ReplicationControllerStatus:
    type: object
    properties:
      replicas:
        type: integer
        format: int32
        title: >-
          Replicas is the most recently oberved number of replicas.

          More info:
          https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
      fullyLabeledReplicas:
        type: integer
        format: int32
        title: >-
          The number of pods that have labels matching the labels of the pod
          template of the replication controller.

          +optional
      readyReplicas:
        type: integer
        format: int32
        title: |-
          The number of ready replicas for this replication controller.
          +optional
      availableReplicas:
        type: integer
        format: int32
        title: >-
          The number of available replicas (ready for at least minReadySeconds)
          for this replication controller.

          +optional
      observedGeneration:
        type: string
        format: int64
        title: >-
          ObservedGeneration reflects the generation of the most recently
          observed replication controller.

          +optional
      conditions:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ReplicationControllerCondition'
        title: >-
          Represents the latest available observations of a replication
          controller's current state.

          +optional

          +patchMergeKey=type

          +patchStrategy=merge
    description: |-
      ReplicationControllerStatus represents the current status of a replication
      controller.
  k8s.io.api.core.v1.ResourceFieldSelector:
    type: object
    properties:
      containerName:
        type: string
        title: |-
          Container name: required for volumes, optional for env vars
          +optional
      resource:
        type: string
        title: 'Required: resource to select'
      divisor:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: |-
          Specifies the output format of the exposed resources, defaults to "1"
          +optional
    title: >-
      ResourceFieldSelector represents container resources (cpu, memory) and
      their output format
  k8s.io.api.core.v1.ResourceRequirements:
    type: object
    properties:
      limits:
        type: object
        additionalProperties:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: >-
          Limits describes the maximum amount of compute resources allowed.

          More info:
          https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

          +optional
      requests:
        type: object
        additionalProperties:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity'
        title: >-
          Requests describes the minimum amount of compute resources required.

          If Requests is omitted for a container, it defaults to Limits if that
          is explicitly specified,

          otherwise to an implementation-defined value.

          More info:
          https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

          +optional
    description: ResourceRequirements describes the compute resource requirements.
  k8s.io.api.core.v1.SELinuxOptions:
    type: object
    properties:
      user:
        type: string
        title: |-
          User is a SELinux user label that applies to the container.
          +optional
      role:
        type: string
        title: |-
          Role is a SELinux role label that applies to the container.
          +optional
      type:
        type: string
        title: |-
          Type is a SELinux type label that applies to the container.
          +optional
      level:
        type: string
        title: |-
          Level is SELinux level label that applies to the container.
          +optional
    title: SELinuxOptions are the labels to be applied to the container
  k8s.io.api.core.v1.ScaleIOVolumeSource:
    type: object
    properties:
      gateway:
        type: string
        description: The host address of the ScaleIO API Gateway.
      system:
        type: string
        description: The name of the storage system as configured in ScaleIO.
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        description: >-
          SecretRef references to the secret for ScaleIO user and other

          sensitive information. If this is not provided, Login operation will
          fail.
      sslEnabled:
        type: boolean
        title: |-
          Flag to enable/disable SSL communication with Gateway, default false
          +optional
      protectionDomain:
        type: string
        title: |-
          The name of the ScaleIO Protection Domain for the configured storage.
          +optional
      storagePool:
        type: string
        title: |-
          The ScaleIO Storage Pool associated with the protection domain.
          +optional
      storageMode:
        type: string
        title: >-
          Indicates whether the storage for a volume should be ThickProvisioned
          or ThinProvisioned.

          Default is ThinProvisioned.

          +optional
      volumeName:
        type: string
        description: |-
          The name of a volume already created in the ScaleIO system
          that is associated with this volume source.
      fsType:
        type: string
        title: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          Default is "xfs".
          +optional
      readOnly:
        type: boolean
        title: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
    title: ScaleIOVolumeSource represents a persistent ScaleIO volume
  k8s.io.api.core.v1.SecretEnvSource:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        description: The Secret to select from.
      optional:
        type: boolean
        title: |-
          Specify whether the Secret must be defined
          +optional
    description: |-
      SecretEnvSource selects a Secret to populate the environment
      variables with.

      The contents of the target Secret's Data field will represent the
      key-value pairs as environment variables.
  k8s.io.api.core.v1.SecretKeySelector:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        description: The name of the secret in the pod's namespace to select from.
      key:
        type: string
        description: The key of the secret to select from.  Must be a valid secret key.
      optional:
        type: boolean
        title: |-
          Specify whether the Secret or it's key must be defined
          +optional
    description: SecretKeySelector selects a key of a Secret.
  k8s.io.api.core.v1.SecretProjection:
    type: object
    properties:
      localObjectReference:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
      items:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.KeyToPath'
        title: >-
          If unspecified, each key-value pair in the Data field of the
          referenced

          Secret will be projected into the volume as a file whose name is the

          key and content is the value. If specified, the listed keys will be

          projected into the specified paths, and unlisted keys will not be

          present. If a key is specified which is not present in the Secret,

          the volume setup will error unless it is marked optional. Paths must
          be

          relative and may not contain the '..' path or start with '..'.

          +optional
      optional:
        type: boolean
        title: |-
          Specify whether the Secret or its key must be defined
          +optional
    description: >-
      Adapts a secret into a projected volume.


      The contents of the target Secret's Data field will be presented in a

      projected volume as files using the keys in the Data field as the file
      names.

      Note that this is identical to a secret volume source without the default

      mode.
  k8s.io.api.core.v1.SecretVolumeSource:
    type: object
    properties:
      secretName:
        type: string
        title: |-
          Name of the secret in the pod's namespace to use.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
      items:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.KeyToPath'
        title: >-
          If unspecified, each key-value pair in the Data field of the
          referenced

          Secret will be projected into the volume as a file whose name is the

          key and content is the value. If specified, the listed keys will be

          projected into the specified paths, and unlisted keys will not be

          present. If a key is specified which is not present in the Secret,

          the volume setup will error unless it is marked optional. Paths must
          be

          relative and may not contain the '..' path or start with '..'.

          +optional
      defaultMode:
        type: integer
        format: int32
        title: |-
          Optional: mode bits to use on created files by default. Must be a
          value between 0 and 0777. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
      optional:
        type: boolean
        title: |-
          Specify whether the Secret or it's keys must be defined
          +optional
    description: >-
      Adapts a Secret into a volume.


      The contents of the target Secret's Data field will be presented in a
      volume

      as files using the keys in the Data field as the file names.

      Secret volumes support ownership management and SELinux relabeling.
  k8s.io.api.core.v1.SecurityContext:
    type: object
    properties:
      capabilities:
        $ref: '#/definitions/k8s.io.api.core.v1.Capabilities'
        title: >-
          The capabilities to add/drop when running containers.

          Defaults to the default set of capabilities granted by the container
          runtime.

          +optional
      privileged:
        type: boolean
        title: >-
          Run container in privileged mode.

          Processes in privileged containers are essentially equivalent to root
          on the host.

          Defaults to false.

          +optional
      seLinuxOptions:
        $ref: '#/definitions/k8s.io.api.core.v1.SELinuxOptions'
        title: >-
          The SELinux context to be applied to the container.

          If unspecified, the container runtime will allocate a random SELinux
          context for each

          container.  May also be set in PodSecurityContext.  If set in both
          SecurityContext and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence.

          +optional
      runAsUser:
        type: string
        format: int64
        title: >-
          The UID to run the entrypoint of the container process.

          Defaults to user specified in image metadata if unspecified.

          May also be set in PodSecurityContext.  If set in both SecurityContext
          and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence.

          +optional
      runAsGroup:
        type: string
        format: int64
        title: >-
          The GID to run the entrypoint of the container process.

          Uses runtime default if unset.

          May also be set in PodSecurityContext.  If set in both SecurityContext
          and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence.

          +optional
      runAsNonRoot:
        type: boolean
        title: >-
          Indicates that the container must run as a non-root user.

          If true, the Kubelet will validate the image at runtime to ensure that
          it

          does not run as UID 0 (root) and fail to start the container if it
          does.

          If unset or false, no such validation will be performed.

          May also be set in PodSecurityContext.  If set in both SecurityContext
          and

          PodSecurityContext, the value specified in SecurityContext takes
          precedence.

          +optional
      readOnlyRootFilesystem:
        type: boolean
        title: |-
          Whether this container has a read-only root filesystem.
          Default is false.
          +optional
      allowPrivilegeEscalation:
        type: boolean
        title: |-
          AllowPrivilegeEscalation controls whether a process can gain more
          privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process.
          AllowPrivilegeEscalation is true always when the container is:
          1) run as Privileged
          2) has CAP_SYS_ADMIN
          +optional
      procMount:
        type: string
        title: >-
          procMount denotes the type of proc mount to use for the containers.

          The default is DefaultProcMount which uses the container runtime
          defaults for

          readonly paths and masked paths.

          This requires the ProcMountType feature flag to be enabled.

          +optional
    description: >-
      SecurityContext holds security configuration that will be applied to a
      container.

      Some fields are present in both SecurityContext and PodSecurityContext. 
      When both

      are set, the values in SecurityContext take precedence.
  k8s.io.api.core.v1.Service:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        title: >-
          Standard object's metadata.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata

          +optional
      spec:
        $ref: '#/definitions/k8s.io.api.core.v1.ServiceSpec'
        title: >-
          Spec defines the behavior of a service.

          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
      status:
        $ref: '#/definitions/k8s.io.api.core.v1.ServiceStatus'
        title: >-
          Most recently observed status of the service.

          Populated by the system.

          Read-only.

          More info:
          https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status

          +optional
    description: >-
      Service is a named abstraction of software service (for example, mysql)
      consisting of local port

      (for example 3306) that the proxy listens on, and the selector that
      determines which pods

      will answer requests sent through the proxy.
  k8s.io.api.core.v1.ServiceAccountTokenProjection:
    type: object
    properties:
      audience:
        type: string
        title: >-
          Audience is the intended audience of the token. A recipient of a token

          must identify itself with an identifier specified in the audience of
          the

          token, and otherwise should reject the token. The audience defaults to
          the

          identifier of the apiserver.

          +optional
      expirationSeconds:
        type: string
        format: int64
        title: >-
          ExpirationSeconds is the requested duration of validity of the service

          account token. As the token approaches expiration, the kubelet volume

          plugin will proactively rotate the service account token. The kubelet
          will

          start trying to rotate the token if the token is older than 80 percent
          of

          its time to live or if the token is older than 24 hours.Defaults to 1
          hour

          and must be at least 10 minutes.

          +optional
      path:
        type: string
        description: >-
          Path is the path relative to the mount point of the file to project
          the

          token into.
    description: |-
      ServiceAccountTokenProjection represents a projected service account token
      volume. This projection can be used to insert a service account token into
      the pods runtime filesystem for use against APIs (Kubernetes API Server or
      otherwise).
  k8s.io.api.core.v1.ServicePort:
    type: object
    properties:
      name:
        type: string
        title: |-
          The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. This maps to
          the 'Name' field in EndpointPort objects.
          Optional if only one ServicePort is defined on this service.
          +optional
      protocol:
        type: string
        title: |-
          The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
          Default is TCP.
          +optional
      port:
        type: integer
        format: int32
        description: The port that will be exposed by this service.
      targetPort:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        title: >-
          Number or name of the port to access on the pods targeted by the
          service.

          Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.

          If this is a string, it will be looked up as a named port in the

          target Pod's container ports. If this is not specified, the value

          of the 'port' field is used (an identity map).

          This field is ignored for services with clusterIP=None, and should be

          omitted or set equal to the 'port' field.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service

          +optional
      nodePort:
        type: integer
        format: int32
        title: >-
          The port on each node on which this service is exposed when
          type=NodePort or LoadBalancer.

          Usually assigned by the system. If specified, it will be allocated to
          the service

          if unused or else creation of the service will fail.

          Default is to auto-allocate a port if the ServiceType of this Service
          requires one.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport

          +optional
    description: ServicePort contains information on service's port.
  k8s.io.api.core.v1.ServiceSpec:
    type: object
    properties:
      ports:
        type: array
        items:
          $ref: '#/definitions/k8s.io.api.core.v1.ServicePort'
        title: >-
          The list of ports that are exposed by this service.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

          +patchMergeKey=port

          +patchStrategy=merge

          +listType=map

          +listMapKey=port

          +listMapKey=protocol
      selector:
        type: object
        additionalProperties:
          type: string
        title: >-
          Route service traffic to pods with label keys and values matching this

          selector. If empty or not present, the service is assumed to have an

          external process managing its endpoints, which Kubernetes will not

          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.

          Ignored if type is ExternalName.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/

          +optional
      clusterIP:
        type: string
        title: >-
          clusterIP is the IP address of the service and is usually assigned

          randomly by the master. If an address is specified manually and is not
          in

          use by others, it will be allocated to the service; otherwise,
          creation

          of the service will fail. This field can not be changed through
          updates.

          Valid values are "None", empty string (""), or a valid IP address.
          "None"

          can be specified for headless services when proxying is not required.

          Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored
          if

          type is ExternalName.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

          +optional
      type:
        type: string
        title: >-
          type determines how the Service is exposed. Defaults to ClusterIP.
          Valid

          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.

          "ExternalName" maps to the specified externalName.

          "ClusterIP" allocates a cluster-internal IP address for load-balancing
          to

          endpoints. Endpoints are determined by the selector or if that is not

          specified, by manual construction of an Endpoints object. If clusterIP
          is

          "None", no virtual IP is allocated and the endpoints are published as
          a

          set of endpoints rather than a stable IP.

          "NodePort" builds on ClusterIP and allocates a port on every node
          which

          routes to the clusterIP.

          "LoadBalancer" builds on NodePort and creates an

          external load-balancer (if supported in the current cloud) which
          routes

          to the clusterIP.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types

          +optional
      externalIPs:
        type: array
        items:
          type: string
        title: >-
          externalIPs is a list of IP addresses for which nodes in the cluster

          will also accept traffic for this service.  These IPs are not managed
          by

          Kubernetes.  The user is responsible for ensuring that traffic arrives

          at a node with this IP.  A common example is external load-balancers

          that are not part of the Kubernetes system.

          +optional
      sessionAffinity:
        type: string
        title: >-
          Supports "ClientIP" and "None". Used to maintain session affinity.

          Enable client IP based session affinity.

          Must be ClientIP or None.

          Defaults to None.

          More info:
          https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies

          +optional
      loadBalancerIP:
        type: string
        title: >-
          Only applies to Service Type: LoadBalancer

          LoadBalancer will get created with the IP specified in this field.

          This feature depends on whether the underlying cloud-provider supports
          specifying

          the loadBalancerIP when a load balancer is created.

          This field will be ignored if the cloud-provider does not support the
          feature.

          +optional
      loadBalancerSourceRanges:
        type: array
        items:
          type: string
        title: >-
          If specified and supported by the platform, this will restrict traffic
          through the cloud-provider

          load-balancer will be restricted to the specified client IPs. This
          field will be ignored if the

          cloud-provider does not support the feature."

          More info:
          https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/

          +optional
      externalName:
        type: string
        title: >-
          externalName is the external reference that kubedns or equivalent will

          return as a CNAME record for this service. No proxying will be
          involved.

          Must be a valid RFC-1123 hostname
          (https://tools.ietf.org/html/rfc1123)

          and requires Type to be ExternalName.

          +optional
      externalTrafficPolicy:
        type: string
        title: >-
          externalTrafficPolicy denotes if this Service desires to route
          external

          traffic to node-local or cluster-wide endpoints. "Local" preserves the

          client source IP and avoids a second hop for LoadBalancer and Nodeport

          type services, but risks potentially imbalanced traffic spreading.

          "Cluster" obscures the client source IP and may cause a second hop to

          another node, but should have good overall load-spreading.

          +optional
      healthCheckNodePort:
        type: integer
        format: int32
        title: >-
          healthCheckNodePort specifies the healthcheck nodePort for the
          service.

          If not specified, HealthCheckNodePort is created by the service api

          backend with the allocated nodePort. Will use user-specified nodePort
          value

          if specified by the client. Only effects when Type is set to
          LoadBalancer

          and ExternalTrafficPolicy is set to Local.

          +optional
      publishNotReadyAddresses:
        type: boolean
        title: >-
          publishNotReadyAddresses, when set to true, indicates that DNS
          implementations

          must publish the notReadyAddresses of subsets for the Endpoints
          associated with

          the Service. The default value is false.

          The primary use case for setting this field is to use a StatefulSet's
          Headless Service

          to propagate SRV records for its Pods without respect to their
          readiness for purpose

          of peer discovery.

          +optional
      sessionAffinityConfig:
        $ref: '#/definitions/k8s.io.api.core.v1.SessionAffinityConfig'
        title: |-
          sessionAffinityConfig contains the configurations of session affinity.
          +optional
    description: ServiceSpec describes the attributes that a user creates on a service.
  k8s.io.api.core.v1.ServiceStatus:
    type: object
    properties:
      loadBalancer:
        $ref: '#/definitions/k8s.io.api.core.v1.LoadBalancerStatus'
        title: |-
          LoadBalancer contains the current status of the load-balancer,
          if one is present.
          +optional
    description: ServiceStatus represents the current status of a service.
  k8s.io.api.core.v1.SessionAffinityConfig:
    type: object
    properties:
      clientIP:
        $ref: '#/definitions/k8s.io.api.core.v1.ClientIPConfig'
        title: >-
          clientIP contains the configurations of Client IP based session
          affinity.

          +optional
    description: SessionAffinityConfig represents the configurations of session affinity.
  k8s.io.api.core.v1.StorageOSVolumeSource:
    type: object
    properties:
      volumeName:
        type: string
        description: |-
          VolumeName is the human-readable name of the StorageOS volume.  Volume
          names are only unique within a namespace.
      volumeNamespace:
        type: string
        title: >-
          VolumeNamespace specifies the scope of the volume within StorageOS. 
          If no

          namespace is specified then the Pod's namespace will be used.  This
          allows the

          Kubernetes name scoping to be mirrored within StorageOS for tighter
          integration.

          Set VolumeName to any name to override the default behaviour.

          Set to "default" if you are not using namespaces within StorageOS.

          Namespaces that do not pre-exist within StorageOS will be created.

          +optional
      fsType:
        type: string
        title: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          +optional
      readOnly:
        type: boolean
        title: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
      secretRef:
        $ref: '#/definitions/k8s.io.api.core.v1.LocalObjectReference'
        title: |-
          SecretRef specifies the secret to use for obtaining the StorageOS API
          credentials.  If not specified, default values will be attempted.
          +optional
    description: Represents a StorageOS persistent volume resource.
  k8s.io.api.core.v1.Sysctl:
    type: object
    properties:
      name:
        type: string
        title: Name of a property to set
      value:
        type: string
        title: Value of a property to set
    title: Sysctl defines a kernel parameter to be set
  k8s.io.api.core.v1.TCPSocketAction:
    type: object
    properties:
      port:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
        description: |-
          Number or name of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
      host:
        type: string
        title: |-
          Optional: Host name to connect to, defaults to the pod IP.
          +optional
    title: TCPSocketAction describes an action based on opening a socket
  k8s.io.api.core.v1.Taint:
    type: object
    properties:
      key:
        type: string
        description: Required. The taint key to be applied to a node.
      value:
        type: string
        title: |-
          Required. The taint value corresponding to the taint key.
          +optional
      effect:
        type: string
        description: >-
          Required. The effect of the taint on pods that do not tolerate the
          taint.

          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
      timeAdded:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time'
        title: |-
          TimeAdded represents the time at which the taint was added.
          It is only written for NoExecute taints.
          +optional
    description: |-
      The node this Taint is attached to has the "effect" on
      any pod that does not tolerate the Taint.
  k8s.io.api.core.v1.Toleration:
    type: object
    properties:
      key:
        type: string
        title: >-
          Key is the taint key that the toleration applies to. Empty means match
          all taint keys.

          If the key is empty, operator must be Exists; this combination means
          to match all values and all keys.

          +optional
      operator:
        type: string
        title: |-
          Operator represents a key's relationship to the value.
          Valid operators are Exists and Equal. Defaults to Equal.
          Exists is equivalent to wildcard for value, so that a pod can
          tolerate all taints of a particular category.
          +optional
      value:
        type: string
        title: >-
          Value is the taint value the toleration matches to.

          If the operator is Exists, the value should be empty, otherwise just a
          regular string.

          +optional
      effect:
        type: string
        title: >-
          Effect indicates the taint effect to match. Empty means match all
          taint effects.

          When specified, allowed values are NoSchedule, PreferNoSchedule and
          NoExecute.

          +optional
      tolerationSeconds:
        type: string
        format: int64
        title: >-
          TolerationSeconds represents the period of time the toleration (which
          must be

          of effect NoExecute, otherwise this field is ignored) tolerates the
          taint. By default,

          it is not set, which means tolerate the taint forever (do not evict).
          Zero and

          negative values will be treated as 0 (evict immediately) by the
          system.

          +optional
    description: |-
      The pod this Toleration is attached to tolerates any taint that matches
      the triple <key,value,effect> using the matching operator <operator>.
  k8s.io.api.core.v1.TypedLocalObjectReference:
    type: object
    properties:
      apiGroup:
        type: string
        title: >-
          APIGroup is the group for the resource being referenced.

          If APIGroup is not specified, the specified Kind must be in the core
          API group.

          For any other third-party types, APIGroup is required.

          +optional
      kind:
        type: string
        title: Kind is the type of resource being referenced
      name:
        type: string
        title: Name is the name of resource being referenced
    description: >-
      TypedLocalObjectReference contains enough information to let you locate
      the

      typed referenced object inside the same namespace.
  k8s.io.api.core.v1.Volume:
    type: object
    properties:
      name:
        type: string
        title: >-
          Volume's name.

          Must be a DNS_LABEL and unique within the pod.

          More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
      volumeSource:
        $ref: '#/definitions/k8s.io.api.core.v1.VolumeSource'
        description: >-
          VolumeSource represents the location and type of the mounted volume.

          If not specified, the Volume is implied to be an EmptyDir.

          This implied behavior is deprecated and will be removed in a future
          version.
    description: >-
      Volume represents a named volume in a pod that may be accessed by any
      container in the pod.
  k8s.io.api.core.v1.VolumeDevice:
    type: object
    properties:
      name:
        type: string
        title: name must match the name of a persistentVolumeClaim in the pod
      devicePath:
        type: string
        description: >-
          devicePath is the path inside of the container that the device will be
          mapped to.
    description: volumeDevice describes a mapping of a raw block device within a container.
  k8s.io.api.core.v1.VolumeMount:
    type: object
    properties:
      name:
        type: string
        description: This must match the Name of a Volume.
      readOnly:
        type: boolean
        title: >-
          Mounted read-only if true, read-write otherwise (false or
          unspecified).

          Defaults to false.

          +optional
      mountPath:
        type: string
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
      subPath:
        type: string
        title: >-
          Path within the volume from which the container's volume should be
          mounted.

          Defaults to "" (volume's root).

          +optional
      mountPropagation:
        type: string
        title: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationNone is used.
          This field is beta in 1.10.
          +optional
      subPathExpr:
        type: string
        title: >-
          Expanded path within the volume from which the container's volume
          should be mounted.

          Behaves similarly to SubPath but environment variable references
          $(VAR_NAME) are expanded using the container's environment.

          Defaults to "" (volume's root).

          SubPathExpr and SubPath are mutually exclusive.

          This field is alpha in 1.14.

          +optional
    description: VolumeMount describes a mounting of a Volume within a container.
  k8s.io.api.core.v1.VolumeProjection:
    type: object
    properties:
      secret:
        $ref: '#/definitions/k8s.io.api.core.v1.SecretProjection'
        title: |-
          information about the secret data to project
          +optional
      downwardAPI:
        $ref: '#/definitions/k8s.io.api.core.v1.DownwardAPIProjection'
        title: |-
          information about the downwardAPI data to project
          +optional
      configMap:
        $ref: '#/definitions/k8s.io.api.core.v1.ConfigMapProjection'
        title: |-
          information about the configMap data to project
          +optional
      serviceAccountToken:
        $ref: '#/definitions/k8s.io.api.core.v1.ServiceAccountTokenProjection'
        title: |-
          information about the serviceAccountToken data to project
          +optional
    title: Projection that may be projected along with other supported volume types
  k8s.io.api.core.v1.VolumeSource:
    type: object
    properties:
      hostPath:
        $ref: '#/definitions/k8s.io.api.core.v1.HostPathVolumeSource'
        title: >-
          HostPath represents a pre-existing file or directory on the host

          machine that is directly exposed to the container. This is generally

          used for system agents or other privileged things that are allowed

          to see the host machine. Most containers will NOT need this.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#hostpath

          ---

          TODO(jonesdl) We need to restrict who can use host directory mounts
          and who can/can not

          mount host directories as read/write.

          +optional
      emptyDir:
        $ref: '#/definitions/k8s.io.api.core.v1.EmptyDirVolumeSource'
        title: >-
          EmptyDir represents a temporary directory that shares a pod's
          lifetime.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#emptydir

          +optional
      gcePersistentDisk:
        $ref: '#/definitions/k8s.io.api.core.v1.GCEPersistentDiskVolumeSource'
        title: >-
          GCEPersistentDisk represents a GCE Disk resource that is attached to a

          kubelet's host machine and then exposed to the pod.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

          +optional
      awsElasticBlockStore:
        $ref: '#/definitions/k8s.io.api.core.v1.AWSElasticBlockStoreVolumeSource'
        title: >-
          AWSElasticBlockStore represents an AWS Disk resource that is attached
          to a

          kubelet's host machine and then exposed to the pod.

          More info:
          https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

          +optional
      gitRepo:
        $ref: '#/definitions/k8s.io.api.core.v1.GitRepoVolumeSource'
        title: >-
          GitRepo represents a git repository at a particular revision.

          DEPRECATED: GitRepo is deprecated. To provision a container with a git
          repo, mount an

          EmptyDir into an InitContainer that clones the repo using git, then
          mount the EmptyDir

          into the Pod's container.

          +optional
      secret:
        $ref: '#/definitions/k8s.io.api.core.v1.SecretVolumeSource'
        title: |-
          Secret represents a secret that should populate this volume.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
      nfs:
        $ref: '#/definitions/k8s.io.api.core.v1.NFSVolumeSource'
        title: |-
          NFS represents an NFS mount on the host that shares a pod's lifetime
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
      iscsi:
        $ref: '#/definitions/k8s.io.api.core.v1.ISCSIVolumeSource'
        title: >-
          ISCSI represents an ISCSI Disk resource that is attached to a

          kubelet's host machine and then exposed to the pod.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md

          +optional
      glusterfs:
        $ref: '#/definitions/k8s.io.api.core.v1.GlusterfsVolumeSource'
        title: >-
          Glusterfs represents a Glusterfs mount on the host that shares a pod's
          lifetime.

          More info:
          https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md

          +optional
      persistentVolumeClaim:
        $ref: '#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource'
        title: >-
          PersistentVolumeClaimVolumeSource represents a reference to a

          PersistentVolumeClaim in the same namespace.

          More info:
          https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

          +optional
      rbd:
        $ref: '#/definitions/k8s.io.api.core.v1.RBDVolumeSource'
        title: >-
          RBD represents a Rados Block Device mount on the host that shares a
          pod's lifetime.

          More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md

          +optional
      flexVolume:
        $ref: '#/definitions/k8s.io.api.core.v1.FlexVolumeSource'
        title: |-
          FlexVolume represents a generic volume resource that is
          provisioned/attached using an exec based plugin.
          +optional
      cinder:
        $ref: '#/definitions/k8s.io.api.core.v1.CinderVolumeSource'
        title: >-
          Cinder represents a cinder volume attached and mounted on kubelets
          host machine

          More info:
          https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md

          +optional
      cephfs:
        $ref: '#/definitions/k8s.io.api.core.v1.CephFSVolumeSource'
        title: >-
          CephFS represents a Ceph FS mount on the host that shares a pod's
          lifetime

          +optional
      flocker:
        $ref: '#/definitions/k8s.io.api.core.v1.FlockerVolumeSource'
        title: >-
          Flocker represents a Flocker volume attached to a kubelet's host
          machine. This depends on the Flocker control service being running

          +optional
      downwardAPI:
        $ref: '#/definitions/k8s.io.api.core.v1.DownwardAPIVolumeSource'
        title: >-
          DownwardAPI represents downward API about the pod that should populate
          this volume

          +optional
      fc:
        $ref: '#/definitions/k8s.io.api.core.v1.FCVolumeSource'
        title: >-
          FC represents a Fibre Channel resource that is attached to a kubelet's
          host machine and then exposed to the pod.

          +optional
      azureFile:
        $ref: '#/definitions/k8s.io.api.core.v1.AzureFileVolumeSource'
        title: >-
          AzureFile represents an Azure File Service mount on the host and bind
          mount to the pod.

          +optional
      configMap:
        $ref: '#/definitions/k8s.io.api.core.v1.ConfigMapVolumeSource'
        title: |-
          ConfigMap represents a configMap that should populate this volume
          +optional
      vsphereVolume:
        $ref: '#/definitions/k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource'
        title: >-
          VsphereVolume represents a vSphere volume attached and mounted on
          kubelets host machine

          +optional
      quobyte:
        $ref: '#/definitions/k8s.io.api.core.v1.QuobyteVolumeSource'
        title: >-
          Quobyte represents a Quobyte mount on the host that shares a pod's
          lifetime

          +optional
      azureDisk:
        $ref: '#/definitions/k8s.io.api.core.v1.AzureDiskVolumeSource'
        title: >-
          AzureDisk represents an Azure Data Disk mount on the host and bind
          mount to the pod.

          +optional
      photonPersistentDisk:
        $ref: '#/definitions/k8s.io.api.core.v1.PhotonPersistentDiskVolumeSource'
        title: >-
          PhotonPersistentDisk represents a PhotonController persistent disk
          attached and mounted on kubelets host machine
      projected:
        $ref: '#/definitions/k8s.io.api.core.v1.ProjectedVolumeSource'
        title: Items for all in one resources secrets, configmaps, and downward API
      portworxVolume:
        $ref: '#/definitions/k8s.io.api.core.v1.PortworxVolumeSource'
        title: >-
          PortworxVolume represents a portworx volume attached and mounted on
          kubelets host machine

          +optional
      scaleIO:
        $ref: '#/definitions/k8s.io.api.core.v1.ScaleIOVolumeSource'
        title: >-
          ScaleIO represents a ScaleIO persistent volume attached and mounted on
          Kubernetes nodes.

          +optional
      storageos:
        $ref: '#/definitions/k8s.io.api.core.v1.StorageOSVolumeSource'
        title: >-
          StorageOS represents a StorageOS volume attached and mounted on
          Kubernetes nodes.

          +optional
      csi:
        $ref: '#/definitions/k8s.io.api.core.v1.CSIVolumeSource'
        title: >-
          CSI (Container Storage Interface) represents storage that is handled
          by an external CSI driver (Alpha feature).

          +optional
    description: |-
      Represents the source of a volume to mount.
      Only one of its members may be specified.
  k8s.io.api.core.v1.VsphereVirtualDiskVolumeSource:
    type: object
    properties:
      volumePath:
        type: string
        title: Path that identifies vSphere volume vmdk
      fsType:
        type: string
        title: >-
          Filesystem type to mount.

          Must be a filesystem type supported by the host operating system.

          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if
          unspecified.

          +optional
      storagePolicyName:
        type: string
        title: |-
          Storage Policy Based Management (SPBM) profile name.
          +optional
      storagePolicyID:
        type: string
        title: >-
          Storage Policy Based Management (SPBM) profile ID associated with the
          StoragePolicyName.

          +optional
    description: Represents a vSphere volume resource.
  k8s.io.api.core.v1.WeightedPodAffinityTerm:
    type: object
    properties:
      weight:
        type: integer
        format: int32
        description: |-
          weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
      podAffinityTerm:
        $ref: '#/definitions/k8s.io.api.core.v1.PodAffinityTerm'
        description: >-
          Required. A pod affinity term, associated with the corresponding
          weight.
    title: >-
      The weights of all of the matched WeightedPodAffinityTerm fields are added
      per-node to find the most preferred node(s)
  k8s.io.apimachinery.pkg.api.resource.Quantity:
    type: object
    properties:
      string:
        type: string
    description: >-
      Quantity is a fixed-point representation of a number.

      It provides convenient marshaling/unmarshaling in JSON and YAML,

      in addition to String() and Int64() accessors.


      The serialization format is:


      <quantity>        ::= <signedNumber><suffix>
        (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
      <digit>           ::= 0 | 1 | ... | 9

      <digits>          ::= <digit> | <digit><digits>

      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>

      <sign>            ::= "+" | "-"

      <signedNumber>    ::= <number> | <sign><number>

      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>

      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
        (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
      <decimalSI>       ::= m | "" | k | M | G | T | P | E
        (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>


      No matter which of the three exponent forms is used, no quantity may
      represent

      a number greater than 2^63-1 in magnitude, nor may it have more than 3
      decimal

      places. Numbers larger or more precise will be capped or rounded up.

      (E.g.: 0.1m will rounded up to 1m.)

      This may be extended in the future if we require larger or smaller
      quantities.


      When a Quantity is parsed from a string, it will remember the type of
      suffix

      it had, and will use the same type again when it is serialized.


      Before serializing, Quantity will be put in "canonical form".

      This means that Exponent/suffix will be adjusted up or down (with a

      corresponding increase or decrease in Mantissa) such that:
        a. No precision is lost
        b. No fractional digits will be emitted
        c. The exponent (or suffix) is as large as possible.
      The sign will be omitted unless the number is negative.


      Examples:
        1.5 will be serialized as "1500m"
        1.5Gi will be serialized as "1536Mi"

      Note that the quantity will NEVER be internally represented by a

      floating point number. That is the whole point of this exercise.


      Non-canonical values will still parse as long as they are well formed,

      but will be re-emitted in their canonical form. (So always use canonical

      form, or don't diff.)


      This format is intended to make it difficult to use these numbers without

      writing some sort of special handling code in the hopes that that will

      cause implementors to also use a fixed point implementation.


      +protobuf=true

      +protobuf.embed=string

      +protobuf.options.marshal=false

      +protobuf.options.(gogoproto.goproto_stringer)=false

      +k8s:deepcopy-gen=true

      +k8s:openapi-gen=true
  k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource:
    type: object
    properties:
      group:
        type: string
      version:
        type: string
      resource:
        type: string
    description: +protobuf.options.(gogoproto.goproto_stringer)=false
    title: >-
      GroupVersionResource unambiguously identifies a resource.  It doesn't
      anonymously include GroupVersion

      to avoid automatic coersion.  It doesn't use a GroupVersion to avoid
      custom marshalling
  k8s.io.apimachinery.pkg.util.intstr.IntOrString:
    type: object
    properties:
      type:
        type: string
        format: int64
      intVal:
        type: integer
        format: int32
      strVal:
        type: string
    description: |-
      +protobuf=true
      +protobuf.options.(gogoproto.goproto_stringer)=false
      +k8s:openapi-gen=true
    title: |-
      IntOrString is a type that can hold an int32 or a string.  When used in
      JSON or YAML marshalling and unmarshalling, it produces or consumes the
      inner type.  This allows you to have, for example, a JSON field that can
      accept a name or number.
      TODO: Rename to Int32OrString
  vmware.tanzu.manage.v1alpha1.cluster.object.AggregatedResources:
    type: object
    properties:
      totalPods:
        type: integer
        format: int32
        description: This is the total aggregated pods of the object.
      requestedCpu:
        type: number
        format: float
        description: This is the total requested CPU of the object in millicores.
      requestedMemory:
        type: number
        format: float
        description: This is the total requested memory of the object in GB.
      cpuLimits:
        type: number
        format: float
        description: This is the total CPU limit of the object in millicores.
      memoryLimits:
        type: number
        format: float
        description: This is the total memory limit of the object in GB.
    description: Aggregated pod information.
  vmware.tanzu.manage.v1alpha1.cluster.object.Data:
    type: object
    properties:
      kind:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.Data.Kind'
        description: Kind of the resource.
      workspaceName:
        type: string
        description: Name of the workspace this object belongs to.
      aggregatedResources:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.AggregatedResources
        description: Aggregated resources for object.
      namespaceName:
        type: string
        description: Name of the namespace this object belongs to.
      objectNamespace:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNamespace
        description: Namespace object.
      objectNode:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNode'
        description: Node object.
      objectPod:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectPod'
        description: Pod object.
      objectDeployment:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectDeployment
        description: Deployment object.
      objectService:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectService
        description: Service object.
      objectReplicaSet:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectReplicaSet
        description: ReplicaSet object.
      objectReplicationController:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectReplicationController
        description: ReplicationController object.
      objectDaemonSet:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectDaemonSet
        description: DaemonSet object.
      objectStatefulSet:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectStatefulSet
        description: StatefulSet object.
      objectCronJob:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectCronJob
        description: CronJob object.
      objectJob:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectJob'
        description: Job object.
      objectCustomResource:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectCustomResource
        description: CustomResource object.
      gvr:
        $ref: >-
          #/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionResource
        description: GVR of the resource.
    description: The Object data.
  vmware.tanzu.manage.v1alpha1.cluster.object.Data.Kind:
    type: string
    enum:
      - KIND_UNSPECIFIED
      - Node
      - Pod
      - Deployment
      - Service
      - ReplicaSet
      - ReplicationController
      - DaemonSet
      - StatefulSet
      - CronJob
      - Job
      - Namespace
      - CustomResource
    default: KIND_UNSPECIFIED
    description: |-
      - KIND_UNSPECIFIED: KIND_UNSPECIFIED is the default kind.
       - Node: Node Kind.
       - Pod: Pod Kind.
       - Deployment: Deployment Kind.
       - Service: Service kind.
       - ReplicaSet: ReplicaSet kind.
       - ReplicationController: ReplicationController kind.
       - DaemonSet: DaemonSet kind.
       - StatefulSet: StatefulSet kind.
       - CronJob: CronJob kind.
       - Job: Job kind.
       - Namespace: Namespace kind.
       - CustomResource: CustomResource kind.
    title: Enum for resource kind. We are not using all caps to match k8s kinds
  vmware.tanzu.manage.v1alpha1.cluster.object.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of ManagementCluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
      name:
        type: string
        description: Name of Object.
    description: |-
      Full name of the object. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.object.ListObjectsResponse:
    type: object
    properties:
      objects:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.Object'
        description: List of objects.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Objects.
  vmware.tanzu.manage.v1alpha1.cluster.object.Object:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.FullName'
        description: Full name for the Object.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the object.
      data:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.Data'
        description: Data of the Object.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.Status'
        description: Status for the Object.
    description: Kubernetes objects that exists on a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectCronJob:
    type: object
    properties:
      resourceCronJob:
        $ref: '#/definitions/k8s.io.api.batch.v1beta1.CronJob'
        description: CronJob object.
    description: CronJob Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectCustomResource:
    type: object
    properties:
      resourceCustomResource:
        type: object
        description: CustomResource object.
    description: CustomResource Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectDaemonSet:
    type: object
    properties:
      resourceDaemonSet:
        $ref: '#/definitions/k8s.io.api.apps.v1.DaemonSet'
        description: DaemonSet object.
    description: DaemonSet Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectDeployment:
    type: object
    properties:
      resourceDeployment:
        $ref: '#/definitions/k8s.io.api.apps.v1.Deployment'
        description: Deployment object.
    description: Deployment Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectJob:
    type: object
    properties:
      resourceJob:
        $ref: '#/definitions/k8s.io.api.batch.v1.Job'
        description: Job object.
    description: Job Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNamespace:
    type: object
    properties:
      resourceNamespace:
        $ref: '#/definitions/k8s.io.api.core.v1.Namespace'
        description: Namespace object.
      type:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNamespace.Type
        description: Type of the namespace.
    description: Namespace Object containing aggregated resources.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNamespace.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - MANAGED
      - UNMANAGED
    default: TYPE_UNSPECIFIED
    description: |-
      Enum for namespace type.

       - TYPE_UNSPECIFIED: Default namespace type.
       - MANAGED: MANAGED namespace type.
       - UNMANAGED: UNMANAGED namespace type.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNode:
    type: object
    properties:
      resourceNode:
        $ref: '#/definitions/k8s.io.api.core.v1.Node'
        description: Node object.
      role:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNode.Role
        description: Role of the node.
    description: Node Object containing aggregated resources.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectNode.Role:
    type: string
    enum:
      - ROLE_UNSPECIFIED
      - MASTER
      - WORKER
    default: ROLE_UNSPECIFIED
    description: |-
      Enum for node role.

       - ROLE_UNSPECIFIED: Default node role.
       - MASTER: MASTER node role.
       - WORKER: WORKER node role.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectPod:
    type: object
    properties:
      resourcePod:
        $ref: '#/definitions/k8s.io.api.core.v1.Pod'
        description: Pod object.
    description: Pod Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectReplicaSet:
    type: object
    properties:
      resourceReplicaSet:
        $ref: '#/definitions/k8s.io.api.apps.v1.ReplicaSet'
        description: ReplicaSet object.
    description: ReplicaSet Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectReplicationController:
    type: object
    properties:
      resourceReplicationController:
        $ref: '#/definitions/k8s.io.api.core.v1.ReplicationController'
        description: ReplicationController object.
    description: ReplicationController Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectService:
    type: object
    properties:
      resourceService:
        $ref: '#/definitions/k8s.io.api.core.v1.Service'
        description: Service object.
    description: Service Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ObjectStatefulSet:
    type: object
    properties:
      resourceStatefulSet:
        $ref: '#/definitions/k8s.io.api.apps.v1.StatefulSet'
        description: StatefulSet object.
    description: StatefulSet Object.
  vmware.tanzu.manage.v1alpha1.cluster.object.ResourceHealth:
    type: object
    properties:
      state:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ResourceHealth.State
        description: State of a resource health.
      message:
        type: string
        title: Additional information e.g., reason for not HEALTHY
    description: Health of a resource.
  vmware.tanzu.manage.v1alpha1.cluster.object.ResourceHealth.State:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - HEALTHY
      - WARNING
      - UNHEALTHY
      - DISCONNECTED
      - UNSUPPORTED
    default: STATE_UNSPECIFIED
    description: |-
      State describes state of a resource health.

       - STATE_UNSPECIFIED: STATE_UNSPECIFIED is the default state of health.
       - HEALTHY: Resource is healthy.
       - WARNING: Resource is in warning state.
       - UNHEALTHY: Resource is unhealthy.
       - DISCONNECTED: Resource is disconnected.
       - UNSUPPORTED: Resource health check is unsupported.
  vmware.tanzu.manage.v1alpha1.cluster.object.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.object.Status:
    type: object
    properties:
      health:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.ResourceHealth
        description: Health of the object.
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.object.Status.Phase'
        description: Phase of the resource.
      phaseInfo:
        type: string
        description: Additional info about the phase.
    description: The Object status.
  vmware.tanzu.manage.v1alpha1.cluster.object.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - ATTACHING
      - UPDATING
      - READY
      - ERROR
    default: PHASE_UNSPECIFIED
    description: |-
      The overall phase of the resource.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - CREATING: Creating phase is set when the resource is being created.
       - ATTACHING: Attaching phase is set when the resource is being attached.
       - UPDATING: Updating phase is set when the resource is being updated.
       - READY: Ready phase is set when the resource is successfully created/attached/updated.
       - ERROR: Error phase is set when there was a failure while creating/attaching/updating the resource.
  vmware.tanzu.manage.v1alpha1.cluster.policy.ApplyPolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Policy to apply.
    description: Request to apply a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.ApplyPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Policy applied.
    description: Response from applying a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Name of the cluster provisioner.
      clusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of the policy.
    description: |-
      Full name of the cluster policy. This includes the object
      name along with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.cluster.policy.Policy:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.FullName'
        description: Full name for the Cluster policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Cluster policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.policy.Spec'
        description: Spec for the Cluster policy.
    description: A Policy to apply on a Kubernetes cluster.
  vmware.tanzu.manage.v1alpha1.common.policy.LabelSelector:
    type: object
    properties:
      matchExpressions:
        type: array
        items:
          $ref: >-
            #/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement
        description: >-
          Match expressions is a list of label selector requirements, the
          requirements are ANDed.

          Label selector requirements support 4 operators for matching labels -
          in, notin, exists and doesnotexist.
    description: Label Selector.
  vmware.tanzu.manage.v1alpha1.common.policy.Spec:
    type: object
    properties:
      type:
        type: string
        description: |-
          Type of the policy object.
          Use PolicyTypes API to find the list of available policy types.
      recipe:
        type: string
        description: >-
          Name of the policy recipe (helper) used for creating a policy.

          Use PolicyRecipe API to find the list of available recipe in each
          type.
      recipeVersion:
        type: string
        description: >-
          The version of the recipe used for the policy.

          The latest version will be selected by default (if left empty).

          Use PolicyRecipeVersion API to find the list of versions in each
          recipe.
      input:
        type: object
        description: >-
          Inputs needed for the selected policy recipe.

          To find the required inputs, check the input schema of the selected
          policy recipe.
      namespaceSelector:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.policy.LabelSelector'
        description: Label based Namespace Selector for the policy.
      resources:
        type: array
        items:
          type: string
        description: >-
          Generated yaml based policy resources (read-only).

          These will only be seen when viewing effective policies on a cluster
          or namespace.
    description: The policy spec.
  vmware.tanzu.manage.v1alpha1.cluster.policy.CreatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Policy to create.
    description: Request to create a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.CreatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Policy created.
    description: Response from creating a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.DeletePolicyResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.GetPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Policy returned.
    description: Response from getting a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.ListPoliciesResponse:
    type: object
    properties:
      policies:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: List of policies.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Policies.
  vmware.tanzu.manage.v1alpha1.cluster.policy.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.policy.UpdatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Update Policy.
    description: Request to update (overwrite) a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.policy.UpdatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.policy.Policy'
        description: Policy updated.
    description: Response from updating a Policy.
  vmware.tanzu.manage.v1alpha1.cluster.setting.CreateSettingRequest:
    type: object
    properties:
      setting:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.Setting'
        description: Setting to create.
    description: Request to create a Setting.
  vmware.tanzu.manage.v1alpha1.cluster.setting.CreateSettingResponse:
    type: object
    properties:
      setting:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.Setting'
        description: Setting created.
    description: Response from creating a Setting.
  vmware.tanzu.manage.v1alpha1.cluster.setting.DeleteSettingResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Setting.
  vmware.tanzu.manage.v1alpha1.cluster.setting.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Management Cluster name.
      provisionerName:
        type: string
        description: Provisioner of the Cluster.
      clusterName:
        type: string
        description: Name of the Cluster.
      name:
        type: string
        description: |-
          Name of the setting.
          This should be same as the name of setting type.
    description: Full name of the Cluster on which the Setting is applied.
  vmware.tanzu.manage.v1alpha1.cluster.setting.GetSettingResponse:
    type: object
    properties:
      setting:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.Setting'
        description: Setting returned.
    description: Response from getting a Setting.
  vmware.tanzu.manage.v1alpha1.cluster.setting.Setting:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.FullName'
        description: Full name for the Cluster Setting.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Cluster Setting.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.setting.Spec'
        description: Spec for the Cluster Setting.
    description: A Setting to apply on a Cluster.
  vmware.tanzu.manage.v1alpha1.cluster.setting.UpdateSettingRequest:
    type: object
    properties:
      setting:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.Setting'
        description: Update Setting.
    description: Request to update (overwrite) a Setting.
  vmware.tanzu.manage.v1alpha1.cluster.setting.UpdateSettingResponse:
    type: object
    properties:
      setting:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.setting.Setting'
        description: Setting updated.
    description: Response from updating a Setting.
  vmware.tanzu.manage.v1alpha1.common.setting.Spec:
    type: object
    properties:
      values:
        type: object
        description: |-
          Input with the setting values.
          These should follow the schema of the provided setting type.
    description: Common Spec for the Setting Instance.
  vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of management cluster.
      provisionerName:
        type: string
        description: Name of Provisioner.
      clusterName:
        type: string
        description: Name of Cluster.
    description: Full name of the TanzuPackage.
  vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.ListTanzuPackagesResponse:
    type: object
    properties:
      tanzuPackages:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.TanzuPackage
        description: List of tanzupackages.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing TanzuPackages.
  vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      clusterName:
        type: string
        description: >-
          Scope search to the specified cluster_name; supports globbing; default
          (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.Status:
    type: object
    properties:
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the TanzuPackage resource.
      packageRepositoryGlobalNamespace:
        type: string
        title: Name of the package repository global namespace
    description: Status of the TanzuPackage.
  vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.TanzuPackage:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.FullName
        description: Full name for the TanzuPackage.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the TanzuPackage object.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.tanzupackage.Status'
        description: Status for the TanzuPackage.
    description: Represents tanzupackage feature configuration for a cluster.
  vmware.tanzu.manage.v1alpha1.cluster.versions.GetResponse:
    type: object
    properties:
      versions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Version'
        description: Versions is a list of Version objects where index 0 is the latest.
    description: GetResponse is the object returned from Get RPC.
  vmware.tanzu.manage.v1alpha1.clustergroup.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of this ClusterGroup.
    description: |-
      Full name of the cluster group. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.clustergroup.GetClusterGroupIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ClusterGroup policy.
    description: GetClusterGroupIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.FullName'
        description: ClusterGroup full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchClusterGroupIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchClusterGroupIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.clustergroup.TestClusterGroupIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.FullName'
        description: ClusterGroup full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestClusterGroupIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.clustergroup.TestClusterGroupIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestClusterGroupIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.clustergroup.UpdateClusterGroupIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ClusterGroup policy set.
    description: UpdateClusterGroupIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.FullName'
        description: Full name for the ClusterGroup.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the ClusterGroup object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.Spec'
        description: Spec for the ClusterGroup.
    description: A group of Kubernetes clusters.
  vmware.tanzu.manage.v1alpha1.clustergroup.CreateClusterGroupRequest:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup to create.
    description: Request to create a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.CreateClusterGroupResponse:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup created.
    description: Response from creating a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.DeleteClusterGroupResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.EnumerateClusterGroupsResponse:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup object.
    description: Streamed response from enumerating ClusterGroups.
  vmware.tanzu.manage.v1alpha1.clustergroup.GetClusterGroupResponse:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup returned.
    description: Response from getting a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.Integration:
    type: string
    enum:
      - INTEGRATION_UNSPECIFIED
      - TANZU_APPLICATION_ENGINE
    default: INTEGRATION_UNSPECIFIED
    description: |-
      Integration specifies different types of integrations.

       - INTEGRATION_UNSPECIFIED: Default integration type. The ClusterGroup is for TMC itself only.
       - TANZU_APPLICATION_ENGINE: Integration with Tanzu Application Engine.
  vmware.tanzu.manage.v1alpha1.clustergroup.ListClusterGroupsResponse:
    type: object
    properties:
      clusterGroups:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: List of clustergroups.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ClusterGroups.
  vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.FullName'
        description: ClusterGroup to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.PatchClusterGroupResponse:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup patched.
    description: Response from patching a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      integration:
        type: string
        description: >-
          filter cluster groups based on selected integration (e.g.
          TANZU_APPLICATION_ENGINE); supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.Spec:
    type: object
    properties:
      integrations:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.Integration'
        description: >-
          Integration type. Integration can be used to integrate all clusters in
          this cluster group

          with other Tanzu products. This field is immutable and can only be set
          during creation time.

          It defaults to no integrations.

          Note: this feature is in alpha stage and is not yet available to all.
    description: Spec of the cluster group.
  vmware.tanzu.manage.v1alpha1.clustergroup.UpdateClusterGroupRequest:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: Update ClusterGroup.
    description: Request to update (overwrite) a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.UpdateClusterGroupResponse:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup updated.
    description: Response from updating a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.WatchClusterGroupsResponse:
    type: object
    properties:
      clusterGroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.ClusterGroup'
        description: ClusterGroup event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching ClusterGroups.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.CreateDataProtectionRequest:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection
        description: DataProtection to create.
    description: Request to create a DataProtection.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.CreateDataProtectionResponse:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection
        description: DataProtection created.
    description: Response from creating a DataProtection.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.FullName
        description: Full name for the DataProtection.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the DataProtection object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.Spec
        description: Spec field for DataProtection.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.Status
        description: Status field.
    description: >-
      Backup, restore, or migrate cluster data.


      Protect Kubernetes cluster data with the DataProtection resource. Backup,
      restore, or

      migrate cluster objects and volumes.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DeleteDataProtectionResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a DataProtection.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster group.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.GetDataProtectionResponse:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection
        description: DataProtection returned.
    description: Response from getting a DataProtection.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.ListDataProtectionsResponse:
    type: object
    properties:
      dataProtections:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection
        description: List of dataprotections.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing DataProtections.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.Spec'
        description: Spec of the data protection defined at atomic level.
      selector:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Selector'
        description: Selector to include/exclude specific clusters (optional).
    description: >-
      The spec collects all the options for installing backup and restore
      solution into a Kubernetes cluster.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: Phase of the Cluster Group Data Protection on member Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group Data Protection
          being applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the Data Protection.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.UpdateDataProtectionRequest:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection
        description: Update DataProtection.
    description: Request to update (overwrite) a DataProtection.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.UpdateDataProtectionResponse:
    type: object
    properties:
      dataProtection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.DataProtection
        description: DataProtection updated.
    description: Response from updating a DataProtection.
  vmware.tanzu.manage.v1alpha1.common.batch.Details:
    type: object
    properties:
      availableTargets:
        type: integer
        format: int32
        description: Total number of targets available for this source resource.
      applied:
        type: integer
        format: int32
        description: >-
          Number of atomic targets on which this source resource is successfully
          applied.
      overridden:
        type: integer
        format: int32
        description: >-
          Number of atomic targets on which this source resource is overridden
          by another resource.
      pending:
        type: integer
        format: int32
        description: >-
          Number of atomic targets on which this source resource is still being
          applied.
      error:
        type: integer
        format: int32
        description: >-
          Number of atomic targets on which this source resource failed to apply
          due to some error.
      deleting:
        type: integer
        format: int32
        description: >-
          Number of atomic targets on which this source resource is currently
          being deleted (only applicable on some source resource types).
      skipped:
        type: integer
        format: int32
        description: >-
          Number of atomic targets on which this source resource is not applied
          because they don't match the provided selectors.
    description: >-
      Details contains information about a source resource being applied on its
      atomic targets.
  vmware.tanzu.manage.v1alpha1.common.batch.LabelSelector:
    type: object
    properties:
      matchExpressions:
        type: array
        items:
          $ref: >-
            #/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement
        description: >-
          Match expressions is a list of label selector requirements, the
          requirements are ANDed.

          Label selector requirements support 4 operators for matching labels -
          in, notin, exists and doesnotexist.
    description: Label Selector.
  vmware.tanzu.manage.v1alpha1.common.batch.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - APPLIED
      - ERROR
      - DELETING
    default: PHASE_UNSPECIFIED
    description: >-
      Phase of the source resource application on its atomic targets.

      Note: The phase can move back to Pending from Applied when there are
      additions to the list of available atomic targets.

      In such a case, the system will automatically try to apply the changes to
      the new targets to get back to the Applied state.

       - PHASE_UNSPECIFIED: UNSPECIFIED phase.
       - PENDING: PENDING phase is set when source resource is currently being applied on at least one atomic target.
       - APPLIED: APPLIED phase is set when source resource is successfully applied or skipped due to an override on all atomic targets.
       - ERROR: ERROR phase is set when source resource has failed to apply on at-least one atomic target (not considering overrides).
       - DELETING: DELETING phase is set when source resource is being deleted (only applicable on some source resource types).
  vmware.tanzu.manage.v1alpha1.common.batch.Selector:
    type: object
    properties:
      names:
        type: array
        items:
          type: string
        description: List of target names to include.
      excludedNames:
        type: array
        items:
          type: string
        description: List of target names to exclude.
      labelSelector:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.LabelSelector'
        description: Label based Selector.
    description: Selector to include/exclude specific targets.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.CreateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule
        description: Schedule to create.
    description: Request to create a Schedule.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.CreateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule
        description: Schedule created.
    description: Response from creating a Schedule.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.DeleteScheduleResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Schedule.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster group.
      name:
        type: string
        description: Name of this Schedule.
    description: |-
      Full name of the namespace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.GetScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule
        description: Schedule returned.
    description: Response from getting a Schedule.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.ListSchedulesResponse:
    type: object
    properties:
      schedules:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule
        description: List of schedules.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Schedules.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.FullName
        description: Full name for the Schedule.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the schedule object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Spec
        description: Spec for the schedule.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Status
        description: Status of the schedule.
    description: A pre-scheduled or periodic Backup that should be run.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.dataprotection.schedule.Spec
        description: Spec of the schedule defined at atomic level.
      selector:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Selector'
        description: Selector to include/exclude specific clusters.
    description: The schedule spec.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: Phase of the Cluster Group schedule on member Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group schedule being
          applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the schedule resource.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.UpdateScheduleRequest:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule
        description: Update Schedule.
    description: Request to update (overwrite) a Schedule.
  vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.UpdateScheduleResponse:
    type: object
    properties:
      schedule:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.dataprotection.schedule.Schedule
        description: Schedule updated.
    description: Response from updating a Schedule.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.ContinuousDelivery:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.FullName
        description: Full name for the Continuous Delivery.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Continuous Delivery object.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.Status
        description: Status for the Continuous Delivery.
    description: Represents continuous delivery feature configuration for a cluster group.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.CreateContinuousDeliveryRequest:
    type: object
    properties:
      continuousDelivery:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.ContinuousDelivery
        description: ContinuousDelivery to create.
    description: Request to create a ContinuousDelivery.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.CreateContinuousDeliveryResponse:
    type: object
    properties:
      continuousDelivery:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.ContinuousDelivery
        description: ContinuousDelivery created.
    description: Response from creating a ContinuousDelivery.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.DeleteContinuousDeliveryResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a ContinuousDelivery.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of cluster group.
    description: Full name of the Continuous Delivery.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.ListContinuousDeliveriesResponse:
    type: object
    properties:
      continuousDeliveries:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.ContinuousDelivery
        description: List of continuousdeliveries.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ContinuousDeliveries.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.continuousdelivery.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: >-
          Phase of the Cluster Group continuous delivery feature on member
          Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group continuous
          delivery being applied on member Clusters.
    description: Status of the Continuous Delivery.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.CreateHelmRequest:
    type: object
    properties:
      helm:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.Helm
        description: Helm to create.
    description: Request to create a Helm.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.CreateHelmResponse:
    type: object
    properties:
      helm:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.Helm
        description: Helm created.
    description: Response from creating a Helm.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.DeleteHelmResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Helm.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of cluster group.
    description: Full name of the Helm.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.Helm:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.FullName
        description: Full name for the helm.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the helm object.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.Status
        description: Status for the helm.
    description: Represents helm feature for a cluster group.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.ListHelmsResponse:
    type: object
    properties:
      helms:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.Helm
        description: List of helms.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Helms.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.helm.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: Phase of the Cluster Group helm feature on member Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group helm being
          applied on member Clusters.
    description: Status of the Helm.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.ApplySourceSecretRequest:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret to apply.
    description: Request to apply a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.ApplySourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret applied.
    description: Response from applying a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster group.
      name:
        type: string
        description: Name of Source Secret.
    description: Full name of the Source Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.FullName
        description: Full name for the Source Secret.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Source Secret object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.Spec
        description: Spec for the Source Secret.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.Status
        description: Status for the Source Secret.
    description: >-
      SourceSecret represents a credential used to authenticate to a fluxcd
      source such as GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.fluxcd.sourcesecret.Spec
        description: Spec of the source secret defined at atomic level.
    description: Spec for the Source Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: Phase of the Cluster Group source secret on member Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group source secret
          being applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the Source Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.CreateSourceSecretRequest:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret to create.
    description: Request to create a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.CreateSourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret created.
    description: Response from creating a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.DeleteSourceSecretResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.GetSourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret returned.
    description: Response from getting a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.ListSourceSecretsResponse:
    type: object
    properties:
      sourceSecrets:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: List of sourcesecrets.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing SourceSecrets.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.UpdateSourceSecretRequest:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: Update SourceSecret.
    description: Request to update (overwrite) a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.UpdateSourceSecretResponse:
    type: object
    properties:
      sourceSecret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.fluxcd.sourcesecret.SourceSecret
        description: SourceSecret updated.
    description: Response from updating a SourceSecret.
  vmware.tanzu.manage.v1alpha1.clustergroup.insight.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of the cluster group.
      name:
        type: string
        description: UID of the insight.
    description: >-
      Full name of the cluster group insight. This includes the object name
      along

      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.clustergroup.insight.Insight:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.insight.FullName
        description: Full name for the cluster group insight.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster group insight.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.insight.Spec'
        description: Spec for the cluster group insight.
    description: >-
      Provide insight for cluster group level resources (source resources) that
      get applied on clusters.
  vmware.tanzu.manage.v1alpha1.clustergroup.insight.ListInsightsResponse:
    type: object
    properties:
      insights:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.insight.Insight
        description: List of insights.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Insights.
  vmware.tanzu.manage.v1alpha1.clustergroup.insight.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      sourceKind:
        type: string
        description: >-
          Filter by the kind of source resource (eg. integration); supports
          globbing; default (*).
      sourceName:
        type: string
        description: >-
          Filter by the name of source resource (eg. tanzu-observability-saas);
          supports globbing; default (*).
      sourceUid:
        type: string
        description: Filter by the uid of source resource; supports globbing; default (*).
      insightType:
        type: string
        description: Filter by insight type; supports globbing; default (*).
      clusterName:
        type: string
        description: Filter by cluster name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.insight.Spec:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.insight.Type'
        description: Type of insight.
      details:
        type: string
        description: Details about the insight.
      source:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Reference of the source resource (eg. Integration).
      cluster:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Reference of the impacted cluster.
      sourceKind:
        type: string
        description: Kind of the source resource (eg. Integration).
    description: Spec of the cluster group insight.
  vmware.tanzu.manage.v1alpha1.clustergroup.insight.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - ERROR
      - OVERRIDE
    default: TYPE_UNSPECIFIED
    description: >-
      Type specifies the different types of insights.

       - TYPE_UNSPECIFIED: Unknown type.
       - ERROR: Insight about an error scenario.
       - OVERRIDE: Insight about override.
      For example: source resource on cluster-group was overridden on member
      cluster by another resource.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.CreateIntegrationRequest:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.Integration
        description: Integration to create.
    description: Request to create an Integration.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.CreateIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.Integration
        description: Integration created.
    description: Response from creating an Integration.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.DeleteIntegrationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an Integration.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of the cluster group.
      name:
        type: string
        description: Name of the integration.
    description: >-
      Full name of the cluster group integration configuration. This includes
      the object name along

      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.GetIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.Integration
        description: Integration returned.
    description: Response from getting an Integration.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.Integration:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.FullName
        description: Full name for the Cluster Group integration.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Cluster Group integration.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.Spec
        description: Spec for the Cluster Group integration configuration.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.Status
        description: Status for the Integration.
    description: >-
      An integration configuration for a cluster group.

      This integration configuration will be applied to child clusters of the
      cluster group.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.ListIntegrationsResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.integration.Integration
        description: List of integrations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Integrations.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.Spec:
    type: object
    properties:
      configurations:
        type: object
        additionalProperties:
          type: object
        description: >-
          Configurations. The expected input schema can be found in
          v1alpha1/integration API.
      secrets:
        type: object
        additionalProperties:
          type: string
        description: >-
          Secrets are for sensitive configurations. The values are write-only
          and will be masked when read.
      credentialName:
        type: string
        description: >-
          Credential name is the name of the Organization's Account Credential
          to be used instead of secrets to add an integration on clusters within
          this cluster group.
    description: The integration configuration spec.
  vmware.tanzu.manage.v1alpha1.clustergroup.integration.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: Phase of the Cluster Group integration application on member Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group integration being
          applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the Cluster Group integration.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.ApplyGitRepositoryRequest:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository to apply.
    description: Request to apply a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.ApplyGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository applied.
    description: Response from applying a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster Group.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Repository.
    description: Full name of the Repository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.FullName
        description: Full name for the Repository.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Repository object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.Spec
        description: Spec for the Repository.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.Status
        description: Status for the Repository.
    description: Represents a gitrepository source to sync configurations from.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.gitrepository.Spec
        description: Spec of git repository as defined at atomic level.
    description: Spec for the Repository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: >-
          Phase of the Cluster Group git repository application on member
          Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group git repository
          being applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the Repository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.CreateGitRepositoryRequest:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository to create.
    description: Request to create a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.CreateGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository created.
    description: Response from creating a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.DeleteGitRepositoryResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GetGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository returned.
    description: Response from getting a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.ListGitRepositoriesResponse:
    type: object
    properties:
      gitRepositories:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: List of gitrepositories.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing GitRepositories.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.UpdateGitRepositoryRequest:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: Update GitRepository.
    description: Request to update (overwrite) a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.UpdateGitRepositoryResponse:
    type: object
    properties:
      gitRepository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.gitrepository.GitRepository
        description: GitRepository updated.
    description: Response from updating a GitRepository.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.ApplyReleaseRequest:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Release to apply.
    description: Request to apply a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.ApplyReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Release applied.
    description: Response from applying a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster Group.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Helm Release.
    description: Full name of the Helm Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.FullName
        description: Full name for the Release.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Release object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Spec
        description: Spec for the Release.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Status
        description: Status for the Release.
    description: Release is an instance of Helm Chart created at cluster group level.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.helm.release.Spec
        description: Spec of helm release as defined at atomic level.
    description: Spec of the Helm Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: >-
          Phase of the Cluster Group helm release application on member
          Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group helm release
          being applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.CreateReleaseRequest:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Release to create.
    description: Request to create a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.CreateReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Release created.
    description: Response from creating a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.DeleteReleaseResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.GetReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Release returned.
    description: Response from getting a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.ListReleasesResponse:
    type: object
    properties:
      releases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: List of releases.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Releases.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.UpdateReleaseRequest:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Update Release.
    description: Request to update (overwrite) a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.UpdateReleaseResponse:
    type: object
    properties:
      release:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.helm.release.Release
        description: Release updated.
    description: Response from updating a Release.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.ApplyKustomizationRequest:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization to apply.
    description: Request to apply a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.ApplyKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization applied.
    description: Response from applying a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster Group.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Kustomization.
    description: Full name of the Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.FullName
        description: Full name for the Kustomization.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Kustomization object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Spec
        description: Spec for the Kustomization.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Status
        description: Status for the Kustomization.
    description: Represents configuration that needs to be applied to cluster group.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.fluxcd.kustomization.Spec
        description: Spec for the Kustomization as defined at atomic level.
    description: Spec for the Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: >-
          Phase of the Cluster Group kustomization application on member
          Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group kustomization
          being applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.CreateKustomizationRequest:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization to create.
    description: Request to create a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.CreateKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization created.
    description: Response from creating a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.DeleteKustomizationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.GetKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization returned.
    description: Response from getting a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.ListKustomizationsResponse:
    type: object
    properties:
      kustomizations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: List of kustomizations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Kustomizations.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.UpdateKustomizationRequest:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Update Kustomization.
    description: Request to update (overwrite) a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.UpdateKustomizationResponse:
    type: object
    properties:
      kustomization:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.fluxcd.kustomization.Kustomization
        description: Kustomization updated.
    description: Response from updating a Kustomization.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.CreateSecretRequest:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret
        description: Secret to create.
    description: Request to create a Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.CreateSecretResponse:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret
        description: Secret created.
    description: Response from creating a Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.DeleteSecretResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster Group.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: Name of the Secret.
    description: Full name of the Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.GetSecretResponse:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret
        description: Secret returned.
    description: Response from getting a Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.ListSecretsResponse:
    type: object
    properties:
      secrets:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret
        description: List of secrets.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Secrets.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      secretType:
        type: string
        description: Filter by secret type; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.FullName
        description: Full name for the Secret.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Secret  object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Spec
        description: Spec for the Secret.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Status
        description: Status for the Secret.
    description: Represents Tanzu Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Spec:
    type: object
    properties:
      atomicSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.namespace.secret.Spec
        description: Spec of secret as defined at atomic level.
    description: Spec of the Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: Phase of the Cluster Group secret application on member Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group secret being
          applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of Secret resource.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.UpdateSecretRequest:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret
        description: Update Secret.
    description: Request to update (overwrite) a Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.UpdateSecretResponse:
    type: object
    properties:
      secret:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secret.Secret
        description: Secret updated.
    description: Response from updating a Secret.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.CreateSecretExportRequest:
    type: object
    properties:
      secretExport:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.SecretExport
        description: SecretExport to create.
    description: Request to create a SecretExport.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.CreateSecretExportResponse:
    type: object
    properties:
      secretExport:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.SecretExport
        description: SecretExport created.
    description: Response from creating a SecretExport.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.DeleteSecretExportResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a SecretExport.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of Cluster Group.
      namespaceName:
        type: string
        description: Name of Namespace.
      name:
        type: string
        description: >-
          Name of the Secret Export (expected to share the same name of the
          secret).
    description: Full name of the Secret Export.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.GetSecretExportResponse:
    type: object
    properties:
      secretExport:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.SecretExport
        description: SecretExport returned.
    description: Response from getting a SecretExport.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.ListSecretExportsResponse:
    type: object
    properties:
      secretExports:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.SecretExport
        description: List of secretexports.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing SecretExports.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      namespaceName:
        type: string
        description: >-
          Scope search to the specified namespace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.SecretExport:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.FullName
        description: Full name for the Secret Export.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Secret Export object.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.Status
        description: Status for the Secret Export.
    description: Represents Tanzu Secret Export.
  vmware.tanzu.manage.v1alpha1.clustergroup.namespace.secretexport.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Phase'
        description: >-
          Phase of the Cluster Group secret export application on member
          Clusters.
      details:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.batch.Details'
        description: >-
          Details contains information about the Cluster Group secret export
          being applied on member Clusters.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of Secret Export resource.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.ApplyPolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Policy to apply.
    description: Request to apply a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.ApplyPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Policy applied.
    description: Response from applying a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of the cluster group.
      name:
        type: string
        description: Name of the policy.
    description: |-
      Full name of the cluster group policy. This includes the object
      name along with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.FullName
        description: Full name for the ClusterGroup policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the ClusterGroup policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.policy.Spec'
        description: Spec for the ClusterGroup policy.
    description: A Policy to apply on a group of Kubernetes clusters.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.CreatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Policy to create.
    description: Request to create a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.CreatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Policy created.
    description: Response from creating a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.DeletePolicyResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.GetPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Policy returned.
    description: Response from getting a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.ListPoliciesResponse:
    type: object
    properties:
      policies:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy
        description: List of policies.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Policies.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.SearchScope:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: >-
          Scope search to the specified cluster_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.UpdatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Update Policy.
    description: Request to update (overwrite) a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.policy.UpdatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.policy.Policy'
        description: Policy updated.
    description: Response from updating a Policy.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.CreateSettingRequest:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.Setting
        description: Setting to create.
    description: Request to create a Setting.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.CreateSettingResponse:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.Setting
        description: Setting created.
    description: Response from creating a Setting.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.DeleteSettingResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Setting.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      clusterGroupName:
        type: string
        description: Name of the cluster group.
      name:
        type: string
        description: |-
          Name of the setting.
          This should be same as the name of setting type.
    description: Full name of the ClusterGroup on which the Setting is applied.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.GetSettingResponse:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.Setting
        description: Setting returned.
    description: Response from getting a Setting.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.Setting:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.FullName
        description: Full name for the ClusterGroup Setting.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the ClusterGroup Setting.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.setting.Spec'
        description: Spec for the ClusterGroup Setting.
    description: A Setting to apply on a ClusterGroup.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.UpdateSettingRequest:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.Setting
        description: Update Setting.
    description: Request to update (overwrite) a Setting.
  vmware.tanzu.manage.v1alpha1.clustergroup.setting.UpdateSettingResponse:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.setting.Setting
        description: Setting updated.
    description: Response from updating a Setting.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.AssignedGroup:
    type: object
    properties:
      clustergroup:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.clustergroup.FullName'
        description: Full name of a cluster group.
      cluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Full name of a cluster.
    description: Group of resources the backup location will be assigned to.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the backup location object.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.FullName
        description: Full name for the BackupLocation.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Spec
        description: Spec for the backup location.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status
        description: Status of the backup location.
    description: A target location for backups.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.CreateBackupLocationRequest:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: BackupLocation to create.
    description: Request to create a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.CreateBackupLocationResponse:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: BackupLocation created.
    description: Response from creating a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.DeleteBackupLocationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      providerName:
        type: string
        description: Name of the data protection provider name.
      name:
        type: string
        description: Name of the Backup Location.
    description: |-
      Full name of the resource. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.GetBackupLocationResponse:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: BackupLocation returned.
    description: Response from getting a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.ListBackupLocationsResponse:
    type: object
    properties:
      backupLocations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: List of backuplocations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing BackupLocations.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.PatchBackupLocationRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.FullName
        description: BackupLocation to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.PatchBackupLocationResponse:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: BackupLocation patched.
    description: Response from patching a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.SearchScope:
    type: object
    properties:
      providerName:
        type: string
        description: >-
          Scope search to the specified provider_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      credentialName:
        type: string
        description: >-
          Filter backup locations by a credential name; supports globbing;
          default (*).
      assignedGroupName:
        type: string
        description: >-
          Filter backup locations by an assigned group name; supports globbing;
          default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Spec:
    type: object
    properties:
      targetProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.TargetProvider
        description: The target provider of the backup storage.
      config:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.TargetProviderSpecificConfig
        description: Provider-specific storage configuration fields.
      bucket:
        type: string
        description: The bucket to use for object storage.
      region:
        type: string
        description: The region of the bucket origin. Optional.
      credential:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.account.credential.FullName'
        description: The name of credential to be used to access the bucket.
      assignedGroups:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.AssignedGroup
        description: List of groups the backup location will be assigned to.
      caCert:
        type: string
        description: >-
          A PEM-encoded certificate bundle to trust while connecting to the
          storage backend. Optional.
    description: The backup location spec.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status:
    type: object
    properties:
      observedGeneration:
        type: string
        description: The resource generation the current status applies to.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status.Phase
        description: The overall phase of the backup location.
      phaseInfo:
        type: string
        description: Additional info about the phase.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The Conditions attached to a backup location.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status.Phase
        description: A list of available phases for backup location object.
      type:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status.Type
        description: Type of the backup location.
    description: Status of the backup location resource.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - PENDING_DELETE
      - DELETING
      - READY
      - ERROR
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Available phases for backup location object.

       - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
       - PENDING: Pending phase is set when the backup location object is being processed by the service (TMC).
       - CREATING: Creating phase is set when backup location is being created by the service.
       - PENDING_DELETE: Pending delete is set when the backup location delete is being processed by the service.
       - DELETING: Deleting the set when the backup location delete is in progress.
       - READY: Ready phase is set when the backup location is successfully created.
       - ERROR: Error phase is set when there was a failure while creating/deleting backup location.
       - UPDATING: Updating the set when the backup location is being updated.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.Status.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - MANAGED
      - UNMANAGED
    default: TYPE_UNSPECIFIED
    description: |-
      Type of the backup location.

       - TYPE_UNSPECIFIED: Type Unspecified is the default type for a backup location.
       - MANAGED: Type MANAGED indicates backup location(bucket) is managed by TMC.
       - UNMANAGED: UNMANAGED indicates backup location(bucket) is not managed by TMC.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.UpdateBackupLocationRequest:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: Update BackupLocation.
    description: Request to update (overwrite) a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.UpdateBackupLocationResponse:
    type: object
    properties:
      backupLocation:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.backuplocation.BackupLocation
        description: BackupLocation updated.
    description: Response from updating a BackupLocation.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of the Provider.
    description: Full name of the data protection provider.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.GetProviderResponse:
    type: object
    properties:
      provider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.Provider
        description: Provider returned.
    description: Response from getting a Provider.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.ListProvidersResponse:
    type: object
    properties:
      providers:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.Provider
        description: List of providers.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Providers.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.Provider:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the data protection provider.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.dataprotection.provider.FullName
        description: Full name for the data protection provider.
    description: A data protection provider.
  vmware.tanzu.manage.v1alpha1.dataprotection.provider.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.ekscluster.AddonsConfig:
    type: object
    properties:
      vpcCniAddonConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.VpcCniAddonConfig
        description: Kubernetes vpc-cni addon.
      snapshotControllerAddonConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.SnapshotControllerAddonConfig
        description: Kubernetes snapshot-controller addon.
    description: EKS addons configuration.
  vmware.tanzu.manage.v1alpha1.ekscluster.ApplyEksClusterRequest:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster to apply.
    description: Request to apply an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.ApplyEksClusterResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster applied.
    description: Response from applying an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.ControlPlaneConfig:
    type: object
    properties:
      version:
        type: string
        description: Kubernetes version of the cluster.
      roleArn:
        type: string
        description: >-
          ARN of the IAM role that provides permissions for the Kubernetes
          control plane to make calls to AWS API operations.
      vpc:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.VPCConfig'
        description: VPC config.
      kubernetesNetworkConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.KubernetesNetworkConfig
        description: Kubernetes Network Config.
      tags:
        type: object
        additionalProperties:
          type: string
        description: >-
          The metadata to apply to the cluster to assist with categorization and
          organization.
      logging:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.Logging'
        description: EKS logging configuration.
      addonsConfig:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.AddonsConfig'
        description: EKS addons configuration.
    description: The EKS cluster config.
  vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.FullName'
        description: Full name for the cluster.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.Spec'
        description: Spec for the cluster.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.Status'
        description: Status for the cluster.
    description: EksCluster is an EKS Kubernetes Cluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.EniConfig:
    type: object
    properties:
      subnetId:
        type: string
        description: SubnetId for the pods running in all nodes in a given AZ.
      securityGroupIds:
        type: array
        items:
          type: string
        description: >-
          Security group for the pods. If not provided, default security group
          created by EKS will be used.
    description: EKS vpc-cni addon ENI configuration.
  vmware.tanzu.manage.v1alpha1.ekscluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      credentialName:
        type: string
        description: Name of the credential.
      region:
        type: string
        description: Name of the region.
      name:
        type: string
        description: Name of this cluster.
    description: |-
      Full name of the cluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.ekscluster.KubernetesNetworkConfig:
    type: object
    properties:
      serviceCidr:
        type: string
        description: Service CIDR for Kubernetes services.
    description: The network configuration for the EKS cluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.Logging:
    type: object
    properties:
      apiServer:
        type: boolean
        description: Enable API server logs.
      audit:
        type: boolean
        description: Enable audit logs.
      authenticator:
        type: boolean
        description: Enable authenticator logs.
      controllerManager:
        type: boolean
        description: Enable controller manager logs.
      scheduler:
        type: boolean
        description: Enable scheduler logs.
    title: >-
      EKS logging configuration.

      Refer
      https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html
      for more info
  vmware.tanzu.manage.v1alpha1.ekscluster.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - CREATING
      - READY
      - DELETING
      - ERROR
      - UPDATING
      - OVER_LIMIT
      - UPGRADING
      - PENDING_MANAGE
      - PENDING_UNMANAGE
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the cluster resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Resource is pending processing.
       - CREATING: Resource is being created.
       - READY: Resource is ready state.
       - DELETING: Resource is being deleted.
       - ERROR: Error in processing.
       - UPDATING: This phase is used to reflect the UPDATING state of EKS cluster.
       - OVER_LIMIT: This phase indicates cluster has crossed resource limits set for the organization.
      For such cluster we no longer sync data back to TMC.
       - UPGRADING: This phase indicates kubernetes version is being upgraded for the cluster.
       - PENDING_MANAGE: This phase indicates the cluster is in the process of being managed by TMC.
       - PENDING_UNMANAGE: This phase indicates the cluster is in the process of being unmanaged by TMC.
  vmware.tanzu.manage.v1alpha1.ekscluster.SnapshotControllerAddonConfig:
    type: object
    properties:
      enabled:
        type: boolean
        description: Enable snapshot-controller addon.
    description: EKS snapshot-controller addon configuration.
  vmware.tanzu.manage.v1alpha1.ekscluster.Spec:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: Name of the cluster group to which this cluster belongs.
      config:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ControlPlaneConfig
        description: EKS config for the cluster control plane.
      proxyName:
        type: string
        description: |-
          Optional proxy name is the name of the Proxy Config
          to be used for the cluster.
      agentName:
        type: string
        description: Name of the cluster in TMC.
      arn:
        type: string
        description: ARN of the cluster in EKS.
    description: Spec of the cluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.Phase'
        description: Phase of the cluster resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the cluster resource.
      platformVersion:
        type: string
        title: >-
          AWS EKS platform version that this cluster uses.

          https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html
    description: Status of the EKS cluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.VPCConfig:
    type: object
    properties:
      enablePrivateAccess:
        type: boolean
        description: Enable private access on the cluster.
      enablePublicAccess:
        type: boolean
        description: Enable public access on the cluster.
      publicAccessCidrs:
        type: array
        items:
          type: string
        description: Public access cidrs.
      securityGroups:
        type: array
        items:
          type: string
        description: Security groups for the cluster VMs.
      subnetIds:
        type: array
        items:
          type: string
        description: Subnet ids used by the cluster.
    description: The VPC configuration for the EKS cluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.VpcCniAddonConfig:
    type: object
    properties:
      eniConfigs:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EniConfig'
        description: >-
          ENIConfig provides configuration of subnet and security groups for
          pods in each Availability Zone.
    description: EKS vpc-cni addon configuration.
  vmware.tanzu.manage.v1alpha1.ekscluster.GetEksClusterIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: EksCluster policy.
    description: GetEksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.FullName'
        description: EksCluster full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchEksClusterIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchEksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.TestEksClusterIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.FullName'
        description: EksCluster full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestEksClusterIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.ekscluster.TestEksClusterIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestEksClusterIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.UpdateEksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: EksCluster policy set.
    description: UpdateEksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.AccountAccessStatus:
    type: object
    properties:
      state:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.AccountAccessStatus.State
        description: The status of our access to target AWS account.
      message:
        type: string
        description: The detailed message explaining the reason for the state.
    description: The status of the access to the target AWS account.
  vmware.tanzu.manage.v1alpha1.ekscluster.AccountAccessStatus.State:
    type: string
    enum:
      - STATE_UNSPECIFIED
      - PENDING
      - SUCCEEDED
      - FAILED
      - INVALID
    default: STATE_UNSPECIFIED
    description: |-
      The state of our access to the AWS account.

       - STATE_UNSPECIFIED: Unspecified state.
       - PENDING: Still in the process of accessing the customer's AWS account.
       - SUCCEEDED: Successfully accessed customer's AWS account.
       - FAILED: Failed to access customer's AWS account.
       - INVALID: Invalid access definition for the AWS account.
  vmware.tanzu.manage.v1alpha1.ekscluster.AmiTypeOptions:
    type: object
    properties:
      amiType:
        type: string
        description: Supported AMI type.
      instanceTypeOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.InstanceTypeOptions
        description: List of instance types.
    description: AWS specific ami types options.
  vmware.tanzu.manage.v1alpha1.ekscluster.ImageOptions:
    type: object
    properties:
      imageId:
        type: string
        description: Image id.
      imageName:
        type: string
        description: Image name.
      architectureType:
        type: string
        description: Architecture type.
      rootDiskType:
        type: string
        description: Root disk type.
      rootDiskSize:
        type: integer
        format: int32
        description: Root disk size.
    description: Available image options.
  vmware.tanzu.manage.v1alpha1.ekscluster.InstanceTypeOptions:
    type: object
    properties:
      instanceType:
        type: string
        description: AWS instance type.
      vcpu:
        type: integer
        format: int32
        description: The number of vCPUs for the instance type.
      memoryInMib:
        type: string
        format: int64
        description: The size of the memory, in MiB.
    description: AWS specific instance type options.
  vmware.tanzu.manage.v1alpha1.ekscluster.LaunchTemplateOptions:
    type: object
    properties:
      id:
        type: string
        description: The ID of the launch template.
      name:
        type: string
        description: The name of the launch template.
      launchTemplateVersionOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.LaunchTemplateVersionOptions
        description: Launch template version related options.
    description: Launch template options.
  vmware.tanzu.manage.v1alpha1.ekscluster.LaunchTemplateVersionOptions:
    type: object
    properties:
      version:
        type: string
        format: int64
        description: The version of the launch template.
      iamInstanceProfileDefined:
        type: boolean
        description: Is IAM instance profile defined in the template.
      networkInterfaceDefined:
        type: boolean
        description: Is atleast one network interface defined in the template.
      instanceType:
        type: string
        description: Defined instance type in the template.
      amiType:
        type: string
        description: Defined AMI type in the template.
      sshKey:
        type: string
        description: Defined SSH key in the template.
      securityGroups:
        type: array
        items:
          type: string
        description: Defined security groups in the template.
    description: Launch template version related options.
  vmware.tanzu.manage.v1alpha1.ekscluster.ListEksClusterOptionsResponse:
    type: object
    properties:
      options:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.Options'
        description: List the options available for cluster/nodepool operations.
    description: Response from listing ekscluster options.
  vmware.tanzu.manage.v1alpha1.ekscluster.Options:
    type: object
    properties:
      regionalOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.RegionalOptions
        description: List of regional options for the EKS cloud provider.
      roleOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.RoleOptions'
        description: Roles specific to AWS.
      capacityTypes:
        type: array
        items:
          type: string
        description: List of supported capacity types.
      versionList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.Version'
        description: List of supported Kubernetes versions.
      accessStatus:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.AccountAccessStatus
        description: The information about of our access to the EKS account.
    description: Options available for cluster/nodepool operations.
  vmware.tanzu.manage.v1alpha1.ekscluster.RegionalOptions:
    type: object
    properties:
      regionName:
        type: string
        description: Name of the region.
      amiTypeOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.AmiTypeOptions'
        description: List of ami types.
      vpcOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.VPCOptions'
        description: List of VPCs.
      sshKeyNames:
        type: array
        items:
          type: string
        description: List of AWS SSH key name.
      launchTemplateOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.LaunchTemplateOptions
        description: Launch template options.
      imageOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ImageOptions'
        description: image options.
      releaseVersionOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.ReleaseVersionOptions
        description: List of recommended ami release versions.
    description: AWS specific regional options.
  vmware.tanzu.manage.v1alpha1.ekscluster.ReleaseVersionOptions:
    type: object
    properties:
      kubernetesVersion:
        type: string
        description: The k8s version.
      recommendedReleaseVersion:
        type: string
        description: The AMI release version corresponding to the k8s version.
    description: AMI release version options.
  vmware.tanzu.manage.v1alpha1.ekscluster.RoleOptions:
    type: object
    properties:
      roleName:
        type: string
        description: AWS role name.
      roleArn:
        type: string
        description: AWS role ARN.
    description: Roles specific to AWS.
  vmware.tanzu.manage.v1alpha1.ekscluster.SecurityGroupOptions:
    type: object
    properties:
      securityGroupId:
        type: string
        description: ID of the security group.
      name:
        type: string
        description: Name of the security group.
    description: Security group options.
  vmware.tanzu.manage.v1alpha1.ekscluster.SubnetOptions:
    type: object
    properties:
      subnetId:
        type: string
        description: ID of the subnet.
      name:
        type: string
        description: Name of the subnet.
      cidr:
        type: string
        description: CIDR of the subnet.
      availabilityZone:
        type: string
        description: Availability zone that the subnet is belonged to.
      public:
        type: boolean
        description: Public or private subnet.
    description: AWS specific subnet options.
  vmware.tanzu.manage.v1alpha1.ekscluster.VPCOptions:
    type: object
    properties:
      vpcId:
        type: string
        description: ID of the AWS VPC.
      subnetOptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.SubnetOptions'
        description: List of subnets that is supported in the VPC.
      name:
        type: string
        description: Name of the VPC.
      cidr:
        type: string
        description: CIDR of the VPC.
      securityGroupOptions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.SecurityGroupOptions
        description: List of security group options.
    description: AWS specific vpc options.
  vmware.tanzu.manage.v1alpha1.ekscluster.Version:
    type: object
    properties:
      name:
        type: string
        description: Name of the kubernetes version.
      isDefault:
        type: boolean
        description: Is default version.
    description: The kubernetes version spec.
  vmware.tanzu.manage.v1alpha1.ekscluster.CreateEksClusterRequest:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster to create.
    description: Request to create an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.CreateEksClusterResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster created.
    description: Response from creating an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.DeleteEksClusterResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.EnumerateEksClustersResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster object.
    description: Streamed response from enumerating EksClusters.
  vmware.tanzu.manage.v1alpha1.ekscluster.GetEksClusterResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster returned.
    description: Response from getting an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.ListEksClustersResponse:
    type: object
    properties:
      eksClusters:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: List of eksclusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing EksClusters.
  vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.FullName'
        description: EksCluster to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.PatchEksClusterResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster patched.
    description: Response from patching an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.SearchScope:
    type: object
    properties:
      credentialName:
        type: string
        description: >-
          Scope search to the specified credential_name; supports globbing;
          default (*).
      region:
        type: string
        description: Scope search to the specified region; supports globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.ekscluster.UpdateEksClusterRequest:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: Update EksCluster.
    description: Request to update (overwrite) an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.UpdateEksClusterResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster updated.
    description: Response from updating an EksCluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.WatchEksClustersResponse:
    type: object
    properties:
      eksCluster:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.EksCluster'
        description: EksCluster event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching EksClusters.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.AmiInfo:
    type: object
    properties:
      amiId:
        type: string
        description: >-
          AMI id if custom AMI is specified. It cannot be used if launch
          template id is specified.
      overrideBootstrapCmd:
        type: string
        description: Override bootstrap command for custom AMI.
    description: AMI info for the nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ApplyNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool to apply.
    description: Request to apply a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ApplyNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool applied.
    description: Response from applying a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      credentialName:
        type: string
        description: Name of the credential.
      region:
        type: string
        description: Region of the cluster.
      eksClusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of the nodepool.
    description: |-
      Full name of the nodepool. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.LaunchTemplate:
    type: object
    properties:
      id:
        type: string
        description: The ID of the launch template.
      name:
        type: string
        description: The name of the launch template.
      version:
        type: string
        description: >-
          The version of the launch template to use. If no version is specified,
          then the template's default version is used.
    description: Launch template for the nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.FullName
        description: Full name for the Nodepool.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Nodepool object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Spec'
        description: Spec for the Nodepool.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Status'
        description: Status of the Nodepool.
    description: Nodepool associated with a EKS cluster.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.RemoteAccess:
    type: object
    properties:
      sshKey:
        type: string
        description: SSH key for the nodepool VMs.
      securityGroups:
        type: array
        items:
          type: string
        description: Security groups for the cluster VMs.
    description: Remote access to worker nodes.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ScalingConfig:
    type: object
    properties:
      desiredSize:
        type: integer
        format: int32
        description: Desired size of nodepool.
      maxSize:
        type: integer
        format: int32
        description: Maximum size of nodepool.
      minSize:
        type: integer
        format: int32
        description: Minimum size of nodepool.
    description: Nodepool scaling config.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Spec:
    type: object
    properties:
      roleArn:
        type: string
        description: >-
          ARN of the IAM role that provides permissions for the Kubernetes
          nodepool to make calls to AWS API operations.
      instanceTypes:
        type: array
        items:
          type: string
        description: |-
          Nodepool instance types.
          The potential values could be found using cluster:options api.
      scalingConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ScalingConfig
        description: Nodepool scaling config.
      rootDiskSize:
        type: integer
        format: int32
        description: Root disk size in GiB. Defaults to 20 GiB.
      remoteAccess:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.RemoteAccess
        description: Remote access to worker nodes.
      subnetIds:
        type: array
        items:
          type: string
        description: Subnets required for the nodepool.
      updateConfig:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateConfig
        description: Update config for the nodepool.
      launchTemplate:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.LaunchTemplate
        description: Launch template for the nodepool.
      amiType:
        type: string
        description: AMI type.
      taints:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Taint'
        description: If specified, the node's taints.
      nodeLabels:
        type: object
        additionalProperties:
          type: string
        description: Kubernetes node labels.
      tags:
        type: object
        additionalProperties:
          type: string
        description: EKS specific tags.
      capacityType:
        type: string
        description: Capacity type.
      amiInfo:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.AmiInfo'
        description: AMI info for the nodepool.
      arn:
        type: string
        description: ARN of the nodepool in EKS.
      releaseVersion:
        type: string
        description: Release version of the AMI.
    description: Spec for the cluster nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Status.Phase
        description: Phase of the nodepool resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions for the nodepool resource.
    description: Status of node pool resource.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - READY
      - ERROR
      - DELETING
      - RESIZING
      - UPGRADING
      - UPGRADE_FAILED
      - WAITING
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the nodepool resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - CREATING: Resource is pending processing.
       - READY: Resource is in ready state.
       - ERROR: Error in processing.
       - DELETING: Resource is being deleted.
       - RESIZING: Resizing state.
       - UPGRADING: An upgrade is in progress.
       - UPGRADE_FAILED: An upgrade has failed.
       - WAITING: The cluster is not created yet. so wait till then.
       - UPDATING: A generic phase for nodepool update.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Taint:
    type: object
    properties:
      effect:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Taint.Effect
        description: Current effect state of the node pool.
      key:
        type: string
        description: The taint key to be applied to a node.
      value:
        type: string
        description: The taint value corresponding to the taint key.
    description: |-
      The node this Taint is attached to has the "effect" on
      any pod that does not tolerate the Taint.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Taint.Effect:
    type: string
    enum:
      - EFFECT_UNSPECIFIED
      - NO_SCHEDULE
      - NO_EXECUTE
      - PREFER_NO_SCHEDULE
    default: EFFECT_UNSPECIFIED
    description: >-
      The effect of the taint on pods

      that do not tolerate the taint.

      Valid effects are NoSchedule, NoExecute, PreferNoSchedule and
      EffectUnspecified.

       - EFFECT_UNSPECIFIED: Unspecified effect.
       - NO_SCHEDULE: Pods that do not tolerate this taint are not scheduled on the node.
       - NO_EXECUTE: Pods are evicted from the node if are already running on the node.
       - PREFER_NO_SCHEDULE: Avoids scheduling Pods that do not tolerate this taint onto the node.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateConfig:
    type: object
    properties:
      maxUnavailableNodes:
        type: string
        format: int64
        description: Maximum number of nodes unavailable at once during a version update.
      maxUnavailablePercentage:
        type: string
        format: int64
        description: Maximum percentage of nodes unavailable during a version update.
    description: Update config for the nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.GetNodepoolIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Nodepool policy.
    description: GetNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.FullName
        description: Nodepool full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchNodepoolIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.TestNodepoolIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.FullName
        description: Nodepool full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestNodepoolIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.TestNodepoolIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestNodepoolIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateNodepoolIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Nodepool policy set.
    description: UpdateNodepoolIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.CreateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool to create.
    description: Request to create a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.CreateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool created.
    description: Response from creating a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.DeleteNodepoolResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.EnumerateNodepoolsResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool object.
    description: Streamed response from enumerating Nodepools.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.GetNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool returned.
    description: Response from getting a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.ListNodepoolsResponse:
    type: object
    properties:
      nodepools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: List of nodepools.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Nodepools.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.FullName
        description: Nodepool to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.PatchNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool patched.
    description: Response from patching a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.SearchScope:
    type: object
    properties:
      credentialName:
        type: string
        description: >-
          Scope search to the specified credential_name; supports globbing;
          default (*).
      region:
        type: string
        description: Scope search to the specified region; supports globbing; default (*).
      eksClusterName:
        type: string
        description: >-
          Scope search to the specified eks_cluster_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Update Nodepool.
    description: Request to update (overwrite) a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.UpdateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool updated.
    description: Response from updating a Nodepool.
  vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.WatchNodepoolsResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.ekscluster.nodepool.Nodepool
        description: Nodepool event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Nodepools.
  vmware.tanzu.manage.v1alpha1.events.Event:
    type: object
    properties:
      id:
        type: string
        description: A globally unique event identifier (uuid).
      time:
        type: string
        format: date-time
        description: The timestamp of when the event occured according to the source (UTC).
      type:
        type: string
        title: |-
          The type is similar to having an event namespace or package
          it enables more validation on the expected contents of data.
          e.g. com.vmware.tmc.audit
      source:
        type: string
        title: >-
          The source, preferably an absolute URI reference.

          e.g.
          https://example.tmc.cloud.vmware.com/clusters/create?accountName=accname
      subject:
        type: string
        title: >-
          The subject is useful as a qualifier for multiple types of events
          coming from

          the same source without resorting to parsing the data payload. 

          e.g. ClusterLifecycleEvent
      attributes:
        type: object
        additionalProperties:
          type: object
        description: All other context metadata attributes.
      data:
        type: object
        description: Domain specific information.
    description: >-
      Event is any event that has occured within TMC.

      This is closely modeled after CloudEvents, however since there is no
      official

      protobuf specification; we define our own message.
  vmware.tanzu.manage.v1alpha1.events.ListEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.events.Event'
        description: List of Events.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Events.
  vmware.tanzu.manage.v1alpha1.events.StreamEventsResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.events.Event'
        description: An event.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.Feature:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.FullName
        description: Full name of the Feature.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Feature object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.Spec
        description: Spec for the Feature.
    description: The Feature resource.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.FullName:
    type: object
    properties:
      name:
        type: string
        description: Name of the Feature.
    description: The full name of the Feature.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.GetFeatureResponse:
    type: object
    properties:
      feature:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.Feature
        description: Feature returned.
    description: Response from getting a Feature.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.ListFeaturesResponse:
    type: object
    properties:
      features:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.Feature
        description: List of features.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Features.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.iam.currentuser.feature.Spec:
    type: object
    properties:
      value:
        type: string
        description: The value of the Feature.
    description: The spec of the Feature.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.CreatePreferenceRequest:
    type: object
    properties:
      preference:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Preference
        description: Preference to create.
    description: Request to create a Preference.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.CreatePreferenceResponse:
    type: object
    properties:
      preference:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Preference
        description: Preference created.
    description: Response from creating a Preference.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.DeletePreferenceResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Preference.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: Organization ID of the user.
      userId:
        type: string
        description: ID of the user.
      name:
        type: string
        description: Name of this preference.
    description: |-
      Full name of the Preference. This includes organization and user
      IDs to identify the particular user as well as a unique preference
      name.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.GetPreferenceResponse:
    type: object
    properties:
      preference:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Preference
        description: Preference returned.
    description: Response from getting a Preference.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Preference:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.FullName
        description: Full name of the user attribute.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the resource.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Spec
        description: Spec for the preference.
    description: >-
      Preference represents user information specific to the current user. It is
      stored without

      precise access controls and represents data such as UI preferences and
      EULA signing status.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Spec:
    type: object
    properties:
      value:
        type: object
        description: |-
          Preference value, can be null, a number, a string, a boolean, a nested
          struct, or a list. In the REST API this can be any JSON value.
    description: The specification of a Preference.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.UpdatePreferenceRequest:
    type: object
    properties:
      preference:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Preference
        description: Update Preference.
    description: Request to update (overwrite) a Preference.
  vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.UpdatePreferenceResponse:
    type: object
    properties:
      preference:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.currentuser.preference.Preference
        description: Preference updated.
    description: Response from updating a Preference.
  vmware.tanzu.manage.v1alpha1.iam.directory.Group:
    type: object
    properties:
      id:
        type: string
        title: Unique group ID (e.g., "be9a51ac-e154-4a45-b0b8-edd80a658c0b")
      name:
        type: string
        title: Human readable display name (e.g., "my group")
      userCount:
        type: integer
        format: int64
        description: Number of users who belong to this group.
    description: Group represents a named group from the upstream identity provider.
  vmware.tanzu.manage.v1alpha1.iam.directory.Principal:
    type: object
    properties:
      principalId:
        type: string
        description: Principle ID is the globally unique identifier for this user/group.
      user:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.directory.User'
        description: Identity of a user.
      group:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.directory.Group'
        description: Identity of a group.
    description: Principal is an enumeration of user or group identities.
  vmware.tanzu.manage.v1alpha1.iam.directory.SearchRequest:
    type: object
    properties:
      query:
        type: string
        description: >-
          Search query (for some implementation-specific algorithm). For
          example,

          a query of "use" might match the user "user1@example.com" and the
          group

          "Warehouse" which both contain it as a substring.


          This query would typically come from a user entering text into an

          autocompleted UI element.
    description: Request to list users and groups.
  vmware.tanzu.manage.v1alpha1.iam.directory.SearchResponse:
    type: object
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.directory.Principal'
        description: >-
          Search results, truncated to an arbitrary maxiumum number of entries.
          Use a more

          specific search query to narrow down the results if necessary.


          A best effort is made to rank the results by relevance (most relevant
          results first).
    description: Response containing matching users and/or groups.
  vmware.tanzu.manage.v1alpha1.iam.directory.User:
    type: object
    properties:
      id:
        type: string
        title: >-
          Unique user ID (e.g.,
          "vmware.com:a8fa9fb2-dc13-4ecf-86df-d93857173174")
      username:
        type: string
        description: Human-readable username (e.g., "user").
      email:
        type: string
        description: User email address (e.g., "user@example.com").
      domain:
        type: string
        description: Identity domain (e.g., "vmware.com").
      firstName:
        type: string
        description: Human-readable first name/surname (CSP calls this "first name").
      lastName:
        type: string
        description: Human-readable last name/family name (CSP calls this "last name").
    description: User represents a user from the upstream identity provider.
  vmware.tanzu.manage.v1alpha1.iam.effective.Effective:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.FullName'
        description: Full name for the effective iam policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the effective iam policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Spec'
        description: Spec for the effective iam policy.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Status'
        description: Status of the effective iam policy.
    description: Effective iam policy applied on a resource.
  vmware.tanzu.manage.v1alpha1.iam.effective.EnumerateEffectiveResponse:
    type: object
    properties:
      effective:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Effective'
        description: Effective object.
    description: Streamed response from enumerating Effective.
  vmware.tanzu.manage.v1alpha1.iam.effective.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: >-
          Name of the effective iam policy.


          This will be concatenation of target UID and policy UID.

          Format: <target_uid>_<policy_uid>

          Example:
          cg:01DY64VR4XN83XGCJSC6JVHYS2_bc27608b-4809-4cac-9e04-778803963da2
    description: Full name of the effective iam policy.
  vmware.tanzu.manage.v1alpha1.iam.effective.ListEffectiveResponse:
    type: object
    properties:
      effective:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Effective'
        description: List of effective.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Effective.
  vmware.tanzu.manage.v1alpha1.iam.effective.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      targetResourceUid:
        type: string
        description: Filter by UID of target resource; supports globbing; default (*).
      phase:
        type: string
        description: Filter by phase of the policy; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.iam.effective.Spec:
    type: object
    properties:
      targetResource:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          The reference to the target object on which the policy is effectively
          applied.
      sourcePolicy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          The reference to the source iam policy object.

          This is same as the source resource on which the iam policy was
          created.
      policySpec:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: The original iam policy spec.
      inherited:
        type: boolean
        description: >-
          Boolean flag that specifies whether the policy was inherited from a
          parent.
    description: Spec of the effective iam policy.
  vmware.tanzu.manage.v1alpha1.iam.effective.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Status.Phase'
        description: Phase of the effective iam policy application on the target resource.
      phaseInfo:
        type: string
        description: Phase info contains additional information about the phase.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Status.Phase
        description: Available phases is a list of available phases for iam policy.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this effective iam policy.


          Below are the conditions that will be set on this resource:

          - "Processing": Set to true when we start applying the iam policy.

          - "Scheduled": Set to true when we have created the intent to apply
          the iam policy.

          - "Ready": Set to true when the iam policy is successfully applied.
    description: Status of the effective iam policy.
  vmware.tanzu.manage.v1alpha1.iam.effective.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - APPLYING
      - APPLIED
      - ERROR
      - DELAYED
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of an iam policy.

       - PHASE_UNSPECIFIED: Phase Unspecified phase is the default state set when an effective iam policy is first created/updated.
       - APPLYING: Applying state is set when we are working on applying the policy.
       - APPLIED: Applied state is set when we have successfully applied the policy.
       - ERROR: Error state is set when there was a failure while applying the policy.
       - DELAYED: Delayed state is set when we are unable to apply the policy for a long time.
  vmware.tanzu.manage.v1alpha1.iam.effective.WatchEffectiveResponse:
    type: object
    properties:
      effective:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.effective.Effective'
        description: Effective event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Effective.
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: Org Id.
      name:
        type: string
        description: Subject name.
      subjectType:
        type: string
        description: Subject type.
    description: FullName.
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.IdentityRoleMapping:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.FullName
        description: FullName for the role.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the role object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.Spec
        description: Spec for the role.
    description: Identity to roles mapping by resource.
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.ListIdentityRoleMappingsResponse:
    type: object
    properties:
      identityRoleMappings:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.IdentityRoleMapping
        description: List of identityrolemappings.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing IdentityRoleMappings.
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.ResourceRef:
    type: object
    properties:
      uid:
        type: string
        description: UID of the resource.
      rid:
        type: string
        description: RID of the resource.
    description: Resource reference - combination of rid+uid.
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.RoleMapping:
    type: object
    properties:
      resource:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.ResourceRef
        description: Resource ref for this role mapping.
      roles:
        type: array
        items:
          type: string
        description: List of roles associated with this resource.
    description: RoleMapping for a resource identified by RID and UID.
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      resourceUid:
        type: string
        description: Filter by resource uid; supports globbing; default (*).
      role:
        type: string
        description: Filter by role; supports globbing; default (*).
      subjectName:
        type: string
        description: Filter by identity name; supports globbing; default (*).
      subjectType:
        type: string
        description: Filter by identity type (GROUP/USER); supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.Spec:
    type: object
    properties:
      roleMappings:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.iam.identityrolemapping.RoleMapping
        description: List of RoleMappings for the identity in fullname.
    description: Spec.
  vmware.tanzu.manage.v1alpha1.iam.permission.ListPermissionsResponse:
    type: object
    properties:
      totalCount:
        type: string
        format: uint64
        description: Total count.
      permissions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.permission.Permission'
        description: List of TMC permissions.
    description: Response for listing TMC permissions.
  vmware.tanzu.manage.v1alpha1.iam.permission.Permission:
    type: object
    properties:
      name:
        type: string
        title: Name of the permission. E.g. "cluster.list", "namespace.get"
      resources:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.permission.Resource'
        description: >-
          Resources for which the permission is applicable. E.g. "cluster",
          "workspace".
    description: Permission represents the permissions valid in TMC.
  vmware.tanzu.manage.v1alpha1.iam.permission.Resource:
    type: string
    enum:
      - RESOURCE_UNSPECIFIED
      - ORGANIZATION
      - MANAGEMENT_CLUSTER
      - PROVISIONER
      - CLUSTER_GROUP
      - CLUSTER
      - WORKSPACE
      - NAMESPACE
    default: RESOURCE_UNSPECIFIED
    description: |-
      Resource Types.

       - RESOURCE_UNSPECIFIED: Unkonwn.
       - ORGANIZATION: Organization.
       - MANAGEMENT_CLUSTER: Management cluster.
       - PROVISIONER: Provisioner.
       - CLUSTER_GROUP: Cluster group.
       - CLUSTER: Cluster.
       - WORKSPACE: Workspace.
       - NAMESPACE: Namespace.
  vmware.tanzu.manage.v1alpha1.iam.role.AggregationRule:
    type: object
    properties:
      clusterRoleSelectors:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector'
        description: Label based Cluster Role Selector.
    description: AggregationRule for a role.
  vmware.tanzu.manage.v1alpha1.iam.role.CreateRoleRequest:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role to create.
    description: Request to create a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.CreateRoleResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role created.
    description: Response from creating a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.DeleteRoleResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.EnumerateRolesResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role object.
    description: Streamed response from enumerating Roles.
  vmware.tanzu.manage.v1alpha1.iam.role.FullName:
    type: object
    properties:
      name:
        type: string
        description: Name of the role.
      orgId:
        type: string
        description: Org Id.
    description: Full name for role.
  vmware.tanzu.manage.v1alpha1.iam.role.GetRoleResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role returned.
    description: Response from getting a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.KubernetesRule:
    type: object
    properties:
      resources:
        type: array
        items:
          type: string
        description: Resources - added a validation to input.
      verbs:
        type: array
        items:
          type: string
        description: Verbs.
      apiGroups:
        type: array
        items:
          type: string
        description: API group.
      nonResourceUrls:
        type: array
        items:
          type: string
        description: Non-resource urls for the role.
      resourceNames:
        type: array
        items:
          type: string
        title: ResourceNames to restrict the rule to resources by name
    description: KubernetesRule for a role.
  vmware.tanzu.manage.v1alpha1.iam.role.ListRolesResponse:
    type: object
    properties:
      roles:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: List of roles.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Roles.
  vmware.tanzu.manage.v1alpha1.iam.role.PatchRoleRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.FullName'
        description: Role to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.PatchRoleResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role patched.
    description: Response from patching a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.Role:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.FullName'
        description: Full name for the role.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the role object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Spec'
        description: Spec for the role.
    description: Manage permissions on resources.
  vmware.tanzu.manage.v1alpha1.iam.role.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.iam.role.Spec:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: >-
          List of permissions associated with the role eg. resource.get,
          resource.iam.get etc.

          Deprecated - use tanzu_permissions instead.
      resourceTypes:
        type: array
        items:
          type: string
        description: |-
          Relevant resource types for the role.
          Deprecated - use resources instead.
      resources:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.permission.Resource'
        description: Valid resources for this role.
      tanzuPermissions:
        type: array
        items:
          type: string
        description: Tanzu-specific permissions for the role.
      rules:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.KubernetesRule'
        description: KubernetesRule.
      isDeprecated:
        type: boolean
        description: Flag representing whether role is deprecated.
      isInbuilt:
        type: boolean
        description: This flag will help the client identify if this is an inbuilt role.
      aggregationRule:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.AggregationRule'
        description: AggregationRule.
    description: Spec for role.
  vmware.tanzu.manage.v1alpha1.iam.role.UpdateRoleRequest:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Update Role.
    description: Request to update (overwrite) a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.UpdateRoleResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role updated.
    description: Response from updating a Role.
  vmware.tanzu.manage.v1alpha1.iam.role.WatchRolesResponse:
    type: object
    properties:
      role:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.iam.role.Role'
        description: Role event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Roles.
  vmware.tanzu.manage.v1alpha1.integration.FullName:
    type: object
    properties:
      name:
        type: string
        description: Name of this Integration.
    description: |-
      Full name of the integration. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.integration.GetIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.integration.Integration'
        description: Integration returned.
    description: Response from getting an Integration.
  vmware.tanzu.manage.v1alpha1.integration.Information:
    type: object
    properties:
      displayName:
        type: string
        description: Display name of the Integration.
      documentationLink:
        type: string
        description: Link to the documentation related to Integration.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: |-
          The conditions required for the integration to be enabled.

          If there are no conditions required, this will be empty.
      configurations:
        type: object
        additionalProperties:
          type: object
        description: >-
          Configurations holds the static config values of an integration
          required to be shown on the UI.
      endpoint:
        type: string
        description: If there is no specific partner service endpoint, this will be empty.
        title: Partner service endpoint of the Integration
    description: Information message provides details about integration.
  vmware.tanzu.manage.v1alpha1.integration.Integration:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.integration.FullName'
        description: Full name for the integration.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the integration.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.integration.Status'
        description: Status of the Integration.
    description: Get available integrations and their information from registry.
  vmware.tanzu.manage.v1alpha1.integration.ListIntegrationsResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.integration.Integration'
        description: List of integrations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Integrations.
  vmware.tanzu.manage.v1alpha1.integration.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.integration.Status:
    type: object
    properties:
      info:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.integration.Information'
        description: Information of the integration.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Phase
        description: State of the integration at organization level.
      clusterCount:
        type: integer
        format: int64
        description: >-
          Cluster count is the count of clusters with enabled integration within
          the organization.
    description: Status of the Integration.
  vmware.tanzu.manage.v1alpha1.organization.integration.Phase:
    type: string
    enum:
      - UNSPECIFIED
      - ENABLING
      - REGISTERED
      - ENABLED
      - INITIATION_ERROR
      - DISABLING
      - UNREGISTERED
      - TERMINATION_ERROR
      - DISABLED
    default: UNSPECIFIED
    description: |-
      Integration Lifecycle Phase.

       - UNSPECIFIED: Unspecified  phase.
       - ENABLING: Enabling phase when process for enabling integration for an organization is started.
       - REGISTERED: Registered phase when communication between inter product services is completed successfully for enabling integration.
       - ENABLED: Enabled phase when integration is enabled for an organization.
       - INITIATION_ERROR: Initiation Error phase when there is any issue during enablement of the integration.
       - DISABLING: Disabling phase when process for removing integration from organization is started.
       - UNREGISTERED: Unregistered phase when communication between inter product services is completed successfully
      for disabling integration.
       - TERMINATION_ERROR: Termination Error phase when there is any issue during disablement of the integration.
       - DISABLED: Disabled phase when integration is disabled from org / yet to be enabled.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      credentialName:
        type: string
        description: Name of the credential.
      subscriptionId:
        type: string
        description: ID of Azure subscription of the cluster.
      resourceGroupName:
        type: string
        description: Name of the resource group.
      name:
        type: string
        description: Name of this cluster.
    description: |-
      Full name of the cluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.GetProviderAksClusterIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ProviderAksCluster policy.
    description: GetProviderAksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.PatchProviderAksClusterIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.FullName
        description: ProviderAksCluster full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchProviderAksClusterIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.PatchProviderAksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchProviderAksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.TestProviderAksClusterIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.FullName
        description: ProviderAksCluster full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestProviderAksClusterIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.TestProviderAksClusterIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestProviderAksClusterIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.UpdateProviderAksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ProviderAksCluster policy set.
    description: UpdateProviderAksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.GetProviderAksClusterResponse:
    type: object
    properties:
      providerAksCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ProviderAksCluster
        description: ProviderAksCluster returned.
    description: Response from getting a ProviderAksCluster.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ListProviderAksClustersResponse:
    type: object
    properties:
      providerAksClusters:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ProviderAksCluster
        description: List of provideraksclusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ProviderAksClusters.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING_UNMANAGE
      - PENDING_MANAGE
      - UNMANAGED
      - MANAGED
      - ERROR
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the cluster resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING_UNMANAGE: This phase indicates the cluster is in the process of being unmanaged by TMC.
       - PENDING_MANAGE: This phase indicates the cluster is in the process of being managed by TMC.
       - UNMANAGED: This phase indicates the cluster is not managed by TMC.
       - MANAGED: This phase indicates the cluster is managed by TMC.
       - ERROR: Error in processing.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ProviderAksCluster:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.FullName
        description: Full name for the cluster.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.Spec
        description: Spec for the cluster.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.Status
        description: Status for the cluster.
    description: >-
      ProviderAksCluster is an AKS cluster resource identified in Azure.

      It includes all unmanaged AKS clusters and managed AKS clusters in a TMC
      credential associated with an Azure account.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.SearchScope:
    type: object
    properties:
      credentialName:
        type: string
        description: >-
          Scope search to the specified credential_name; supports globbing;
          default (*).
      subscriptionId:
        type: string
        description: >-
          Scope search to the specified subscription_id; supports globbing;
          default (*).
      resourceGroupName:
        type: string
        description: >-
          Scope search to the specified resource_group_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.Spec:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: Name of the cluster group to which this cluster belongs.
      tmcManaged:
        type: boolean
        description: Tmc_managed field indicates whether the cluster is managed by TMC.
      proxyName:
        type: string
        description: >-
          The name of the proxy credential to be used for the TMC agents.

          If specified, the TMC agents will be installed with the proxy
          configurations specified in the proxy credential.
      agentName:
        type: string
        description: Name of the cluster in TMC.
      resourceId:
        type: string
        description: Resource ID of the cluster in Azure.
    description: Spec of the cluster.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.Phase
        description: Phase of the cluster resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the cluster resource.
    description: Status of the Provider Aks Cluster.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.UpdateProviderAksClusterRequest:
    type: object
    properties:
      providerAksCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ProviderAksCluster
        description: Update ProviderAksCluster.
    description: Request to update (overwrite) a ProviderAksCluster.
  vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.UpdateProviderAksClusterResponse:
    type: object
    properties:
      providerAksCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.aks.providerakscluster.ProviderAksCluster
        description: ProviderAksCluster updated.
    description: Response from updating a ProviderAksCluster.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      credentialName:
        type: string
        description: Name of the credential.
      region:
        type: string
        description: Name of the region.
      name:
        type: string
        description: Name of this cluster in EKS.
    description: |-
      Full name of the cluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.GetProviderEksClusterIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ProviderEksCluster policy.
    description: GetProviderEksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.PatchProviderEksClusterIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.FullName
        description: ProviderEksCluster full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchProviderEksClusterIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.PatchProviderEksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchProviderEksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.TestProviderEksClusterIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.FullName
        description: ProviderEksCluster full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestProviderEksClusterIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.TestProviderEksClusterIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestProviderEksClusterIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.UpdateProviderEksClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ProviderEksCluster policy set.
    description: UpdateProviderEksClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.GetProviderEksClusterResponse:
    type: object
    properties:
      providerEksCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ProviderEksCluster
        description: ProviderEksCluster returned.
    description: Response from getting a ProviderEksCluster.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ListProviderEksClustersResponse:
    type: object
    properties:
      providerEksClusters:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ProviderEksCluster
        description: List of providereksclusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ProviderEksClusters.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING_UNMANAGE
      - PENDING_MANAGE
      - UNMANAGED
      - MANAGED
      - ERROR
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the cluster resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING_UNMANAGE: This phase indicates the cluster is in the process of being unmanaged by TMC.
       - PENDING_MANAGE: This phase indicates the cluster is in the process of being managed by TMC.
       - UNMANAGED: This phase indicates the cluster is not managed by TMC.
       - MANAGED: This phase indicates the cluster is managed by TMC.
       - ERROR: Error in processing.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ProviderEksCluster:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.FullName
        description: Full name for the cluster.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.Spec
        description: Spec for the cluster.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.Status
        description: Status for the cluster.
    description: >-
      ProviderEksCluster is an EKS cluster resource identified in AWS.

      It includes all unmanaged EKS clusters and managed EKS clusters in a TMC
      credential associated with an AWS account.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.SearchScope:
    type: object
    properties:
      credentialName:
        type: string
        description: >-
          Scope search to the specified credential_name; supports globbing;
          default (*).
      region:
        type: string
        description: Scope search to the specified region; supports globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.Spec:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: Name of the cluster group to which this cluster belongs.
      arn:
        type: string
        description: ARN of the EKS cluster.
      tmcManaged:
        type: boolean
        description: Tmc_managed field indicates whether the cluster is managed by TMC.
      proxyName:
        type: string
        description: |-
          Optional proxy name is the name of the Proxy Config
          to be used for the cluster.
      agentName:
        type: string
        description: Name of the cluster in TMC.
    description: Spec of the cluster.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.Phase
        description: Phase of the cluster resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the cluster resource.
    description: Status of the Provider Eks Cluster.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.UpdateProviderEksClusterRequest:
    type: object
    properties:
      providerEksCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ProviderEksCluster
        description: Update ProviderEksCluster.
    description: Request to update (overwrite) a ProviderEksCluster.
  vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.UpdateProviderEksClusterResponse:
    type: object
    properties:
      providerEksCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.manage.eks.providerekscluster.ProviderEksCluster
        description: ProviderEksCluster updated.
    description: Response from updating a ProviderEksCluster.
  vmware.tanzu.manage.v1alpha1.common.extension.Health:
    type: string
    enum:
      - HEALTH_UNSPECIFIED
      - HEALTHY
      - UNHEALTHY
    default: HEALTH_UNSPECIFIED
    description: |-
      Health status of the deployed extension.

       - HEALTH_UNSPECIFIED: Unknown.
       - HEALTHY: Healthy.
       - UNHEALTHY: Unhealthy.
  vmware.tanzu.manage.v1alpha1.common.extension.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - ROLLING_BACK
      - ROLLED_BACK
      - PROCESSING
      - PROCESSED
      - FAILED
      - PENDING
      - OUT_OF_SYNC
    default: PHASE_UNSPECIFIED
    description: |-
      Extension lifecycle phase.

       - PHASE_UNSPECIFIED: Unspecified  phase.
       - ROLLING_BACK: Rolling back phase.
       - ROLLED_BACK: Rolled back phase.
       - PROCESSING: Processing phase.
       - PROCESSED: Processed phase.
       - FAILED: Failed phase.
       - PENDING: Pending phase.
       - OUT_OF_SYNC: Out Of Sync phase.
  vmware.tanzu.manage.v1alpha1.common.extension.Status:
    type: object
    properties:
      version:
        type: string
        description: Version of the extension.
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.extension.Phase'
        description: Phase of the extension.
      health:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.extension.Health'
        description: Health of the deployed extension.
      previousVersion:
        type: string
        description: Previous version of the extension.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: The Conditions attached to an extension resource.
    description: Status is the common status of the extension.
  vmware.tanzu.manage.v1alpha1.managementcluster.extension.Extension:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.extension.FullName
        description: Full name for the Extension.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Extension object.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.extension.Status'
        description: Status of the Extension.
    description: Cluster addons for the platform.
  vmware.tanzu.manage.v1alpha1.managementcluster.extension.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      name:
        type: string
        description: Unique identifier of this Extension.
    description: |-
      Full name of the Extension. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.extension.GetExtensionResponse:
    type: object
    properties:
      extension:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.extension.Extension
        description: Extension returned.
    description: Response from getting an Extension.
  vmware.tanzu.manage.v1alpha1.managementcluster.extension.ListExtensionsResponse:
    type: object
    properties:
      extensions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.extension.Extension
        description: List of extensions.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Extensions.
  vmware.tanzu.manage.v1alpha1.managementcluster.extension.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        title: ID of Organization. Generally a GUID
      name:
        type: string
        description: Unique identifier of the ManagementCluster.
    description: |-
      FullName of the managementcluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.FullName'
        description: Full name for the ManagementCluster.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the ManagementCluster object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.Spec'
        description: Spec for the ManagementCluster.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.Status'
        description: Status of the ManagementCluster.
    description: >-
      A ManagementCluster maintains the connection between a Tanzu Kubernetes
      Grid instance and the platform.
  vmware.tanzu.manage.v1alpha1.managementcluster.ManagementClusterGetManifestResponse:
    type: object
    properties:
      manifest:
        type: string
        description: Registration manifest for the management cluster resource.
    description: |-
      The response type for getting the registration manifest
      for a management cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.ManagementClusterReregisterRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.FullName'
        description: ManagementCluster full_name.
      proxyName:
        type: string
        description: |-
          Optional proxy name is the name of the Proxy Config
          to be used for the cluster.
          If set empty, existing proxy config will be used.
          If set non-empty, defined proxy config will be used.
          If left unset, no proxy config will be used.
      defaultWorkloadClusterProxyName:
        type: string
        description: |-
          Optional default workload clusters proxy name is the
          Proxy Config to be used for workload clusters.
          If set empty, existing proxy config will be used.
          If set non-empty, defined proxy config will be used.
          If left unset, no proxy config will be used.
      imageRegistry:
        type: string
        description: |-
          Optional image registry is the name of the Image Registry Config
          to be used for the management cluster.
          If set empty, no image registry config will be used.
          If set non-empty, defined image registry config will be used.
          If left unset, existing image registry config will be used.
      defaultWorkloadClusterImageRegistry:
        type: string
        description: |-
          Optional default workload cluster image registry is the
          name of the Image Registry Config to be used for workload clusters.
          If set empty, no image registry config will be used.
          If set non-empty, defined image registry config will be used.
          If left unset, existing image registry config will be used.
    description: The request type for reregistering a management cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.ManagementClusterReregisterResponse:
    type: object
    properties:
      managementCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: Reregistered ManagementCluster resource.
    description: The response type for reregistering a management cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - PROCESSING
      - CREATING
      - READY
      - DELETING
      - ERROR
      - DETACHING
      - READY_TO_ATTACH
      - ATTACH_COMPLETE
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of a resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Resource is pending processing.
       - PROCESSING: Processing the resource.
       - CREATING: Resource is being created.
       - READY: Resource is ready state.
       - DELETING: Resource is being deleted.
       - ERROR: Error in processing.
       - DETACHING: Resource is being detached.
       - READY_TO_ATTACH: Resource is ready to be attached.
       - ATTACH_COMPLETE: Attach resource has been applied on the cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.Spec:
    type: object
    properties:
      kubernetesProviderType:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.KubernetesProviderType
        description: Kubernetes Provider Type of user's choice for registration.
      defaultClusterGroup:
        type: string
        description: Default cluster group for workload clusters.
      proxyName:
        type: string
        description: |-
          Optional proxy name is the name of the Proxy Config
          to be used for the management cluster.
      defaultWorkloadClusterProxyName:
        type: string
        description: |-
          Optional default workload clusters proxy name is the
          Proxy Config to be used for workload clusters.
      imageRegistry:
        type: string
        description: |-
          Optional image registry is the name of the Image Registry Config
          to be used for the management cluster.
      defaultWorkloadClusterImageRegistry:
        type: string
        description: >-
          Optional default workload cluster image registry is the

          name of the Image Registry Config to be used for workload clusters.

          If set empty, no image registry config will be used.

          If set non-empty, defined image registry config will be used.

          If left unset, management cluster's image registry config will be
          used.
    description: The ManagementCluster spec.
  vmware.tanzu.manage.v1alpha1.managementcluster.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.Phase'
        description: Phase of the resource.
      health:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Health'
        description: Health of a resource.
      registrationUrl:
        type: string
        description: |-
          URL to fetch the TMC registration YAML.
          If the management cluster is registered with proxy, Get on this
          URL would need user token with sufficient permission to read the
          proxy set during the registration set. In all other cases, this
          URL can be fetched without user token.
      extensions:
        type: array
        items:
          type: string
        description: >-
          List of the extensions running on the ManagementCluster Management
          Cluster.
      lastUpdate:
        type: string
        format: date-time
        description: Timestamp when metadata was last updated on this cluster.
      healthDetails:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.HealthInfo'
        description: Health details of the ManagementCluster.
      kubeServerVersion:
        type: string
        description: Kubernetes Server Git Version.
      region:
        type: string
        description: Region.
      infrastructureProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.InfrastructureProvider
        description: Infrastructure provider.
      kubernetesProvider:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.KubernetesProvider
        description: Kubernetes Provider which is discovered after registration.
      allocatedMemory:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ResourceAllocation
        description: Memory allocation of a cluster.
      allocatedCpu:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.ResourceAllocation
        description: CPU allocation of a cluster.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the resource.
    description: The ManagementCluster status.
  vmware.tanzu.manage.v1alpha1.managementcluster.GetManagementClusterIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ManagementCluster policy.
    description: GetManagementClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.PatchManagementClusterIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.FullName'
        description: ManagementCluster full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchManagementClusterIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.managementcluster.PatchManagementClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchManagementClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.TestManagementClusterIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.FullName'
        description: ManagementCluster full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestManagementClusterIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.managementcluster.TestManagementClusterIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestManagementClusterIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.UpdateManagementClusterIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: ManagementCluster policy set.
    description: UpdateManagementClusterIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.CreateManagementClusterRequest:
    type: object
    properties:
      managementCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: ManagementCluster to create.
    description: Request to create a ManagementCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.CreateManagementClusterResponse:
    type: object
    properties:
      managementCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: ManagementCluster created.
    description: Response from creating a ManagementCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.DeleteManagementClusterResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a ManagementCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.GetManagementClusterResponse:
    type: object
    properties:
      managementCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: ManagementCluster returned.
    description: Response from getting a ManagementCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.ListManagementClustersResponse:
    type: object
    properties:
      managementClusters:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: List of managementclusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ManagementClusters.
  vmware.tanzu.manage.v1alpha1.managementcluster.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.UpdateManagementClusterRequest:
    type: object
    properties:
      managementCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: Update ManagementCluster.
    description: Request to update (overwrite) a ManagementCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.UpdateManagementClusterResponse:
    type: object
    properties:
      managementCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.ManagementCluster
        description: ManagementCluster updated.
    description: Response from updating a ManagementCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.ClusterClass:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.FullName
        description: Full name for the cluster class.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster class object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.Spec
        description: Spec for the cluster class.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.Status
        description: Status of the cluster class.
    description: A Kubernetes Cluster Class.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.ClusterClassVariable:
    type: object
    properties:
      name:
        type: string
        description: Name of the cluster class variable.
      required:
        type: boolean
        description: Required specifies if the variable is required.
      schema:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.VariableSchema
        description: Schema defines the schema of the variable.
    description: >-
      ClusterClassVariable defines a variable which can be configured in the
      Cluster topology.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster class.
      name:
        type: string
        description: Name of this cluster class.
    description: |-
      Full name of the cluster class. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.ListClusterClassesResponse:
    type: object
    properties:
      clusterClasses:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.ClusterClass
        description: List of clusterclasses.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ClusterClasses.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.Spec:
    type: object
    properties:
      workersClasses:
        type: array
        items:
          type: string
        description: >-
          Workers classes is a collection of node types which can be used to
          create

          the worker nodes of the cluster.
      variables:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.ClusterClassVariable
        description: |-
          Variables defines the variables which can be configured
          in the Cluster topology and are then used in patches.
    description: Spec of the cluster class.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.Status:
    type: object
    properties:
      variablesSchema:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Schema of cluster class variables for UI to render.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the resource.
    description: Status of the cluster class.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.clusterclass.VariableSchema:
    type: object
    properties:
      template:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Template values in OpenAPI V3 schema format.
    description: VariableSchema defines the schema of a variable.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the ManagementCluster.
      name:
        type: string
        description: >-
          Name of the provisioner. It must be unique within a management
          cluster.
    description: |-
      Full name of the provisioner. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.GetProvisionerIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Provisioner policy.
    description: GetProvisionerIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.FullName
        description: Provisioner full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchProvisionerIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchProvisionerIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.TestProvisionerIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.FullName
        description: Provisioner full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestProvisionerIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.TestProvisionerIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestProvisionerIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.UpdateProvisionerIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Provisioner policy set.
    description: UpdateProvisionerIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.CreateProvisionerRequest:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner to create.
    description: Request to create a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.CreateProvisionerResponse:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner created.
    description: Response from creating a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.DeleteProvisionerResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.EnumerateprovisionersResponse:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner object.
    description: Streamed response from enumerating provisioners.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.GetProvisionerResponse:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner returned.
    description: Response from getting a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.ListprovisionersResponse:
    type: object
    properties:
      provisioners:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: List of provisioners.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing provisioners.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.FullName
        description: Provisioner to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.PatchProvisionerResponse:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner patched.
    description: Response from patching a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.FullName
        description: Full name for the Provisioner.
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Provisioner object.
    description: Representation of a provisioner object in resource manager.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.UpdateProvisionerRequest:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Update Provisioner.
    description: Request to update (overwrite) a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.UpdateProvisionerResponse:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner updated.
    description: Response from updating a Provisioner.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.WatchprovisionersResponse:
    type: object
    properties:
      provisioner:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.Provisioner
        description: Provisioner event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching provisioners.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.Class:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.FullName
        description: Full name for the cluster class.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster class object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.Spec
        description: Spec for the cluster class.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.Status
        description: Status of the cluster class.
    description: Available Cluster Class for the cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.ClusterClassVariable:
    type: object
    properties:
      name:
        type: string
        description: Name of the cluster class variable.
      required:
        type: boolean
        description: Required specifies if the variable is required.
      schema:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.VariableSchema
        description: Schema defines the schema of the variable.
    description: >-
      ClusterClassVariable defines a variable which can be configured in the
      Cluster topology.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster class.
      tanzuKubernetesClusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of this cluster class.
    description: |-
      Full name of the cluster class. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.ListClassesResponse:
    type: object
    properties:
      classes:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.Class
        description: List of classes.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Classes.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      tanzuKubernetesClusterName:
        type: string
        description: >-
          Scope search to the specified tanzu_kubernetes_cluster_name; supports
          globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.Spec:
    type: object
    properties:
      workersClasses:
        type: array
        items:
          type: string
        description: >-
          Workers classes is a collection of node types which can be used to
          create

          the worker nodes of the cluster.
      variables:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.ClusterClassVariable
        description: |-
          Variables defines the variables which can be configured
          in the Cluster topology and are then used in patches.
    description: Spec of the cluster class.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.Status:
    type: object
    properties:
      variablesSchema:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Schema of cluster class variables for UI to render.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the resource.
    description: Status of the cluster class.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.class.VariableSchema:
    type: object
    properties:
      template:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Template values in OpenAPI V3 schema format.
    description: VariableSchema defines the schema of a variable.
  vmware.tanzu.manage.v1alpha1.common.cluster.Status:
    type: object
    properties:
      phase:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Status.Phase'
        description: Phase of the cluster resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the cluster resource.
    description: Status is the common status of the cluster.
  vmware.tanzu.manage.v1alpha1.common.cluster.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - READY
      - DELETING
      - ERROR
      - UPGRADING
      - UPGRADE_FAILED
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the cluster resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - CREATING: Resource is being created.
       - READY: Resource is in ready state.
       - DELETING: Resource is being deleted.
       - ERROR: Error in processing.
       - UPGRADING: An upgrade is in progress.
       - UPGRADE_FAILED: An upgrade has failed.
       - UPDATING: The TanzuKubernetescluster of TKGS is in updating phase.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ApplyTanzuKubernetesClusterRequest:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster to apply.
    description: Request to apply a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ApplyTanzuKubernetesClusterResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster applied.
    description: Response from applying a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster.
      name:
        type: string
        description: Name of this cluster.
    description: |-
      Full name of the cluster. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.Spec:
    type: object
    properties:
      clusterGroupName:
        type: string
        description: Name of the cluster group to which this cluster belongs.
      tmcManaged:
        type: boolean
        description: TMC-managed flag indicates if the cluster is managed by tmc.
      tkgVsphere:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgvsphere.Spec
        description: TKG vSphere cluster spec.
      tkgServiceVsphere:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgservicevsphere.Spec
        description: TKG Service vSphere cluster spec.
      tkgAzure:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgazure.Spec
        description: TKG Azure cluster spec.
      tkgAws:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.cluster.infrastructure.tkgaws.Spec
        description: TKG AWS cluster spec.
      topology:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.Topology
        description: The cluster topology.
      proxyName:
        type: string
        description: Name of the proxy configuration to use.
      imageRegistry:
        type: string
        description: Name of the image registry configuration to use.
    description: Spec of the cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Type meta for resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.FullName
        description: Full name for the cluster.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the cluster object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.Spec
        description: Spec for the cluster.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.cluster.Status'
        description: Status of the cluster.
    description: >-
      Tanzu Kubernetes cluster is an object for managed and unmanaged clusters.

      All the workload clusters created on TKG directly or via TMC are termed as
      TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.CreateTanzuKubernetesClusterRequest:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster to create.
    description: Request to create a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.CreateTanzuKubernetesClusterResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster created.
    description: Response from creating a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.DeleteTanzuKubernetesClusterResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.EnumerateTanzuKubernetesClustersResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster object.
    description: Streamed response from enumerating TanzuKubernetesClusters.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.GetTanzuKubernetesClusterResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster returned.
    description: Response from getting a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.ListTanzuKubernetesClustersResponse:
    type: object
    properties:
      tanzuKubernetesClusters:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: List of tanzukubernetesclusters.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing TanzuKubernetesClusters.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.PatchTanzuKubernetesClusterRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.FullName
        description: TanzuKubernetesCluster to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.PatchTanzuKubernetesClusterResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster patched.
    description: Response from patching a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.UpdateTanzuKubernetesClusterRequest:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: Update TanzuKubernetesCluster.
    description: Request to update (overwrite) a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.UpdateTanzuKubernetesClusterResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster updated.
    description: Response from updating a TanzuKubernetesCluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.WatchTanzuKubernetesClustersResponse:
    type: object
    properties:
      tanzuKubernetesCluster:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.TanzuKubernetesCluster
        description: TanzuKubernetesCluster event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching TanzuKubernetesClusters.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.ApplyNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool to apply.
    description: Request to apply a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.ApplyNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool applied.
    description: Response from applying a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      managementClusterName:
        type: string
        description: Name of the management cluster.
      provisionerName:
        type: string
        description: Provisioner of the cluster.
      tanzuKubernetesClusterName:
        type: string
        description: Name of the cluster.
      name:
        type: string
        description: Name of this nodepool.
    description: |-
      Full name of the nodepool. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.FullName
        description: Full name for the Nodepool.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Nodepool object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Spec
        description: Spec for the Nodepool.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Status
        description: Status of the Nodepool.
    description: Nodepool associated with a tanzu Kubernetes cluster.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Status.Phase
        description: Phase of the nodepool resource.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions for the nodepool resource.
    description: Status of node pool resource.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - CREATING
      - READY
      - ERROR
      - DELETING
      - RESIZING
      - UPGRADING
      - UPGRADE_FAILED
      - WAITING
      - UPDATING
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the nodepool resource.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - CREATING: Resource is pending processing.
       - READY: Resource is in ready state.
       - ERROR: Error in processing.
       - DELETING: Resource is being deleted.
       - RESIZING: Resizing state.
       - UPGRADING: An upgrade is in progress.
       - UPGRADE_FAILED: An upgrade has failed.
       - WAITING: The cluster is not created yet. so wait till then.
       - UPDATING: A generic phase for nodepool update.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.CreateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool to create.
    description: Request to create a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.CreateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool created.
    description: Response from creating a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.DeleteNodepoolResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.EnumerateNodepoolsResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool object.
    description: Streamed response from enumerating Nodepools.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.GetNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool returned.
    description: Response from getting a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.ListNodepoolsResponse:
    type: object
    properties:
      nodepools:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: List of nodepools.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Nodepools.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.PatchNodepoolRequest:
    type: object
    properties:
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.FullName
        description: Nodepool to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.PatchNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool patched.
    description: Response from patching a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.SearchScope:
    type: object
    properties:
      managementClusterName:
        type: string
        description: >-
          Scope search to the specified management_cluster_name; supports
          globbing; default (*).
      provisionerName:
        type: string
        description: >-
          Scope search to the specified provisioner_name; supports globbing;
          default (*).
      tanzuKubernetesClusterName:
        type: string
        description: >-
          Scope search to the specified tanzu_kubernetes_cluster_name; supports
          globbing; default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.UpdateNodepoolRequest:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Update Nodepool.
    description: Request to update (overwrite) a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.UpdateNodepoolResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool updated.
    description: Response from updating a Nodepool.
  vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.WatchNodepoolsResponse:
    type: object
    properties:
      nodepool:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.managementcluster.provisioner.tanzukubernetescluster.nodepool.Nodepool
        description: Nodepool event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Nodepools.
  vmware.tanzu.manage.v1alpha1.metering.usage.GetClusterUsageResponse:
    type: object
    properties:
      usage:
        type: object
        additionalProperties:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.metering.usage.ResourceUsage
        description: >-
          Resource identifier, ResourceUsage as a map of key-value pairs. Key is
          the cluster identifier.
    description: Response containing the cluster level usage info.
  vmware.tanzu.manage.v1alpha1.metering.usage.GetOrgUsageResponse:
    type: object
    properties:
      usage:
        type: object
        additionalProperties:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.metering.usage.ResourceUsage
        description: >-
          Resource identifier, ResourceUsage as a map of key-value pairs. Key is
          the org identifier.
    description: Response containing the org level usage info.
  vmware.tanzu.manage.v1alpha1.metering.usage.ResourceUsage:
    type: object
    properties:
      resourceUsage:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.metering.usage.Usage'
        description: >-
          Resource and its corresponding aggregated usage as key-value pair. Ex:
          Number of nodes or Number of pods.
    description: ResourceUsage contains details of resource and its aggregated Usage.
  vmware.tanzu.manage.v1alpha1.metering.usage.Usage:
    type: object
    properties:
      limit:
        type: number
        format: float
        description: Max limit on the resource usage.
      usage:
        type: number
        format: float
        description: Current usage of the resource.
    description: Usage and limit of resource.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Chart:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.FullName
        description: Full name for the Helm Chart.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Helm Chart object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Spec
        description: Spec for the Helm Chart.
    description: Represents Helm Chart.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Dependency:
    type: object
    properties:
      chartName:
        type: string
        description: Name of the chart.
      chartVersion:
        type: string
        description: Version of the chart.
      repository:
        type: string
        description: Repository URL.
      condition:
        type: string
        description: >-
          Yaml path that resolves to a boolean, used for enabling/disabling
          charts.
      tags:
        type: array
        items:
          type: string
        description: Tags can be used to group charts for enabling/disabling together.
      importValues:
        type: array
        items:
          type: string
        description: Holds the mapping of source values to parent key to be imported.
      alias:
        type: string
        description: Alias to be used for the chart.
    description: Dependency for the helm chart.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      repositoryName:
        type: string
        description: Name of helm repository.
      chartMetadataName:
        type: string
        description: Name of the helm chart.
      name:
        type: string
        title: Version of helm chart such as 0.5.1
    description: Full name of the helm chart.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.GetChartResponse:
    type: object
    properties:
      chart:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Chart
        description: Chart returned.
    description: Response from getting a Chart.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.ListChartsResponse:
    type: object
    properties:
      charts:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Chart
        description: List of charts.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Charts.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.SearchScope:
    type: object
    properties:
      repositoryName:
        type: string
        description: >-
          Scope search to the specified repository_name; supports globbing;
          default (*).
      chartMetadataName:
        type: string
        description: >-
          Scope search to the specified chart_metadata_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Spec:
    type: object
    properties:
      apiVersion:
        type: string
        description: The chart API version.
      appVersion:
        type: string
        description: Application version of the chart.
      kubeVersion:
        type: string
        description: A SemVer range of compatible Kubernetes versions.
      releasedAt:
        type: string
        format: date-time
        description: Date on which helm chart is released.
      dependencies:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.chart.Dependency
        description: List of the chart requirements.
      sources:
        type: array
        items:
          type: string
        description: List of URLs to source code for this project.
      valuesSchema:
        type: object
        description: JSON Schema for imposing a structure on the values.yaml file.
      valuesConfig:
        type: string
        description: Default configuration values for this chart.
      deprecated:
        type: boolean
        description: Whether this chart is deprecated.
      urls:
        type: array
        items:
          type: string
        description: List of URLs to download helm chart bundle.
    description: Spec of the helm chart.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.ChartMetadata:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.FullName
        description: Full name for the helm chart metadata.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the helm chart metadata object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.Spec
        description: Spec for the helm chart metadata.
    description: Represents metadata for helm chart.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      repositoryName:
        type: string
        description: Name of the helm repository.
      name:
        type: string
        description: Name of the helm chart.
    description: Full name of the helm chart metadata.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.GetChartMetadataResponse:
    type: object
    properties:
      chartMetadata:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.ChartMetadata
        description: ChartMetadata returned.
    description: Response from getting a ChartMetadata.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.ListChartMetadatasResponse:
    type: object
    properties:
      chartMetadatas:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.ChartMetadata
        description: List of chartmetadatas.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing ChartMetadatas.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.Maintainer:
    type: object
    properties:
      name:
        type: string
        description: Maintainers name.
      email:
        type: string
        description: Maintainers email.
      url:
        type: string
        description: URL for the maintainer.
    description: Chart maintainer.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.SearchScope:
    type: object
    properties:
      repositoryName:
        type: string
        description: >-
          Scope search to the specified repository_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.Spec:
    type: object
    properties:
      icon:
        type: string
        description: Image URL of helm chart metadata.
      maintainers:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.chartmetadata.Maintainer
        description: Personally identifiable details of helm chart metadata maintainers.
      category:
        type: string
        description: Category of the helm chart metadata.
      home:
        type: string
        description: URL of helm chart projects home page.
      keywords:
        type: array
        items:
          type: string
        description: List of keywords about this helm chart project.
    description: Spec of the helm chart metadata.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of the helm repository.
    description: Full name of the helm repository.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.GetRepositoryResponse:
    type: object
    properties:
      repository:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.Repository
        description: Repository returned.
    description: Response from getting a Repository.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.ListRepositoriesResponse:
    type: object
    properties:
      repositories:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.Repository
        description: List of repositories.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Repositories.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.Repository:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.FullName
        description: Full name for the helm repository.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the helm repository object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.Spec
        description: Spec for the helm repository.
    description: Represents Helm Repository.
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.organization.fluxcd.helm.repository.Spec:
    type: object
    properties:
      url:
        type: string
        description: URL of helm repository.
    description: Spec of the helm repository.
  vmware.tanzu.manage.v1alpha1.common.integratedservice.IntegratedService:
    type: string
    enum:
      - SERVICE_UNSPECIFIED
      - ARIA
      - TANZU_APPLICATION_ENGINE
    default: SERVICE_UNSPECIFIED
    description: |-
      IntegratedService service for which integrations are enabled.

       - SERVICE_UNSPECIFIED: Unspecified Service.
       - ARIA: Aria service.
       - TANZU_APPLICATION_ENGINE: Tanzu Application Engine.
  vmware.tanzu.manage.v1alpha1.organization.integration.enablement.AriaIntegration:
    type: string
    enum:
      - UNSPECIFIED
      - DISABLED
      - ENABLED
    default: UNSPECIFIED
    description: >-
      AriaIntegration will identify if the aria services are enabled for TMC
      organization.

       - UNSPECIFIED: Integration unspecified.
       - DISABLED: Aria integration is not enabled.
       - ENABLED: Aria integration is enabled.
  vmware.tanzu.manage.v1alpha1.organization.integration.enablement.ValidateResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.enablement.AriaIntegration
        description: >-
          AriaIntegration will identify if the aria services are enabled for TMC
          organization.
    description: ValidateResponse response message.
  vmware.tanzu.manage.v1alpha1.organization.integration.CreateIntegrationRequest:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Integration
        description: Integration to create.
    description: Request to create an Integration.
  vmware.tanzu.manage.v1alpha1.organization.integration.CreateIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Integration
        description: Integration created.
    description: Response from creating an Integration.
  vmware.tanzu.manage.v1alpha1.organization.integration.DeleteIntegrationResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting an Integration.
  vmware.tanzu.manage.v1alpha1.organization.integration.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: Org ID of the organization.
      name:
        type: string
        description: Name of the integration.
    description: >-
      Full name of the organization integration configuration. This includes the
      object name along

      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.organization.integration.GetIntegrationResponse:
    type: object
    properties:
      integration:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Integration
        description: Integration returned.
    description: Response from getting an Integration.
  vmware.tanzu.manage.v1alpha1.organization.integration.Integration:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.FullName
        description: Full name for the Organization policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Organization Integration.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Status
        description: Status for the integration configuration.
    description: >-
      An integration configuration for an organization.

      Org.admin can use this API to enable and config an integration for the
      organization.
  vmware.tanzu.manage.v1alpha1.organization.integration.ListIntegrationsResponse:
    type: object
    properties:
      integrations:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Integration
        description: List of integrations.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Integrations.
  vmware.tanzu.manage.v1alpha1.organization.integration.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.organization.integration.Status:
    type: object
    properties:
      clusterCount:
        type: integer
        format: int64
        description: >-
          Cluster count is the count of clusters with enabled integration within
          the organization.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.integration.Phase
        description: Phase of the integration.
    description: >-
      Status for integration which will allow users to understand the state of
      integration.
  vmware.tanzu.manage.v1alpha1.organization.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
    description: Full name of the organization. This includes the org_id.
  vmware.tanzu.manage.v1alpha1.organization.GetOrganizationIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Organization policy.
    description: GetOrganizationIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.organization.PatchOrganizationIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.FullName'
        description: Organization fullname.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Policy delta to be applied.
    description: PatchOrganizationIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.organization.PatchOrganizationIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New Organization policy.
    description: PatchOrganizationIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.organization.TestOrganizationIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.FullName'
        description: Organization fullname.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to be tested.
    description: TestOrganizationIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.organization.TestOrganizationIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestOrganizationIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.organization.UpdateOrganizationIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Organization policy.
    description: UpdateOrganizationIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.organization.policy.ApplyPolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Policy to apply.
    description: Request to apply a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.ApplyPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Policy applied.
    description: Response from applying a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of the policy.
    description: |-
      Full name of the organization policy. This includes the object
      name along with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.organization.policy.Policy:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.FullName
        description: Full name for the Organization policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Organization policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.policy.Spec'
        description: Spec for the Organization policy.
    description: >-
      A Policy to apply on all Kubernetes clusters/managed namespaces in the
      organization.
  vmware.tanzu.manage.v1alpha1.organization.policy.CreatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Policy to create.
    description: Request to create a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.CreatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Policy created.
    description: Response from creating a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.DeletePolicyResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.GetPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Policy returned.
    description: Response from getting a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.ListPoliciesResponse:
    type: object
    properties:
      policies:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy
        description: List of policies.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Policies.
  vmware.tanzu.manage.v1alpha1.organization.policy.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.organization.policy.UpdatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Update Policy.
    description: Request to update (overwrite) a Policy.
  vmware.tanzu.manage.v1alpha1.organization.policy.UpdatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.organization.policy.Policy'
        description: Policy updated.
    description: Response from updating a Policy.
  vmware.tanzu.manage.v1alpha1.organization.setting.CreateSettingRequest:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.Setting
        description: Setting to create.
    description: Request to create a Setting.
  vmware.tanzu.manage.v1alpha1.organization.setting.CreateSettingResponse:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.Setting
        description: Setting created.
    description: Response from creating a Setting.
  vmware.tanzu.manage.v1alpha1.organization.setting.DeleteSettingResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Setting.
  vmware.tanzu.manage.v1alpha1.organization.setting.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: |-
          Name of the setting.
          This should be same as the name of setting type.
    description: Full name of the Organization on which the Setting is applied.
  vmware.tanzu.manage.v1alpha1.organization.setting.GetSettingResponse:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.Setting
        description: Setting returned.
    description: Response from getting a Setting.
  vmware.tanzu.manage.v1alpha1.organization.setting.Setting:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.FullName
        description: Full name for the Organization Setting.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Organization Setting.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.setting.Spec'
        description: Spec for the Organization Setting.
    description: A Setting to apply on an organization.
  vmware.tanzu.manage.v1alpha1.organization.setting.UpdateSettingRequest:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.Setting
        description: Update Setting.
    description: Request to update (overwrite) a Setting.
  vmware.tanzu.manage.v1alpha1.organization.setting.UpdateSettingResponse:
    type: object
    properties:
      setting:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.organization.setting.Setting
        description: Setting updated.
    description: Response from updating a Setting.
  vmware.tanzu.manage.v1alpha1.policy.effective.Effective:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.FullName'
        description: Full name for the effective policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the effective policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Spec'
        description: Spec for the effective policy.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Status'
        description: Status of the effective policy.
    description: Effective policy applied on a resource.
  vmware.tanzu.manage.v1alpha1.policy.effective.EnumerateEffectiveResponse:
    type: object
    properties:
      effective:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Effective'
        description: Effective object.
    description: Streamed response from enumerating Effective.
  vmware.tanzu.manage.v1alpha1.policy.effective.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: >-
          Name of the effective policy.


          This will be concatenation of target UID and policy UID.

          Format: <target_uid>_<policy_uid>

          Example:
          cgp:01DY64VR4XN83XGCJSC6JVHYS2_bc27608b-4809-4cac-9e04-778803963da2
    description: Full name of the effective policy.
  vmware.tanzu.manage.v1alpha1.policy.effective.ListEffectiveResponse:
    type: object
    properties:
      effective:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Effective
        description: List of effective.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Effective.
  vmware.tanzu.manage.v1alpha1.policy.effective.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      targetResourceRid:
        type: string
        description: Filter by RID of target resource; supports globbing; default (*).
      targetResourceUid:
        type: string
        description: Filter by UID of target resource; supports globbing; default (*).
      phase:
        type: string
        description: Filter by phase of the policy; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.effective.Spec:
    type: object
    properties:
      targetResource:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          The reference to the target object on which the policy is effectively
          applied.
      sourcePolicy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: The reference to the source policy object.
      policySpec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.policy.Spec'
        description: The source policy spec.
      inherited:
        type: boolean
        description: >-
          Boolean flag that specifies whether the policy was inherited from a
          parent.
    description: Spec of the effective policy.
  vmware.tanzu.manage.v1alpha1.policy.effective.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Status.Phase
        description: Phase of the effective policy application on the target resource.
      phaseInfo:
        type: string
        description: Phase info contains additional information about the phase.
      availablePhases:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Status.Phase
        description: Available phases is a list of available phases for policy.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: >-
          The conditions attached to this effective policy.


          Below are the conditions that will be set on this resource:

          - "Processing": Set to true when we start applying the policy.

          - "Scheduled": Set to true when we have created the intent to apply
          the policy.

          - "Ready": Set to true when the policy is successfully applied.
    description: Status of the effective policy.
  vmware.tanzu.manage.v1alpha1.policy.effective.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - APPLYING
      - APPLIED
      - ERROR
      - DELAYED
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of a policy.

       - PHASE_UNSPECIFIED: Phase Unspecified phase is the default state set when an effective policy is first created/updated.
       - APPLYING: Applying state is set when we are working on applying the policy.
       - APPLIED: Applied state is set when we have successfully applied the policy.
       - ERROR: Error state is set when there was a failure while applying the policy.
       - DELAYED: Delayed state is set when we are unable to apply the policy for a long time.
  vmware.tanzu.manage.v1alpha1.policy.effective.WatchEffectiveResponse:
    type: object
    properties:
      effective:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.effective.Effective'
        description: Effective event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Effective.
  vmware.tanzu.manage.v1alpha1.policy.insight.Category:
    type: string
    enum:
      - CATEGORY_UNSPECIFIED
      - ACCESS
      - CUSTOM
      - IMAGE_REGISTRY
      - NETWORK
      - SECURITY
      - QUOTA
      - MUTATION
    default: CATEGORY_UNSPECIFIED
    description: |-
      Defines category for the policy insight.

       - CATEGORY_UNSPECIFIED: Unknown category for policy insight.
       - ACCESS: Category for policy insight which is based on the access policy.
       - CUSTOM: Category for policy insight which is based on the custom policy.
       - IMAGE_REGISTRY: Category for policy insight which is based on the image policy.
       - NETWORK: Category for policy insight which is based on the network policy.
       - SECURITY: Category for policy insight which is based on the security policy.
       - QUOTA: Category for policy insight which is based on the quota policy.
       - MUTATION: Category for policy insight which is based on the quota policy.
  vmware.tanzu.manage.v1alpha1.policy.insight.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name is the unique identifier for policy insight.
    description: Full name of the policy insight.
  vmware.tanzu.manage.v1alpha1.policy.insight.Insight:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.FullName'
        description: Full name for the policy insight.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the policy insight object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Spec'
        description: Spec for the policy insight.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Status'
        description: Status for the policy insight.
    description: >-
      Provide insight on the issues related to the policies which are applied on
      the resource.
  vmware.tanzu.manage.v1alpha1.policy.insight.ListInsightsResponse:
    type: object
    properties:
      insights:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Insight'
        description: List of insights.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Insights.
  vmware.tanzu.manage.v1alpha1.policy.insight.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      clusterName:
        type: string
        description: >-
          Filter policy insights by cluster_name; supports globbing; default
          (*).
      policyName:
        type: string
        description: Filter policy insights by policy_name; supports globbing; default (*).
      clusterGroup:
        type: string
        description: >-
          Filter policy insights by cluster_group; supports globbing; default
          (*).
      namespace:
        type: string
        description: Filter policy insights by namespace; supports globbing; default (*).
      category:
        type: string
        description: Filter policy insights by category; supports globbing; default (*).
      issueType:
        type: string
        description: Filter policy insights by issue_type; supports globbing; default (*).
      workspaceName:
        type: string
        description: >-
          Filter policy insights by workspace_name; supports globbing; default
          (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.insight.Spec:
    type: object
    properties:
      cluster:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Impacted cluster.
      namespace:
        type: string
        description: Impacted namespace (optional).
      clusterGroupName:
        type: string
        description: Impacted cluster group.
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Reference to the source policy.
      policyName:
        type: string
        description: Policy name.
      workspace:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Reference to the impacted workspace.
    description: The Policy insight spec.
  vmware.tanzu.manage.v1alpha1.policy.insight.Status:
    type: object
    properties:
      category:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Category'
        description: Policy insight category.
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Type'
        description: Policy insight type.
      details:
        type: string
        description: Details in json blob.
      lastUpdate:
        type: string
        format: date-time
        description: Last update.
    description: The Policy insight status.
  vmware.tanzu.manage.v1alpha1.policy.insight.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - VIOLATION
      - SYNC
      - THRESHOLD
      - HEALTH
      - INCOMPATIBILITY
    default: TYPE_UNSPECIFIED
    description: |-
      Defines policy insight types.

       - TYPE_UNSPECIFIED: Unknown type for policy insight.
       - VIOLATION: Policy insight which represent policy violation.
       - SYNC: Policy insight which represent policy sync issue.
       - THRESHOLD: Policy insight which represent policy threshold exceeded.
       - HEALTH: Policy insight which represent policy health status.
       - INCOMPATIBILITY: Policy insight which represent policy incompatibility status.
  vmware.tanzu.manage.v1alpha1.policy.insight.CategoryStatistics:
    type: object
    properties:
      category:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Category'
        description: Policy insight category.
      totalCount:
        type: string
        format: uint64
        description: Total number of policy insights.
    description: >-
      It holds policy insight statistics for a policy insight based on the
      category.
  vmware.tanzu.manage.v1alpha1.policy.insight.GetInsightStatisticsResponse:
    type: object
    properties:
      categoryStats:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.CategoryStatistics
        description: List of policy insight statistics based on category.
      typeStats:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.TypeStatistics
        description: List of policy insight statistics based on type.
    title: |-
      Response for get policy insight statistics.
      It provides the summary of the statistics for policy insights in the org.
      Example:
      Violations = 6  * No of policy insights of type violation
      Sync Issues = 3 * No of policy insights of type sync issue
      Security = 4    * No of policy insights of category security
      Access = 5      * No of policy insights of category access
  vmware.tanzu.manage.v1alpha1.policy.insight.TypeStatistics:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.insight.Type'
        description: Policy insight type.
      totalCount:
        type: string
        format: uint64
        description: Total number of policy insights.
    description: It holds policy insight statistics for a policy insight based on the type.
  k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind:
    type: object
    properties:
      group:
        type: string
      version:
        type: string
      kind:
        type: string
    description: +protobuf.options.(gogoproto.goproto_stringer)=false
    title: >-
      GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously
      include GroupVersion

      to avoid automatic coersion.  It doesn't use a GroupVersion to avoid
      custom marshalling
  vmware.tanzu.manage.v1alpha1.policy.template.ApplyTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Template to apply.
    description: Request to apply a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.ApplyTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Template applied.
    description: Response from applying a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of policy template.
    description: |-
      Full name of the policy template. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.policy.template.PolicyUpdateStrategy:
    type: object
    properties:
      type:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.PolicyUpdateStrategyType
        description: The strategy to use for policy updates.
    description: >-
      PolicyUpdateStrategy on how to handle policies after a policy template
      update.
  vmware.tanzu.manage.v1alpha1.policy.template.PolicyUpdateStrategyType:
    type: string
    enum:
      - POLICY_UPDATE_STRATEGY_TYPE_UNSPECIFIED
      - INPLACE_UPDATE
    default: POLICY_UPDATE_STRATEGY_TYPE_UNSPECIFIED
    description: >-
      PolicyUpdateStrategyType defines strategies for updating policies after a
      policy template update.

       - POLICY_UPDATE_STRATEGY_TYPE_UNSPECIFIED: UNSPECIFIED policy update strategy (default).
      Updates will not be allowed when this strategy is selected.
       - INPLACE_UPDATE: In-place policy update strategy.
      Existing Template will be forcibly updated without creating a new version.

      There will be no changes to the policies using the template.

      Warning: When using this strategy, make sure that the updated template
      does not

      adversely affect the existing policies.
  vmware.tanzu.manage.v1alpha1.policy.template.Spec:
    type: object
    properties:
      templateType:
        type: string
        description: |-
          TemplateType is the type of policy template.
          Currently, we only support 'OPAGatekeeper' based policy templates.
      objectType:
        type: string
        description: >-
          ObjectType is the type of Kubernetes resource encoded in Object.

          Currently, we only support OPAGatekeeper based 'ConstraintTemplate'
          object.
      object:
        type: string
        description: >-
          Object is a yaml-formatted Kubernetes resource.

          The Kubernetes object has to be of the type defined in ObjectType
          ('ConstraintTemplate').

          The object name must match the name of the wrapping policy template.

          This will be applied on the cluster after a policy is created using
          this version of the template.

          This contains the latest version of the object. For previous versions,
          check Versions API.
      deprecated:
        type: boolean
        description: >-
          Deprecated specifies whether this version (latest version) of the
          policy template is deprecated.

          Updating a policy template deprecates the previous versions. To view
          all versions, use Versions API.
      dataInventory:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind'
        description: >-
          DataInventory is a list of Kubernetes api-resource kinds that need to
          be synced/replicated

          in Gatekeeper in order to enforce policy rules on those resources.

          Note: This is used for OPAGatekeeper based templates, and should be
          used if the policy

          enforcement logic in Rego code uses cached data using "data.inventory"
          fields.
      policyUpdateStrategy:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.PolicyUpdateStrategy
        description: >-
          PolicyUpdateStrategy on how to handle policies after a policy template
          update.
    description: Spec of policy template.
  vmware.tanzu.manage.v1alpha1.policy.template.Template:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.FullName'
        description: Full name for the policy template.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the policy template object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Spec'
        description: Spec for the policy template.
    description: >-
      A Policy Template wraps a Kubernetes resource that is a
      pre-requisite/dependency for creating policies.

      An example of a policy template is OPAGatekeeper based ConstraintTemplate.
  vmware.tanzu.manage.v1alpha1.policy.template.CreateTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Template to create.
    description: Request to create a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.CreateTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Template created.
    description: Response from creating a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.DeleteTemplateResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.GetTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Template returned.
    description: Response from getting a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.ListTemplatesResponse:
    type: object
    properties:
      templates:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: List of templates.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Templates.
  vmware.tanzu.manage.v1alpha1.policy.template.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.template.UpdateTemplateRequest:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Update Template.
    description: Request to update (overwrite) a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.UpdateTemplateResponse:
    type: object
    properties:
      template:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.template.Template'
        description: Template updated.
    description: Response from updating a Template.
  vmware.tanzu.manage.v1alpha1.policy.template.version.EnumerateVersionsResponse:
    type: object
    properties:
      version:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.Version
        description: Version object.
    description: Streamed response from enumerating Versions.
  vmware.tanzu.manage.v1alpha1.policy.template.version.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      templateName:
        type: string
        description: Name of policy template.
      name:
        type: string
        description: Name of policy template version.
    description: >-
      Full name of the policy template version. This includes the object name
      along

      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.policy.template.version.GetVersionResponse:
    type: object
    properties:
      version:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.Version
        description: Version returned.
    description: Response from getting a Version.
  vmware.tanzu.manage.v1alpha1.policy.template.version.ListVersionsResponse:
    type: object
    properties:
      versions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.Version
        description: List of versions.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Versions.
  vmware.tanzu.manage.v1alpha1.policy.template.version.SearchScope:
    type: object
    properties:
      templateName:
        type: string
        description: >-
          Scope search to the specified template_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.template.version.Spec:
    type: object
    properties:
      templateType:
        type: string
        description: |-
          TemplateType is the type of policy template.
          Currently, we only support 'OPAGatekeeper' based policy templates.
      objectType:
        type: string
        description: >-
          ObjectType is the type of Kubernetes resource encoded in Object.

          Currently, we only support OPAGatekeeper based 'ConstraintTemplate'
          object.
      object:
        type: string
        description: >-
          Object is a yaml-formatted Kubernetes resource.

          The Kubernetes object has to be of the type defined in ObjectType
          ('ConstraintTemplate').

          The object name must match the name of the wrapping policy template.

          This will be applied on the cluster after a policy is created using
          this version of the template.
      deprecated:
        type: boolean
        description: >-
          Deprecated specifies whether this version of the policy template is
          deprecated.
      dataInventory:
        type: array
        items:
          $ref: '#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionKind'
        description: >-
          DataInventory is a list of Kubernetes api-resource kinds that need to
          be synced/replicated

          in Gatekeeper in order to enforce policy rules on those resources.
    description: Spec of policy template version.
  vmware.tanzu.manage.v1alpha1.policy.template.version.Version:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.FullName
        description: Full name for the policy template version.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the policy template version object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.Spec
        description: Spec for the policy template version.
    description: A Version of a policy template.
  vmware.tanzu.manage.v1alpha1.policy.template.version.WatchVersionsResponse:
    type: object
    properties:
      version:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.template.version.Version
        description: Version event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Versions.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      typeName:
        type: string
        description: Name of policy type.
      name:
        type: string
        description: Name of policy recipe.
    description: |-
      Full name of the policy recipe. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.GetRecipeResponse:
    type: object
    properties:
      recipe:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.Recipe'
        description: Recipe returned.
    description: Response from getting a Recipe.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.ListRecipesResponse:
    type: object
    properties:
      recipes:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.Recipe'
        description: List of recipes.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Recipes.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.Recipe:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.FullName'
        description: Full name for the policy recipe.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the policy recipe object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.Spec'
        description: Spec for the policy recipe.
    description: >-
      A Recipe is an internal template for policy type.


      Recipe is a convenience decorator. It gives a friendly way to produce
      policy instances using simple parameters.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.SearchScope:
    type: object
    properties:
      typeName:
        type: string
        description: >-
          Scope search to the specified type_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.Spec:
    type: object
    properties:
      inputSchema:
        type: string
        description: >-
          InputSchema defines the set of variable inputs needed to create a
          policy using this recipe, in JsonSchema format.

          This input schema is for the latest version of the recipe. For
          previous versions, check Versions API.
      policyTemplates:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          Policy templates are references to kubernetes resources (policy
          pre-requisites) associated with this recipe.

          These templates will be applied on clusters where policy instances
          using this recipe are effective.

          A recipe can have 0 or more templates associated with it.

          These references are for the latest version of the recipe. For
          previous versions, check Versions API.
      deprecated:
        type: boolean
        description: >-
          Deprecated specifies whether this version (latest version) of the
          recipe is deprecated.

          Deprecated recipes will not be assignable to new policy instances nor
          visible in the UI.
    description: Spec of policy recipe.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.EnumerateVersionsResponse:
    type: object
    properties:
      version:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Version
        description: Version object.
    description: Streamed response from enumerating Versions.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      typeName:
        type: string
        description: Name of policy type.
      recipeName:
        type: string
        description: Name of policy recipe.
      name:
        type: string
        description: Name of policy recipe version.
    description: >-
      Full name of the policy recipe version. This includes the object name
      along

      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.GetVersionResponse:
    type: object
    properties:
      version:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Version
        description: Version returned.
    description: Response from getting a Version.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.ListVersionsResponse:
    type: object
    properties:
      versions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Version
        description: List of versions.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Versions.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.SearchScope:
    type: object
    properties:
      typeName:
        type: string
        description: >-
          Scope search to the specified type_name; supports globbing; default
          (*).
      recipeName:
        type: string
        description: >-
          Scope search to the specified recipe_name; supports globbing; default
          (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Spec:
    type: object
    properties:
      inputSchema:
        type: string
        description: >-
          InputSchema defines the set of variable inputs needed to create a
          policy using this recipe, in JsonSchema format.
      policyTemplates:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          Policy templates are references to kubernetes resources (policy
          pre-requisites) associated with this recipe.

          These templates will be applied on clusters where policy instances
          using this recipe are effective.

          A recipe can have 0 or more templates associated with it.
      deprecated:
        type: boolean
        description: >-
          Deprecated specifies whether this version of the recipe is deprecated.

          Deprecated recipes will not be assignable to new policy instances nor
          visible in the UI.
    description: Spec policy recipe version.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Version:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.FullName
        description: Full name for the policy recipe version.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the policy recipe version object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Spec
        description: Spec for the policy recipe version.
    description: A Version of a policy recipe.
  vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.WatchVersionsResponse:
    type: object
    properties:
      version:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.policy.type.recipe.version.Version
        description: Version event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Versions.
  vmware.tanzu.manage.v1alpha1.policy.type.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of policy type.
    description: |-
      Full name of the policy type. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.policy.type.GetTypeResponse:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.Type'
        description: Type returned.
    description: Response from getting a Type.
  vmware.tanzu.manage.v1alpha1.policy.type.ListTypesResponse:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.Type'
        description: List of types.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Types.
  vmware.tanzu.manage.v1alpha1.policy.type.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.policy.type.Spec:
    type: object
    properties:
      traits:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.Traits'
        description: Traits containing the characteristics of the policy type.
    description: Spec of policy type.
  vmware.tanzu.manage.v1alpha1.policy.type.Traits:
    type: object
    properties:
      cluster:
        type: boolean
        description: >-
          Indicates whether the policy can be set in cluster hierarchy
          (org/clustergroup/cluster).
      workspace:
        type: boolean
        description: >-
          Indicates whether the policy can be set in workspace hierarchy
          (org/workspace).
      namespaceSelector:
        type: boolean
        description: Indicates whether the policy supports namespace selector.
    description: Traits defines the characteristics of the policy type.
  vmware.tanzu.manage.v1alpha1.policy.type.Type:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.FullName'
        description: Full name for the policy type.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the policy type object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.policy.type.Spec'
        description: Spec for the policy type.
    description: A Type defines the schema of policy instances.
  vmware.tanzu.manage.v1alpha1.resource.insight.Data:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.resource.insight.Type'
        description: Type of insight.
      details:
        type: string
        description: Details about the insight.
      sourceResourceKind:
        type: string
        description: >-
          Kind of the source resource (eg. integration, gitrepository, helm,
          policy-settings).
      sourceResource:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          Reference of the source resource (eg. integration, gitrepository,
          helm, policy-settings).
      sourceScopeType:
        type: string
        description: Source scope type (eg. org, cg, c).
      sourceScope:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          Reference of the source scope (eg. organization, clustergroup,
          cluster).
      cluster:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: Reference of the impacted cluster.
    description: Data of the insight.
  vmware.tanzu.manage.v1alpha1.resource.insight.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Unique identifier (UID) of the insight.
    description: |-
      Full name of the insight. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.resource.insight.Insight:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.resource.insight.FullName'
        description: Full name for the insight.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the insight.
      data:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.resource.insight.Data'
        description: Data for the insight.
    description: >-
      Provide insights for source (batch) resources at
      organization/cluster-group/cluster that get applied on clusters.
  vmware.tanzu.manage.v1alpha1.resource.insight.ListInsightsResponse:
    type: object
    properties:
      insights:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.resource.insight.Insight'
        description: List of insights.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Insights.
  vmware.tanzu.manage.v1alpha1.resource.insight.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      sourceResourceKind:
        type: string
        description: >-
          Filter by the kind of source resource (eg. integration, gitrepository,
          helm, policy-settings); supports globbing; default (*).
      sourceResourceUid:
        type: string
        description: Filter by the uid of source resource; supports globbing; default (*).
      insightType:
        type: string
        description: >-
          Filter by type of insight (ERROR / OVERRIDE); supports globbing;
          default (*).
      sourceScopeType:
        type: string
        description: >-
          Filter by source scope type (org / cg / c); supports globbing; default
          (*).
      clusterName:
        type: string
        description: Filter by cluster name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.resource.insight.Type:
    type: string
    enum:
      - TYPE_UNSPECIFIED
      - ERROR
      - OVERRIDE
    default: TYPE_UNSPECIFIED
    description: >-
      Type specifies the different types of insights.

       - TYPE_UNSPECIFIED: Unknown type.
       - ERROR: Insight about an error scenario.
       - OVERRIDE: Insight about override.
      For example: source resource on organization was overridden on cluster or
      cluster group by another resource.
  vmware.tanzu.manage.v1alpha1.setting.effective.Effective:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.FullName'
        description: Full name for the Effective Setting.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Effective Setting.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.Spec'
        description: Spec for the Effective Setting.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.Status'
        description: Status of the Effective setting.
    description: A Configuration to apply on a cluster-group.
  vmware.tanzu.manage.v1alpha1.setting.effective.EnumerateEffectiveResponse:
    type: object
    properties:
      effective:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.Effective'
        description: Effective object.
    description: Streamed response from enumerating Effective.
  vmware.tanzu.manage.v1alpha1.setting.effective.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        title: |-
          Name of the effective setting.
          This will be the unique identifier (same as meta.UID)
    description: Full name of the Effective Setting.
  vmware.tanzu.manage.v1alpha1.setting.effective.ListEffectiveResponse:
    type: object
    properties:
      effective:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.Effective
        description: List of effective.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Effective.
  vmware.tanzu.manage.v1alpha1.setting.effective.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
      targetResourceRid:
        type: string
        description: Filter by RID of target resource; supports globbing; default (*).
      targetResourceUid:
        type: string
        description: Filter by UID of target resource; supports globbing; default (*).
      settingType:
        type: string
        description: Filter by type of setting; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.setting.effective.Spec:
    type: object
    properties:
      target:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: >-
          The reference to the target resource on which the setting is
          effectively applied.
      source:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Reference'
        description: The reference to the source setting (where it originated).
      settingSpec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.setting.Spec'
        description: The source configuration spec.
      inherited:
        type: boolean
        description: >-
          Boolean flag that specifies whether the setting was inherited from a
          parent.

          This will be true when target and source are the different.
      settingType:
        type: string
        description: Name of the setting type.
    description: Spec for the Effective Setting.
  vmware.tanzu.manage.v1alpha1.setting.effective.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.Status.Phase
        description: Phase of the effective setting.
      message:
        type: string
        description: Message indicating details about the phase and conditions.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions that help identify the phase.
      observedGeneration:
        type: string
        format: int64
        description: Generation value at the time this status was updated.
    description: Status of the effective setting.
  vmware.tanzu.manage.v1alpha1.setting.effective.Status.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - APPLIED
      - ERROR
    default: PHASE_UNSPECIFIED
    description: >-
      Phase of an effective setting.

       - PHASE_UNSPECIFIED: UNSPECIFIED phase.
      This is the default state when the effective setting is first created.

      This will always be the state for non-leaf resources in the hierarchy of
      the setting type.
       - PENDING: PENDING phase is set by spoke service or extension when they start processing the setting.
       - APPLIED: Applied phase is set by spoke service or extension when the setting is successfully applied.
       - ERROR: Error phase is set by spoke service or extension when the setting could not be applied due to some issue.
      Details will be provided in the status message.
  vmware.tanzu.manage.v1alpha1.setting.effective.WatchEffectiveResponse:
    type: object
    properties:
      effective:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.effective.Effective'
        description: Effective event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Effective.
  vmware.tanzu.manage.v1alpha1.setting.type.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of the Setting Type.
    description: Full name of the Setting Type.
  vmware.tanzu.manage.v1alpha1.setting.type.GetTypeResponse:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.type.Type'
        description: Type returned.
    description: Response from getting a Type.
  vmware.tanzu.manage.v1alpha1.setting.type.ListTypesResponse:
    type: object
    properties:
      types:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.type.Type'
        description: List of types.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Types.
  vmware.tanzu.manage.v1alpha1.setting.type.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.setting.type.Spec:
    type: object
    properties:
      description:
        type: string
        description: Description is used to describe this type of setting.
      valuesSchema:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.type.ValuesSchema'
        description: >-
          Values schema is used to show the values that can be set by users with
          this type.
    description: Spec of the Setting.
  vmware.tanzu.manage.v1alpha1.setting.type.Type:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.type.FullName'
        description: Full name for the Setting Type.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Setting Type object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.setting.type.Spec'
        description: Spec for the Setting Type.
    description: Represents different Types of Settings provided by TMC.
  vmware.tanzu.manage.v1alpha1.setting.type.ValuesSchema:
    type: object
    properties:
      template:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Template values in OpenAPI V3 schema format.
    description: >-
      ValuesSchema is used to show the values that can be set by users with this
      type.
  vmware.tanzu.manage.v1alpha1.subscription.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
    description: |-
      Full name of the subscription. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.subscription.ListSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Subscription'
        description: List of subscriptions.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Subscriptions.
  vmware.tanzu.manage.v1alpha1.subscription.Package:
    type: string
    enum:
      - PACKAGE_UNSPECIFIED
      - TANZU_MISSION_CONTROL
      - TANZU_STANDARD
      - TANZU_ADVANCED
      - STANDALONE
    default: PACKAGE_UNSPECIFIED
    description: >-
      The Package purchased by the customer - Standalone purchase, Tanzu
      Standard, Tanzu Advanced.

       - PACKAGE_UNSPECIFIED: UNSPECIFIED Package.
       - TANZU_MISSION_CONTROL: Tanzu Mission Control.
       - TANZU_STANDARD: Tanzu Standard.
       - TANZU_ADVANCED: Tanzu Advanced.
       - STANDALONE: Standalone.
  vmware.tanzu.manage.v1alpha1.subscription.SearchScope:
    type: object
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.subscription.Spec:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Type'
        description: Contract Type chosen by customer during onboarding.
      region:
        type: string
        description: Region selected by the customer during onboarding.
      termPeriodMonths:
        type: integer
        format: int32
        description: Term period of the contract.
      expirationTimestamp:
        type: string
        format: date-time
        description: Expiration date of the contract.
      tier:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Tier'
        description: The tier of TMC that the org signed up for.
      unitOfMeasure:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.UnitOfMeasure'
        description: Unit of measure - cores or cpu.
      quantity:
        type: integer
        format: int32
        description: Quantity of the unit of measure.
      package:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Package'
        description: Package purchased by customer.
      dnsEndpoint:
        type: string
        description: Full Domain name(DNS Endpoint) of the Org.
    description: Spec of the subscription.
  vmware.tanzu.manage.v1alpha1.subscription.Status:
    type: object
    properties:
      currentUsage:
        type: integer
        format: int32
        description: The number of cores/cpus currently in use.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        title: >-
          Conditions of the contract cores limit usage.

          Condition of type "CORES_CONTRACT_USAGE" would have status "TRUE" if
          Org owner has exhausted certain % of cores usage.

          Use Case if org owner has exhausted 75% of contract cores:

          [Type: "CORES_CONTRACT_USAGE", Status: TRUE, Severity: WARNING,
          reason: "EXCEEDED_75PERCENT", message: "Core usage exceeded 75% of
          capacity"]
    description: Status of the subscription.
  vmware.tanzu.manage.v1alpha1.subscription.Subscription:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.FullName'
        description: Full name for the Subscription.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Subscription object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Spec'
        description: Spec for the Subscription.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Status'
        description: Status for the Subscription.
    description: A group of managed Kubenetes namespaces.
  vmware.tanzu.manage.v1alpha1.subscription.Tier:
    type: string
    enum:
      - TIER_UNSPECIFIED
      - TMC_STANDARD
      - TMC_ADVANCED
      - TMC_ENTERPRISE
      - TMC_ESSENTIALS
      - TMC_STARTER
    default: TIER_UNSPECIFIED
    description: |-
      The tier of TMC that the Org has signed up for.

       - TIER_UNSPECIFIED: UNSPECIFIED Tier.
       - TMC_STANDARD: Standard Tier.
       - TMC_ADVANCED: Advanced Tier.
       - TMC_ENTERPRISE: Enterprise Tier.
       - TMC_ESSENTIALS: Essentials Tier.
       - TMC_STARTER: STARTER Tier.
  vmware.tanzu.manage.v1alpha1.subscription.Type:
    type: string
    enum:
      - CONTRACT_TYPE_UNSPECIFIED
      - FREE_TRIAL
      - SUBSCRIPTION_PURCHASE_PROGRAM
      - PURCHASE_ORDER
      - DESIGN_PARTNER_PROGRAM
      - TKG_TO_TANZU_STANDARD
      - TANZU_STANDARD_SPP
      - ON_DEMAND
      - STARTER
    default: CONTRACT_TYPE_UNSPECIFIED
    description: |-
      Type are the available contract types.

       - CONTRACT_TYPE_UNSPECIFIED: UNSPECIFIED contract type.
       - FREE_TRIAL: FREE_TRIAL contract type.
       - SUBSCRIPTION_PURCHASE_PROGRAM: SPP contract type.
       - PURCHASE_ORDER: PURCHASE_ORDER contract type.
       - DESIGN_PARTNER_PROGRAM: DESIGN_PARTNER_PROGRAM contract type.
       - TKG_TO_TANZU_STANDARD: TKG_TO_TANZU_STANDARD contract type.
       - TANZU_STANDARD_SPP: TANZU STANDARD SPP contract type.
       - ON_DEMAND: ON_DEMAND contract type.
       - STARTER: STARTER contract type.
  vmware.tanzu.manage.v1alpha1.subscription.UnitOfMeasure:
    type: string
    enum:
      - UOM_UNSPECIFIED
      - CORES
      - CPUS
      - VCPUS
    default: UOM_UNSPECIFIED
    description: |-
      The Unit of Measure for the contract - cores or CPUs.

       - UOM_UNSPECIFIED: UNSPECIFIED UnitOfMeasure.
       - CORES: Cores.
       - CPUS: CPUs.
       - VCPUS: VCPUs.
  vmware.tanzu.manage.v1alpha1.subscription.ListResponse:
    type: object
    properties:
      organizationId:
        type: string
        description: Organization id of the subscriptions.
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Spec'
        description: List of subscriptions.
      status:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.subscription.Status'
        description: Aggregated status of the subscriptions.
      totalCount:
        type: integer
        format: int32
        description: Total count.
      dnsEndpoint:
        type: string
        description: Full Domain name(DNS Endpoint) of the Org.
      region:
        type: string
        description: Region selected by the customer during onboarding.
      usage:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.metering.usage.Usage'
        description: Aggregated usage information.
    description: Response from listing Subscriptions.
  vmware.tanzu.manage.v1alpha1.system.binaries.GetBinariesResponse:
    type: object
    properties:
      latestVersion:
        type: string
        description: The latest version of the CLI.
      versions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.Version'
        description: A map of CLI versions.
    description: Response containing links.
  vmware.tanzu.manage.v1alpha1.system.binaries.Version:
    type: object
    properties:
      darwinX64:
        type: string
        description: The URL for the MacOS CLI on X64.
      linuxX64:
        type: string
        description: The URL for the linux CLI on X64.
      windowsX64:
        type: string
        description: The URL for the windows CLI on X64.
    description: Links to the CLI binaries for a version.
  vmware.tanzu.manage.v1alpha1.system.binaries.corecli.GetCoreCliResponse:
    type: object
    properties:
      latestVersion:
        type: string
        description: The latest version of the CLI.
      versions:
        type: object
        additionalProperties:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.corecli.Version
        description: A map of CLI versions.
    description: Response containing links.
  vmware.tanzu.manage.v1alpha1.system.binaries.corecli.Version:
    type: object
    properties:
      darwinX64:
        type: string
        description: The URL for the MacOS CLI on X64.
      linuxX64:
        type: string
        description: The URL for the linux CLI on X64.
      windowsX64:
        type: string
        description: The URL for the windows CLI on X64.
    description: Links to the CLI binaries for a version.
  vmware.tanzu.manage.v1alpha1.system.binaries.plugin.DescribePluginResponse:
    type: object
    properties:
      plugin:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.plugin.Plugin
        description: Plugin that was requested.
    description: Response from describing a plugin.
  vmware.tanzu.manage.v1alpha1.system.binaries.plugin.ListPluginsResponse:
    type: object
    properties:
      plugins:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.system.binaries.plugin.Plugin
        description: >-
          List of all the tmc-plugins that are available for a given tmc
          service.
    description: Response from listing tmc plugins.
  vmware.tanzu.manage.v1alpha1.system.binaries.plugin.Plugin:
    type: object
    properties:
      name:
        type: string
        description: Name is the name of the plugin.
      description:
        type: string
        description: Description is the plugin's description.
      recommendedVersion:
        type: string
        title: |-
          Recommended version that Tanzu CLI should use if available.
          The value should be a valid semantic version as defined in
          https://semver.org/. E.g., 2.0.1
      artifacts:
        type: object
        description: Artifacts contains available artifacts for every supported version.
      optional:
        type: boolean
        description: Optional specifies whether the plugin is mandatory or optional.
      target:
        type: string
        description: Target specifies target of the plugin.
    description: Plugin denotes a Tanzu cli plugin.
  vmware.tanzu.manage.v1alpha1.common.tanzupackage.Maintainer:
    type: object
    properties:
      name:
        type: string
        description: Name of the maintainer.
    description: Information about the maintainer of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageMetadataSpec:
    type: object
    properties:
      displayName:
        type: string
        description: Display name of the Package Metadata.
      shortDescription:
        type: string
        description: Short description of the Package Metadata.
      longDescription:
        type: string
        description: >-
          Long description of Package Metadata containing key features, common
          use cases etc.
      icon:
        type: string
        description: >-
          Icon or logo of the Package Metadata in base64 encoded format. Image
          should be in .svg format.
      providerName:
        type: string
        description: Name of the Package Metadata author.
      maintainers:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.Maintainer
        description: Personally identifiable details of Package Metadata maintainers.
      categories:
        type: array
        items:
          type: string
        description: Categories of the Package Metadata.
      supportDescription:
        type: string
        description: >-
          Includes information about how consumer can get support. ex: email,
          slack etc.
      repositoryName:
        type: string
        description: Name of package repository to which this package metadata belongs.
    description: Spec of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.FullName:
    type: object
    properties:
      name:
        type: string
        description: Name of the Package Metadata.
    description: Full name of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.GetMetadataResponse:
    type: object
    properties:
      metadata:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.Metadata
        description: Metadata returned.
    description: Response from getting a Metadata.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.ListMetadatasResponse:
    type: object
    properties:
      metadatas:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.Metadata
        description: List of metadatas.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Metadatas.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.Metadata:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.FullName
        description: Full name for the Package Metadata.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Package Metadata object.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.Spec'
        description: Spec for the Package Metadata.
    description: >-
      Represents Tanzu Carvel Package Metadata that's available for
      installation.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.Spec:
    type: object
    properties:
      packageMetadataSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageMetadataSpec
    description: Spec of the Package Metadata.
  vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageSpec:
    type: object
    properties:
      licenses:
        type: array
        items:
          type: string
        description: Licenses under which Package is released.
      releasedAt:
        type: string
        format: date-time
        description: Date on which Package is released.
      capacityRequirementsDescription:
        type: string
        description: Minimum capacity requirements to install Package on a cluster.
      releaseNotes:
        type: string
        description: Release notes of Package.
      valuesSchema:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.ValuesSchema
        description: >-
          Values schema is used to show template values that can be configured
          by users.
      repositoryName:
        type: string
        description: Name of package repository to which this package belongs.
    description: Spec of the Package.
  vmware.tanzu.manage.v1alpha1.common.tanzupackage.ValuesSchema:
    type: object
    properties:
      template:
        $ref: '#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension'
        description: Template values in OpenAPI V3 schema format.
    description: >-
      ValuesSchema is used to show template values that can be configured by
      users while installing Package.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.FullName:
    type: object
    properties:
      metadataName:
        type: string
        description: Name of the Package metadata.
      name:
        type: string
        description: Name of the Package. It represents version of the Package metadata.
    description: Full name of the Package.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.GetPackageResponse:
    type: object
    properties:
      package:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.Package
        description: Package returned.
    description: Response from getting a Package.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.ListPackagesResponse:
    type: object
    properties:
      packages:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.Package
        description: List of packages.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Packages.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.Package:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.FullName
        description: Full name for the Package.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Package object.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.Spec
        description: Spec for the Package.
    description: Represents Tanzu Carvel Package that's available for installation.
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.SearchScope:
    type: object
    properties:
      metadataName:
        type: string
        description: >-
          Scope search to the specified metadata_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.Spec:
    type: object
    properties:
      packageSpec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageSpec
    description: Spec of the Package.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.AcceptEulaRequest:
    type: object
    properties:
      eula:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.Eula'
        description: Eula to accept.
    description: Request to accept an Eula.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.AcceptEulaResponse:
    type: object
    properties:
      eula:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.Eula'
        description: Eula accepted.
    description: Response from accepting an Eula.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.Data:
    type: object
    properties:
      eulaUrl:
        type: string
        description: URL at which this end user license agreement can be found.
      releasedAt:
        type: string
        format: date-time
        description: Time when this EULA version was released.
      user:
        type: string
        description: User email identifier.
      accepted:
        type: boolean
        description: Identifies whether this user has accepted the EULA terms.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.Eula:
    type: object
    properties:
      orgId:
        type: string
      tapVersion:
        type: string
      data:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.Data'
    description: Represents Tanzu Application Platform (TAP) EULA Acceptance.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.ValidateEulaResponse:
    type: object
    properties:
      eula:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.eula.Eula'
        description: Eula returned.
    description: Response from validating an Eula.
  vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageRef:
    type: object
    properties:
      packageMetadataName:
        type: string
        description: Name of the Package Metadata.
      versionSelection:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.VersionSelection
        description: Version Selection of the Package.
    description: Reference to Package.
  vmware.tanzu.manage.v1alpha1.common.tanzupackage.VersionSelection:
    type: object
    properties:
      constraints:
        type: string
        description: >-
          Constraints to select Package. Example: constraints: "v1.2.3",
          constraints: "<v1.4.0" etc.
    description: Version Selection criteria to deploy Package.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.BuildService:
    type: object
    properties:
      excludeDependencies:
        type: boolean
        description: >-
          A flag which indicates whether the build service lite dependencies are
          excluded.
      dependencyUpdates:
        type: boolean
        description: >-
          A flag which indicates whether the build service dependency updates
          are allowed.
    description: >-
      Build service configuration for each TAP profile in the solution that
      requires TBS.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ClusterPackageData:
    type: object
    properties:
      clusterFullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster identifier.
      packageRef:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageRef
        description: TAP package identifier.
      tapProfile:
        type: string
        description: Name of the TAP profile.
      inlineValues:
        type: object
        description: Configuration values for the package install.
      clusterUid:
        type: string
        description: UID of the cluster (output only).
      clusterUrl:
        type: string
        description: >-
          URL of the cluster, required for multi-cluster deployment.

          The URL should be reachable from the other clusters which are part of
          the solution.
      clusterCaCert:
        type: string
        description: CA cert of the cluster, required for multi-cluster deployment.
    description: Data for each cluster package in the solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ClusterPackageStatus:
    type: object
    properties:
      clusterFullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster identifier.
      packageRef:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageRef
        description: TAP package identifier.
      tapProfile:
        type: string
        description: Name of the TAP profile.
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Phase
        description: Phase of the profile.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the profile.
      tapAppLabel:
        type: string
        description: >-
          Carvel app label for the TAP package

          This can be used to identify individual packages installed as part of
          this TAP Solution.
    description: Status of each cluster package in the solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ClusterPackagesStatus:
    type: object
    properties:
      clusterFullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Cluster identifier.
      tapProfile:
        type: string
        description: Name of the TAP profile.
      buildService:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.BuildService
        description: Build service configuration used for the TAP profile.
      packagesInstallStatuses:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.PackageInstallStatus
        description: Statuses for package installs in the cluster.
    description: Status of each cluster packages in the solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.CreateSolutionRequest:
    type: object
    properties:
      solution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution
        description: Solution to create.
    description: Request to create a Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.CreateSolutionResponse:
    type: object
    properties:
      solution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution
        description: Solution created.
    description: Response from creating a Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.DeleteSolutionResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of solution.
    description: Full name of the TAP Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.GetSolutionResponse:
    type: object
    properties:
      solution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution
        description: Solution returned.
    description: Response from getting a Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ListSolutionsResponse:
    type: object
    properties:
      solutions:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution
        description: List of solutions.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Solutions.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.PackageInstallStatus:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Phase
        description: Phase of the profile or TBS full-deps.
      packageRef:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.common.tanzupackage.PackageRef
        description: TAP or TBS full-deps package identifier.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Conditions of the profile or TBS full-deps.
      appLabel:
        type: string
        description: >-
          Carvel app label for the TAP or TBS full-deps package

          This can be used to identify individual packages installed as part of
          this TAP Solution or TBS full-deps meta package.
    description: Status for each package install in the cluster.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Phase:
    type: string
    enum:
      - PHASE_UNSPECIFIED
      - PENDING
      - APPLIED
      - ERROR
      - DELETING
    default: PHASE_UNSPECIFIED
    description: |-
      Phase of the profile and individual cluster packages.

       - PHASE_UNSPECIFIED: Unspecified phase.
       - PENDING: Pending phase.
       - APPLIED: Applied phase.
       - ERROR: Error phase.
       - DELETING: Deleting phase.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.FullName
        description: Full name for the TAP Solution.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the TAP Solution.
      spec:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Spec
        description: Spec for the TAP Solution.
      status:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Status
        description: Status for the TAP Solution.
    description: >-
      Represents an instance of Tanzu Application Platform (TAP) Package
      Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Spec:
    type: object
    properties:
      clusterPackageData:
        type: array
        items:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ClusterPackageData
        description: Solution data with packages used in each cluster.
      tokenRotationDuration:
        type: string
        description: >-
          Duration for rotating service account tokens, applicable for
          multi-cluster deployment.
    description: Spec of the TAP Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Status:
    type: object
    properties:
      phase:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Phase
        description: Aggregate phase of the solution.
      conditions:
        type: object
        additionalProperties:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.status.Condition'
        description: Aggregate conditions of the solution.
      clusterPackageStatuses:
        type: object
        additionalProperties:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ClusterPackageStatus
        description: 'Status of each cluster package in the solution (key: clusterUID).'
      clusterPackagesStatuses:
        type: object
        additionalProperties:
          $ref: >-
            #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.ClusterPackagesStatus
        description: 'Status of each cluster packages in the solution (key: clusterUID).'
    description: Status of the Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.UpdateSolutionRequest:
    type: object
    properties:
      solution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution
        description: Update Solution.
    description: Request to update (overwrite) a Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.UpdateSolutionResponse:
    type: object
    properties:
      solution:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.solution.Solution
        description: Solution updated.
    description: Response from updating a Solution.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.ClusterDetails:
    type: object
    properties:
      url:
        type: string
        title: URL of the cluster
      caCert:
        type: string
        title: CA certificate of the cluster
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.Status:
    type: object
    properties:
      name:
        type: string
        description: Name of the pre-requisite resource. e.g. K8s version, vCPU, etc.
      passed:
        type: boolean
        description: A flag which indicates whether the validation has passed.
      message:
        type: string
        description: >-
          Message which gives additional details about the result of the
          validation.
    description: Status of a particular pre-requisite item.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.ValidatePrerequisitesRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.cluster.FullName'
        description: Full name of the cluster.
      packageFullName:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.metadata.package.FullName
        description: Package ref for which pre-requisites need to be validated.
      profile:
        type: string
        description: TAP profile.
    description: >-
      Request to validate whether cluster meets the pre-requisites for the
      specified TAP package.
  vmware.tanzu.manage.v1alpha1.tanzupackage.tap.ValidatePrerequisitesResponse:
    type: object
    properties:
      passed:
        type: boolean
        description: >-
          A flag which indicates whether the cluster passes the pre-requisites
          validation.
      statuses:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.Status'
        description: Status of individual pre-requisite items.
      clusterDetails:
        $ref: >-
          #/definitions/vmware.tanzu.manage.v1alpha1.tanzupackage.tap.ClusterDetails
        title: Cluster information such as url and caCert
    description: Pre-requisite validation response.
  vmware.tanzu.manage.v1alpha1.workspace.policy.ApplyPolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Policy to apply.
    description: Request to apply a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.ApplyPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Policy applied.
    description: Response from applying a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      workspaceName:
        type: string
        description: Name of the workspace.
      name:
        type: string
        description: Name of the policy.
    description: |-
      Full name of the workspace policy. This includes the object
      name along with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.workspace.policy.Policy:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.FullName'
        description: Full name for the Workspace policy.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Workspace policy.
      spec:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.common.policy.Spec'
        description: Spec for the Workspace policy.
    description: A Policy to apply on a group of managed Kubernetes namespaces.
  vmware.tanzu.manage.v1alpha1.workspace.policy.CreatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Policy to create.
    description: Request to create a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.CreatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Policy created.
    description: Response from creating a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.DeletePolicyResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.GetPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Policy returned.
    description: Response from getting a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.ListPoliciesResponse:
    type: object
    properties:
      policies:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: List of policies.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Policies.
  vmware.tanzu.manage.v1alpha1.workspace.policy.SearchScope:
    type: object
    properties:
      workspaceName:
        type: string
        description: >-
          Scope search to the specified workspace_name; supports globbing;
          default (*).
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.workspace.policy.UpdatePolicyRequest:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Update Policy.
    description: Request to update (overwrite) a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.policy.UpdatePolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.policy.Policy'
        description: Policy updated.
    description: Response from updating a Policy.
  vmware.tanzu.manage.v1alpha1.workspace.FullName:
    type: object
    properties:
      orgId:
        type: string
        description: ID of Organization.
      name:
        type: string
        description: Name of this Workspace.
    description: |-
      Full name of the workspace. This includes the object name along
      with any parents or further identifiers.
  vmware.tanzu.manage.v1alpha1.workspace.GetWorkspaceIAMPolicyResponse:
    type: object
    properties:
      policyList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Workspace policy.
    description: GetWorkspaceIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceIAMPolicyRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.FullName'
        description: Workspace full_name.
      bindingDeltaList:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.BindingDelta'
        description: Binding delta to be applied.
    description: PatchWorkspaceIAMPolicy request message.
  vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: New policy object.
    description: PatchWorkspaceIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.workspace.TestWorkspaceIAMPermissionsRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.FullName'
        description: Workspace full_name.
      permissions:
        type: array
        items:
          type: string
        description: List of permissions to test.
    description: TestWorkspaceIAMPermissions request message.
  vmware.tanzu.manage.v1alpha1.workspace.TestWorkspaceIAMPermissionsResponse:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
        description: List of allowed permissions.
      uid:
        type: string
        description: >-
          Unique ID of the resource. Coupled with FullName (RID), provides a
          stable unique

          identifier for the resource.
    description: TestWorkspaceIAMPermissions response message.
  vmware.tanzu.manage.v1alpha1.workspace.UpdateWorkspaceIAMPolicyResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.policy.IAMPolicy'
        description: Workspace policy set.
    description: UpdateWorkspaceIAMPolicy response message.
  vmware.tanzu.manage.v1alpha1.workspace.CreateWorkspaceRequest:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace to create.
    description: Request to create a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.CreateWorkspaceResponse:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace created.
    description: Response from creating a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.DeleteWorkspaceResponse:
    type: object
    properties:
      message:
        type: string
        description: Message regarding deletion.
    description: Response from deleting a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.EnumerateWorkspacesResponse:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace object.
    description: Streamed response from enumerating Workspaces.
  vmware.tanzu.manage.v1alpha1.workspace.GetWorkspaceResponse:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace returned.
    description: Response from getting a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.ListWorkspacesResponse:
    type: object
    properties:
      workspaces:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: List of workspaces.
      totalCount:
        type: string
        format: uint64
        description: Total count.
    description: Response from listing Workspaces.
  vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceRequest:
    type: object
    properties:
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.FullName'
        description: Workspace to patch.
      patch:
        type: array
        items:
          $ref: '#/definitions/vmware.tanzu.core.v1alpha1.patch.Operation'
        description: List of operations to apply.
    description: Request to patch (partially update) a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.PatchWorkspaceResponse:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace patched.
    description: Response from patching a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.SearchScope:
    type: object
    properties:
      name:
        type: string
        description: Scope search to the specified name; supports globbing; default (*).
    description: Scope to search by, any fields left empty will be considered all (*).
  vmware.tanzu.manage.v1alpha1.workspace.UpdateWorkspaceRequest:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Update Workspace.
    description: Request to update (overwrite) a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.UpdateWorkspaceResponse:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace updated.
    description: Response from updating a Workspace.
  vmware.tanzu.manage.v1alpha1.workspace.WatchWorkspacesResponse:
    type: object
    properties:
      workspace:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.Workspace'
        description: Workspace event.
      eventType:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.event.Type'
        description: Type of event.
    description: Streamed response from watching Workspaces.
  vmware.tanzu.manage.v1alpha1.workspace.Workspace:
    type: object
    properties:
      type:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Type'
        description: Metadata describing the type of the resource.
      fullName:
        $ref: '#/definitions/vmware.tanzu.manage.v1alpha1.workspace.FullName'
        description: Full name for the Workspace.
      meta:
        $ref: '#/definitions/vmware.tanzu.core.v1alpha1.object.Meta'
        description: Metadata for the Workspace object.
    description: A group of managed Kubenetes namespaces.